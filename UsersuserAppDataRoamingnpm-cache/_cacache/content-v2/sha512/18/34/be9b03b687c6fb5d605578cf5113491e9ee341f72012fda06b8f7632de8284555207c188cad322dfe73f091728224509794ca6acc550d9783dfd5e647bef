{"_id":"@strapi/pack-up","_rev":"189-a0684886eb54bb6360db85c73ebe0bf9","name":"@strapi/pack-up","dist-tags":{"latest":"4.20.1","experimental":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","next":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","alpha":"4.15.5-alpha.6","beta":"4.18.1-beta.1"},"versions":{"4.15.0-alpha.0":{"name":"@strapi/pack-up","version":"4.15.0-alpha.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"bin":{"pack-up":"bin/pack-up.js"},"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean","test":"test:ts && test:unit","test:unit":"run -T jest","test:ts":"run -T tsc --noEmit","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.0.4","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.0-alpha.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.0-alpha.0","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"682a070df9ef90f2aa6966666488e066d61831e2","_id":"@strapi/pack-up@4.15.0-alpha.0","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_nodeVersion":"18.18.0","_npmVersion":"9.8.1","dist":{"integrity":"sha512-R/BTszGEO3rtAhLXXP7KPtqKqYzrNK/Zr/Vbs0mWoYS4xfsZfM6oNwyMKcOCLFIEVQ8+KpGY9WnREtsrkOb3hQ==","shasum":"8c1250a831816d7f427aa5f83117d33585926707","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.0-alpha.0.tgz","fileCount":4,"unpackedSize":6294,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCS9xRH5ygx/Kaq4bEZVbxXwrII8cODPDcuBkbikwLRfgIhAP75A4e3TMdPdprc/ZCsVueXTHnWwQoxouSD45Bak1wb"}]},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.0-alpha.0_1696257183882_0.8016494300426502"},"_hasShrinkwrap":false},"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"bin":{"pack-up":"bin/pack-up.js"},"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean","test":"test:ts && test:unit","test:unit":"run -T jest","test:ts":"run -T tsc --noEmit","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.0.4","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"027d23730e6b4844b73607bb46f9bb6dc53ce51b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-3oU1JBRKJycyv1xcnSHnbVHZfGB9/yTdd/AajuPVhIQ7MEOCWE2aBwNHbszT4w+gNWGHbXEy2QqKwBRoWmCXtQ==","shasum":"971e799e3978d3681d8ea0e0b1e6e54c1824e3fa","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b.tgz","fileCount":4,"unpackedSize":8100,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDNSYYC1QQaFl0xV4SmtQEvl9abndaikKcqjFZvNFujawIhAI/1MANHb7K5YwOp2aevDmqtGOn1fKP9FCeyTkxfGBCE"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b_1696262871220_0.03664593639365066"},"_hasShrinkwrap":false},"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"bin":{"pack-up":"bin/pack-up.js"},"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:unit":"run -T jest","test:ts":"run -T tsc --noEmit","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.0.4","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6ddbb39543614cabc7a171ff27a1477e929e4c8f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\n\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  // the path to the tsconfig file for distributed builds\n  tsconfig: 'tsconfig.dist.json',\n});\n```\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-bwB9tj/J4E4D2FJRs4OFGsuZmHXs3Fmsmw800jyDo13x2gEqVG3YvTtqhbC5G14l9yTvbnybpUcyP18mubXT/w==","shasum":"8b46fe9c7970ac79aee40e4c5ed4d24a3e09a7ec","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f.tgz","fileCount":68,"unpackedSize":2229486,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCSfx5hy7j8MVYdEiH6QhKOXv5xmZLc0xBFbXy63YH78gIgTznBVrTY/YUuk6uNOyftLHUejvDslZHbwXCXxUEpkYY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f_1696264136510_0.74411374176937"},"_hasShrinkwrap":false},"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"bin":{"pack-up":"bin/pack-up.js"},"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:unit":"run -T jest","test:ts":"run -T tsc --noEmit","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.0.4","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-sZV/DZQ8JszqivgcLfJUWNjBiuBxQhVyuMTVdJDXMravDZTWHtI0Ik4Z/C4bkJVqRqc4KwOBpE8gh1VAYCUWQQ==","shasum":"0d7db7e0a4c9171495aef2fc6556df613b08f0df","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d.tgz","fileCount":68,"unpackedSize":2232291,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFovZZG9u4AzOOJrKjk/xENk2bTt9wRFhrYvsn6qRr7BAiEAxmWyI1vHNgyFKAeR+/JXxEhDrLgD66ptwOOkfG3wP94="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d_1696342165413_0.7346972347312677"},"_hasShrinkwrap":false},"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c":{"name":"@strapi/pack-up","version":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.0.4","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-0cxEvfvIX1fjFaWMIXS6iSkLXqY7YMH8y0kHJgZK5BrKBhdAIqMphizT0Dem1rswXPDyAx7k65ghzQkjFtmUEQ==","shasum":"bdddcc84175a14d23214555abe3201503648fcb4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c.tgz","fileCount":68,"unpackedSize":2253873,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC6p9OKgRTGpHLXs5yEKMx3J4zvCl3MBYtPlG6rOkwaxAiEAvNpXBMlyyFnpVoxRiMfMvUFvOchrjapWDqLskz9DXVY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c_1696638338025_0.9122346207079375"},"_hasShrinkwrap":false},"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a":{"name":"@strapi/pack-up","version":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-lm4HoJ4K3Qrp47q5tYeDD/BdCC4HjoydI+nKpmAGmqvRoUNgjbGczub3/HIckfkqOayRegP2ZcB0ckIqTGW4yg==","shasum":"d8c92398ea3d6dc059e3b72f886f2ce174810218","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a.tgz","fileCount":68,"unpackedSize":2253873,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCu+1/UwuBW22TSVFOIDAsm1t0QcMAvn9yuFQ2JhkBKCAIhALSGfS9uV5rJy4wM41/am6OAuEVfayDmx2xxckVlHkLA"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a_1696897494760_0.5521517686708737"},"_hasShrinkwrap":false},"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"170476e0e602f59266b9b363e3436a0ef1ff9d3e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-7OPmJbWD5P7RomN1l6j8pxWnImXykxhowH0/lnVnOMfMY8Ih8hHtgJNNoSCll/wziD5JHqsmRP825v/YiOIa2w==","shasum":"fa4ad066fe1a58c5ea5ee6780d90c711bc864eae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e.tgz","fileCount":68,"unpackedSize":2253905,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDHkcD4bLysrQ2sa1teQKs/uPo0OnEEigBRORkD+hjQSAIgBD4NgSYm7ssjrZw0K0wh81xR4HOBre4zYjzMpwh7Rfw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e_1696931380531_0.504107446992673"},"_hasShrinkwrap":false},"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3":{"name":"@strapi/pack-up","version":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-pOS5r997/5RYah4Z8sgYYQ4NNqV9/n9LCfD3k2tI6xtp0RNgrXZLrXwK+Qgu3PkjRUZvlUlFa5sarhSQmuS7KA==","shasum":"51bec512e41b1626eb115f99427fa1dafdd0241d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3.tgz","fileCount":102,"unpackedSize":2275013,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDNMNgRn3SbY5Atpnzgc3cm51AKTZalDKMM89OdFZvRrgIhAJzzfqpkBtla/oMOkUuNjMI0qCOgzXrCMRlcLLwsjxpm"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3_1696983889183_0.48118581048715914"},"_hasShrinkwrap":false},"4.14.4":{"name":"@strapi/pack-up","version":"4.14.4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.14.4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.14.4","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"fbd6e3e3014b1c5eee1d7bb8d65e273318662656","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.14.4","_nodeVersion":"18.17.1","_npmVersion":"lerna/6.6.2/node@v18.17.1+x64 (linux)","dist":{"integrity":"sha512-HfWs1giUM7iK/OrdI2f1TpipttqZsx6V398xdotmjaNj3otZ88gex/AgUPPrH7fjrI+75EuNqa45yTVklN9/6A==","shasum":"49cb8a74cec9c07f462da5901a1a9d19f1eb8e86","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.4.tgz","fileCount":68,"unpackedSize":2253693,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH+L1os/ZpUXfNwCybDfTPKasNTdMIXguLmXb4qC5K4qAiAuIYSCo+bQ/M0dTGoSUOLxtWQVe481F/QlSz4Kw2PYTg=="}]},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.14.4_1697027607728_0.5657739778601945"},"_hasShrinkwrap":false},"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d584536ba41ac87f684bc2b64965d6493a07fb31","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-vr2vnpG9zK7k8HFPuCZw/8T0rjogj+3RXBEKXAuX3nltcE1n1v2y46c1gU/XctIPrWwbFmOa+3BOed2pwad1yA==","shasum":"19ecd11a6dd1cac7c1a42f80d7bc3abdb0a8008d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31.tgz","fileCount":102,"unpackedSize":697612,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFvK8TTSuL9FC6GRKljEkvOgr1HtYsg3vxe6loRyu7q+AiEAheOVX7LOLGhrXqEv8/IFuw4NhNa6wd6JDO2u+gwk68k="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31_1697208623063_0.21816183352083396"},"_hasShrinkwrap":false},"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7":{"name":"@strapi/pack-up","version":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8632eeaf18063ea063b9acc1b2771460123d84a7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-XmYLBgpzyGMkOtnmnAExVGHfseknnhSjk49hgxav6vOs6dN6SQCY9koOWCiUD6FmMceg3io1SFOgdaaMW99+cw==","shasum":"48e1990048ccb71687a5a4d80f1b7a711baa0c18","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7.tgz","fileCount":102,"unpackedSize":697580,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICaM8BkZvNN+D75pWfbT8QMZoPeI7aJAgWNDWY4INyAqAiAOi/FZeVhd/Z5BgLZTIXsAJYJ+AqnlXMzrOEfjDmz1wQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7_1697243164076_0.3179061043591336"},"_hasShrinkwrap":false},"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":{"name":"@strapi/pack-up","version":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-nNnnT5syp8hzMlc/jMsNJd9L6lf0Xiv2f6U3UZxHfd34tfyIySTyBcAcSaYUn/+jGwicyVkZiWiWG8nxwGawPg==","shasum":"a79289f883ce25b6e9b5692000fa4907a168066b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f.tgz","fileCount":102,"unpackedSize":712737,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCzk65P4YLAj7L4szDUPRHxSI9z1T9xj4Bt0rQXdKuE9QIhAO36f2Cq2wRXttUQa0lenLPPWoS8B8G3J3QGHf2+Sl6m"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f_1697502337751_0.22389593543093267"},"_hasShrinkwrap":false},"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-yMdyHr82k6wzx/0FCrvn7ifRbddH0ecn0LZC/qvdlkMKXGpEMblKqCe0pv99s5O6FYnDrWofKDCNWglnUFx6PQ==","shasum":"f841256176a1933e7c6da8125d9229e5549444f9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f.tgz","fileCount":102,"unpackedSize":712769,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDAaZNukdTXXJnSlh4yC57jFJoVI8WWyFJiUta8o/EMOAIhAOjZuOLRvAe0CMPtCzpTLZ8C/2TSsPauThl8wt2PxhS0"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f_1697637083823_0.5744631843518531"},"_hasShrinkwrap":false},"4.14.5":{"name":"@strapi/pack-up","version":"4.14.5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.14.5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.14.5","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"a0400e4a0f47f8169b7ce31bc9087470c291209c","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.14.5","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-AflBpVyPgyzWA/g02dkrkcMg8Aaz88CAO6M/Q84nn3c8aBUK6oBVwccnMLFgs67jHpaOtJlaGlOlUZWi8vXF1A==","shasum":"a726aad9a3a25ccc926baf89079e3c146a3695d9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.5.tgz","fileCount":102,"unpackedSize":712557,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEsqjWEPM42GJauwpvuqetL83OxL+TJ9HtBmoGlehW4yAiAlxNpysqKfw7QD6tl2Wbitj+uqtKoWj3IL7GEHTBHROA=="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.14.5_1697641443146_0.4496765008076413"},"_hasShrinkwrap":false},"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-iFEarxUXi9vLov26bb30K5seYoo/+MeQFqWQiSlUkZYW95an7dCrjW357G7O0XwC2jBifGzIrjlgxJJbVXKrjQ==","shasum":"02a1976a73f86ffb8d36b6565d2e7078250a61bb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d.tgz","fileCount":102,"unpackedSize":712769,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDpSgDjbh05JIZlOySDY3qq3JZvvkdxOnGS+AAs8BwykQIgPdw/tGDKqt8/O+FMmq/o5nvoDAo/KPftso5QMbrxR/4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d_1698221341381_0.7808566629754365"},"_hasShrinkwrap":false},"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"1c15eeb66faa7fdb8d65baadc20d933045909aa7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-ays6HCOif0fvk0ah/ssRiqL8XtIutahCrrSwWBYzO1f8vTGdcVrK2Ancm5MGngbLHN0yJUwRKS7znweH4FLVVg==","shasum":"28c5bd08215b40750ab86e217a34e44088a4dbeb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7.tgz","fileCount":102,"unpackedSize":711882,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGjl5KvhNCNOa64Lo/IKJD6a0zvIBGt8gI/SZBUjXccLAiEAld0UAodK/o/WTV9hH9d6ZIxPGdKQnLcDXiSH6+1HCeY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7_1698238088440_0.07853539611982407"},"_hasShrinkwrap":false},"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6c317e275a2e8133090c4b8b90bba9bc85be72f8","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-U4lWwWu7Yd2xkoLE7uzNrAzPfUFvhy1FAbh3dAyEmF6Auj7ZWAHZDg7J1adCBoh772KKXMieh+rSz158ef6c2A==","shasum":"8d32e72a79f4a9e24c7d81324e8d843ed684d3e3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8.tgz","fileCount":102,"unpackedSize":711882,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAL9pbRATWaLfnjZQRRCuQpLg6+Pys7Lldh99uTbXgU/AiEA3m7uMYeY+qfiRzMegASS4Xlui1KvgQgwi21UIOsLLCI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8_1698239072898_0.08243119246155106"},"_hasShrinkwrap":false},"4.15.0":{"name":"@strapi/pack-up","version":"4.15.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6e44e1e68db5153e485e61bdc03f42efb0311406","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.0","_nodeVersion":"18.18.0","_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","dist":{"integrity":"sha512-GZkCokuukwoC6BMA5u51aYrekx5aJ4QqD2UJk7lnRzTr2SeNlBfdy8JBjHLoIs1UQttt9L9/kcgO+ravsPRBfw==","shasum":"3f1cb2896b3b6165f59bff4d281d24ff4639eca4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.0.tgz","fileCount":102,"unpackedSize":711670,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDvJQBfH7ftsucV9DAXfAjq/IgbzMBhPB4p6vDIt1zNoAIhAK43XC9GqYwKuFYqvvHhf2Kq5FXyMCv+LwMHTYfTG9a1"}]},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.0_1698239299074_0.9183846547504741"},"_hasShrinkwrap":false},"0.0.0-experimental.check-license":{"name":"@strapi/pack-up","version":"0.0.0-experimental.check-license","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.check-license","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.check-license","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6c317e275a2e8133090c4b8b90bba9bc85be72f8","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.check-license","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","dist":{"integrity":"sha512-x7DLfm1CWQLV7xxGUm4rgwxh7RThdrcCg68ibRaN+jQHx7J5aRObNTPGDDkt+CbrgFMBT2eEBlFRVn+7Ju6PFw==","shasum":"571c2b2bc890aa632f99ca3b1e0b4ab47b1562f2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.check-license.tgz","fileCount":102,"unpackedSize":711774,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDLt5fRDXoCRJdYzWDCLfPO1fmxOsQRSJD7gN/h/5QUQAIgJfH6j8CtEkW7J5eW4MT9KXDZvxDUJ291ut7fVfxhfFQ="}]},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.check-license_1698240298747_0.6378038008312013"},"_hasShrinkwrap":false},"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d143dd949cf236a2d7b575c5d9ef0cd551113e52","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-KV/Sc21rBwtN5J7zBBvW7LKKOSIFYmcuU4OgeKfqGBR7GAIyYYhSmfpXlZE/H0pgoQ2u5Qd+Y3vbP/eVXtHu8Q==","shasum":"9503d4b6d97ad9f972f9ab833a70544dd46539ad","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDgd+ewsnbhQni7j9bOyrIkjfATXMwu1Krfpxtd2Zh3jQIhAKOgLJqhE1YXrAh8lb7rsRUPkpG52AFTGwJAynl6DXCk"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52_1698322053403_0.05995899591662601"},"_hasShrinkwrap":false},"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"0f4e7e399dec329437f52b0d6ba8f686341ac8d7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-WCxoOcUVAeqMcNBW1L4/smAinwLUJTXzi3Hcn4R7qwD/CY4BKb1zh45kGuBZ+qIvE/AgL3LM48ja9FJirXqJ2g==","shasum":"c6095904646fb644b6917781c071e207e1fffe03","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7.tgz","fileCount":102,"unpackedSize":713223,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDvw/YMvFc5Gpe7jjohcaWWd22l/Dj9hLdQXPwIt4+miwIgdgJOO2qdSuc99Ndq5nrhm6JsItkqrWYdH8DE3nq9JTw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7_1698329260983_0.9555103713291073"},"_hasShrinkwrap":false},"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457":{"name":"@strapi/pack-up","version":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"05b69f4d19809ae0788cd83d4bbbb93c63c5c457","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-lVyl6rdMyabfsM5nHxhqW4h1xhCiRIb2+qR8dL/saZ1YS85e2eDb8T+0gXTet0sCPmZdjVMa/f43LVJMdJzw3A==","shasum":"5f1324707a7b98ff05bb9450f687b96612119da8","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICFqeHJX7hqZkJ8Np6P+zbgHw50SEx4pXdXO6N6bSIxsAiEAhlknP4rBUX+Dgu3/vty/yqLhvvI5Hs322n42s0Wb4l0="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457_1698329972190_0.27992792700464486"},"_hasShrinkwrap":false},"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-srV+vee2pASQwn0h7XM17kA0bGDr6xeuxWwm4vyYAneMkogJnswABWlY9LzYDr9eVcasJbajErVExyZB/0vO6w==","shasum":"bffdaa5abd538020bd4d6326a82cd73d17115f3d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCGQp4JFkm6vfClAZYZhqmubb+mBHBR3ltP4KFAxA5+SwIhAJHT0ye4dA6NLP1Y9Lc9UtNAdnDbCZ/LkILiV9LDspwu"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd_1698331035743_0.8762946936801741"},"_hasShrinkwrap":false},"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"88489423b2233ad024782b2052e6bc88d808bb5d","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","_nodeVersion":"20.8.1","_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","dist":{"integrity":"sha512-7bYEYut6yktAB8fkq2aSdEjM2BJKOyfWT7VbZ0HlqGm/x7ZrHhT6wjLv3QLwf1+8qSR5BZYm6LAgPxOIP6SqNQ==","shasum":"f04c50fb7f3fd3ce14b836ef330dacf00fea2e48","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDqiQH/uIpzRPXR/vzyxj5nShdhnoLD+iJ89hJyMGjmvwIgNQe0izoQ5Oc2FhYVBpc8Yuxhj+Am3ezi7bvaxkRpcOM="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d_1698337737502_0.44396479956601675"},"_hasShrinkwrap":false},"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646":{"name":"@strapi/pack-up","version":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6ee826075dca196ffe945bf784c77c2bcc63c646","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-ipe0Ea6k366jZ11rxqvDBBYO2myN59ZJ4O+mO8prex7/G7u06ZFyUIAYFi6O6Zyp/iMi1UA9IZTGHtEiyrbB1Q==","shasum":"7eaa2cb89bdb1a7f5ce549352d1e203b721980d3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646.tgz","fileCount":102,"unpackedSize":713191,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCaK1Y0Xfn449OIUcvdDAIRb9i4Y3Wy63K76BnrdUNGmAIhALofZNjzOGTCqap9+3376GrmBjc/4VE9Zasx6pE/XnJj"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646_1698366261247_0.6993720046238867"},"_hasShrinkwrap":false},"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-WwNBitn4qfxfVQyitamlMR+C1wDwPSKoFJiXErjA6rFdwWtNK0VcssHVJs+wX4F7OKhMNuKg5oY+0uwz5487iw==","shasum":"f5a370865ce4f1d37c2aeaf1f7f24d3320be6856","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDi0w31XlKp+cWfilp9TjX+9qRT6xhdDVZSLrZvlLXHFwIgX9TH5BaJWiNyrz/8Af/WM+ImqdHJ+Fbw926LuyuaNEI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8_1698400822091_0.6582870621365446"},"_hasShrinkwrap":false},"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c594d39bd99186eab7f05bd9517adc6704d3b1a2","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-h+VC7xvHJJmdnL4LqcB5xTg73xyi4+vnmyC8DQvfwJXVlxnfhdHlCxzoaJ2oi2mZkKR2xOXP3lDwm1A7rIlGFw==","shasum":"62d31c543658d602551d17bab878e234c753eed6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2.tgz","fileCount":102,"unpackedSize":712769,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDz7i/IIyEC6rzi/bFbqyEgMMAmh6w1twPwc0Kz7eBZ4QIgEmTJODY7g4lRQpOqGYskHImgzYhqEmRp5MFX2LleGCA="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2_1698411829473_0.05876240692981893"},"_hasShrinkwrap":false},"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0":{"name":"@strapi/pack-up","version":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c7c44a121f7abc0c52826a7d310fe4534b8727f0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-t6nnCiSBMx4GDsTvxspn6YSVhxpA+qiqyKCklmumN4BhsWS2fJbg7lpq5GZmsvqaAN1E9C9QJRcaoQMXojX7eQ==","shasum":"8f745bd8deb7de0004947ff06d4853275621efc9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0.tgz","fileCount":102,"unpackedSize":713191,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIB50IEiGcSjobhnjatOniF1SaqPuqCz14lWJfnrUhc/vAiEAkAZVnGPOaGPprIXqEMn5n3zLfPJIpmJ3rxzJbIXKO/c="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0_1698452711565_0.18078964803476794"},"_hasShrinkwrap":false},"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"7150c563ca52765213874a111c32237ef1fa8571","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-OOBB/EU4shDd9/aRvrDnE9N+j7FTpqRzDD3KXAlci4akC+I3wE1Gvp1JI5sokXqXxWmA29l8f6S4SXQmknpWMQ==","shasum":"00b8ea2f1127c17a0a96f7ba4f013871e44a25d4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDXtZnTC7VIFLG0AdCc8VbrUbGsU09pWMRWQz5Su25TxAiEAkH+QVlFZ0hH+b1ZbdOBSGOL0qscaL6jRdWpCrYgCSWw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571_1698700764983_0.5091718128615454"},"_hasShrinkwrap":false},"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571":{"name":"@strapi/pack-up","version":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"7150c563ca52765213874a111c32237ef1fa8571","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-2U321jQc3PIUztJbhUTZn81ZM03VNa9PQhOKvzXxI49QzzrUVGrB+yzMU4BcS5xzTIQ1AaKSMGi6YFI2K52jYQ==","shasum":"c6c8aba54f0a846612345b43b7186035580d6ee4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDw5AHavbMiU0aSrdQ55QD0DUFBbu6cU7ZF+d2Y3x0C9gIhALROygL2L8eDdsBKvP8pYbWnt7QXO31v8YYtIrQwrxR3"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571_1698711912381_0.7137665883257689"},"_hasShrinkwrap":false},"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-LliUzJp0mj7Ir3GiKtayb0zgjO1UXpbxXiVXbx/UKvrhQMjLoS2BYdCZKy/ZAylwYOOAx6hkY4Bf9d09Zj71PQ==","shasum":"bdf5d8cda1de2fd7017feffc27c0aa6a1655703e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICYFF8J7eA2D01f1L71RZf/VpyICHJyG8Z4ibDOWj/rsAiAUWoO3uThJuNou8v9xQWTMXWzlUj977jUxtDBlhW1tiQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3_1698741115360_0.6244372464970831"},"_hasShrinkwrap":false},"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3161a2be47fc451d966219be0af39f2274eaf50b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-3eqOwaJavJPgWcjMwzuskLPX6atrgeqJow3mC5Iu43Z2l1YQikwL5evRWL5rMyAvq9SusU/mkKv0tK0eKf0tgg==","shasum":"5d0c7d1406aeb8697b4e154e7f5f3bee68139237","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD4PGB9+49sfod79J0SIQzIUxnUroO9BV3GktSSl6FTfAIgFdPM4Y6cB8InDwy0SBLo+1HIMGuPkKcr7CSUVv5F8TQ="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b_1698742218282_0.26488896272357554"},"_hasShrinkwrap":false},"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b06a72a02d782efad2a22511763629f1e919fb69","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-/JhWB6qc+uSLnXGbUpPeo9qnzeKYxGPXqEQi+L8Q6kdQlei9AWKrg550hLwRZWrw1fNa/GcUdYO9W8LyCsimIg==","shasum":"524ac214a29aa50adb04733ff51bde9f4e340d30","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDuVFylmMT/YLv9THqggkVvmDAUF39QBg9ikWDOGQeBVgIgfnsADsjgHWgBbSgkwOU8znqWc1/liFxg56nVQpzdKNE="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69_1698742433922_0.6483671323987772"},"_hasShrinkwrap":false},"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"9b513a848f62b2329748c692e15a460b63b48a4a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-nVX8Kf5JlqMdlpZfyPIApiJTQDnOtgEVtBgmCjAYipuKG3uUAF7sKGUb7DktB0UsNj0iXtSddllJwsdaztMF+A==","shasum":"fb7a136164fcb6c2a175a1654db9f70b1093153b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID7cSDWjg01wAtBtIAtSGQDHU7rFgJCkeWLPIhqXuaxLAiAa3gY1Jte8n3RqTslRO8H/JnHQjXeQjfPCIhw9b6Cq1Q=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a_1698766660710_0.4086343118299993"},"_hasShrinkwrap":false},"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"56d93b4478ff454ccc95198a5b830d260c9033a3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-4/7/gqItWR7/jws8It4kW1FTZE7VMVh6rFmuVIHrVCDpCuFT/jn+eSHmQk7oJHY3k4ISZk8GwobIPTTbnPVU/Q==","shasum":"b637c030404de7eae2211eb236875c70eb66928a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCrjVE9jBo/28wvmv+uuDb627J98lS8lFzXA+JxYpje7gIhAP8Y/Lr3gLtwapHWLOmNVv2EIv7eGG4A9jm0eQXcWx1M"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3_1698769684968_0.5317988868215289"},"_hasShrinkwrap":false},"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a":{"name":"@strapi/pack-up","version":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-c4U44JqzUBmQxQYaH9wRFjK1Iug8GwnVrVIXGSsMsgUnHd+621kNO8Fmw54u753vR5xkteBrrN6alnfV9lQI4Q==","shasum":"1d6664100e9f938cbf12b845ad0fa1d8f99ea726","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDWBRddTy97Phe2/46a5ru3n5IBi3Ktjdl/HYfmngkkXwIhAOMwwjVZNHGAv6gUgpkcWEdw4l8cz9eIhpf8jCIKvhU2"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a_1698798418505_0.6844063631994508"},"_hasShrinkwrap":false},"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655":{"name":"@strapi/pack-up","version":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"82d0e5b059e9729154be315253d1dd378a043655","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-J75T1mi+rH3o9LVZ4CeCjCIhu2YrJI4JRQUvUBzMO8Ab/rUyHbu9x27k+5fhlCFmCgd055p0yWk2007S0y7Z9Q==","shasum":"efe3add729f50c8dd793ab927b590ff8e302ffb4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHIxX9iijQJ+tWhHVHu3bfQjHe6Br2614099DQ/73Q1eAiEAw0xXC+Lq3VHwZZyOMm9zEn1ZUQgyW4r+bI3XRkLyQq4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655_1698934500747_0.7613370073973229"},"_hasShrinkwrap":false},"4.15.1":{"name":"@strapi/pack-up","version":"4.15.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b6c085052f108fcfe47d22972a664dfa85aa0358","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.1","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-5eRxfhavqu/nYZMvOlIAT7UFYLYdyoW3kxtvxx+nRdI4du5KWahHlz9XPrBL8eWJIxeqe3+Cv2+Q5OziP7bkxw==","shasum":"cf03fbf7a0f969befba0fee33a73bd331819a535","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.1.tgz","fileCount":102,"unpackedSize":713237,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIApU8PDfQnPtanQitt5BY+5Wp2V5jw5VlCfP63hzWnkjAiADgcjUJKZ/o6u6umA+CKzAx6xX+MFNfVV7Wuf96rAmfg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.1_1698935319726_0.36927659310329397"},"_hasShrinkwrap":false,"deprecated":"v4.15.1 contains critical bugs. Use previous or next versions instead"},"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52":{"name":"@strapi/pack-up","version":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"361908b952e5ea663fee441dd163722ff6794d52","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-rZr5d2YBzW429j9FcJLoFw+eEuxtdHc3ylcCKlB+Pczi9xUN08baOB+lHiB0ImdpywyNLDXtrwjAwmArfwGywA==","shasum":"1202148d2f0fc271ffdf2ade67c3149306cf621c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDIBDHJskVmL1yA3K126vGlQNbHTh4vzWZSu9VMhb99hwIgHMQFw6JMdwcnuL92LREc/oCs/8iTD8Z0zWVfYhugk/g="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52_1698940499549_0.6012513400425428"},"_hasShrinkwrap":false},"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd":{"name":"@strapi/pack-up","version":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d482633e774699cc8d4e05531deaeb6001e791cd","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-xudimrtXXhcj7dBbWaYARSi+xzmLpdDctwwUdcRBK7mjo9yZh9JIjn7U3LGh2CQwYF5l6hgSCOeeGZTqqTHdxw==","shasum":"e509276668f252300d3c0b5be19d0f9c1de39f1f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIF4zxI0PrgICB6JeEo3DX9O392JWb5m5gG4dPcwfNqnZAiBhN6E3/G7gXDqygE3gWslOaBoUjYrdhVQgHTuEIRXMDQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd_1698970919602_0.8157385863437472"},"_hasShrinkwrap":false},"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-VXB9wVb0o7hgkZ8tyPFM9jLr3qkYVXKm1OYi+Lc/D0TxiBsDeynf+8WYN2lmLyJpF+Ugh+usEud9wtSrcrvMmA==","shasum":"8323d8d4e4083674b0f2521d486fce9e0b88334f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDf+bIIIEgK4XrKOT+uDu3/K5g39iOEPfAO/UOZftzmQgIhAIGj2wVoDxentK1QhmkWjNytdrxkiuwbQ3Qyl8HaAfnX"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7_1699003060128_0.36511009696913144"},"_hasShrinkwrap":false},"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888":{"name":"@strapi/pack-up","version":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-tXSU26Fnj3XKJD6u7CCKgSJsriVniWu+4lfqnyAYN4fXcpdPKO1j3HG5W3eTkeYryaZQ7c2zAx1JEwhC8TVeYA==","shasum":"e2d1ee2b9ea54717ba01692a8c28df4789a5f208","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD0dmyajAvn2eYoQQkaQW/7xNzbbWNtbWJ4PDnIETyubgIgdn0/xpcml7bEUd7nN9wqSsxZ6sMImAKW3u2JHSadsfk="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888_1699003254664_0.34605258147684026"},"_hasShrinkwrap":false},"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"ba7a1366917db762b91226b7736f425d2afcba4e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-UY0YpyUEhRwX+v7OhALNVW4/OM1U+9Ro7k8cMFvjJ03MJNaJtBI8UnL1fyfSxGkC+AVV7wCYa6mKb1/6sMVRDg==","shasum":"a71bff88815a8c2e3fdfa4a4eb82a1c057850783","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC7hien648nw98Eh632pX9EiPWa3MD7MrEZVJfQnYiTgQIhAIX8EdVT/dUl0HdxNoC+9T15LRRih++653dwXr0S++0B"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e_1699004691619_0.7205213116287397"},"_hasShrinkwrap":false},"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f107a49a8122dcf1999d1291b19ab6847209bda2","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-WYtYcTpx057JqRn+0NGHNCYlSexL/fQ4eFRCqhVL/M/SBPb+bVrJ6qE1wVpd+OOaI3WRvA8JDLRw6p9FFNrPyA==","shasum":"7b7e9f680a93b4910c21a91a16c6b8031ae89a92","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH7U5sJxSlIaqB0+kBB/7FelhPxV4MZLagaFl3dvnBfbAiEAhrcj7xDn/DL624JzzkvnFoX9ReL9kEBdt9NSmv5kXfg="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2_1699005648995_0.04709526983724066"},"_hasShrinkwrap":false},"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e530e7d67b0d9a518f41f501d1aee63455516044","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-RIJCsE0PsK8LafIJ+QhhzdplY0BP+2c9QpsZWMAE1A2wp++GOPSwL7emg8hQ7+etBd4NoJncVJQENI3ft2uDwA==","shasum":"f2b77dd82739641eaa76f544965ac64b60f495f3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCir4rKJmvm7ru9Lcl/nCLVtlGgFKBRfOyxYmU967SeFgIhAOCbPEQs68v6AhevuSovz3q6NRv99hJ4Ft3MvatgFQ2D"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044_1699009415572_0.19264133875445233"},"_hasShrinkwrap":false},"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-q/GRHJhia4v2m5UJkV9vjx4hTyY9ScznsDtUtSI9+X+rqGhg0e6/tV0g3SsX1ve/umbSRJYH0o3VYnKsm1MMcw==","shasum":"f290a56a90ba8c62e221e21e18a7f6fc3e2943b6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGB0C04Lk9MDwHSQRTUs2IDlCclKM5CJCYO7HiScYGtBAiEAnmvaeubuF93dJX3INWQJbPkZvrhd67AamZe9Oj0rroI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336_1699011025043_0.42440816146514804"},"_hasShrinkwrap":false},"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"0e69461383292883156617d3d81ae7e03f75dd76","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-CfxN7NnJqUO2OcVB5FcsAsaEZVSm+wlWqP+drKiaMsYzN2CX7uTGhyqp8Z12IkxbCBIAD1tpXRczo/mj2NsH4Q==","shasum":"9ac85a5c05e14e50d1ca55b8dd0206beb1caf98b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDyg6Jv9ruTpabOyurv639NKnoaQ5q9Y8NaAlwyGzmMkAiEA9pk4ZuCqPjtRE6qdn3orOa3PuR4cU2pb11lqH0otD/I="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76_1699023859001_0.525331945730948"},"_hasShrinkwrap":false},"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"1a3c6a749103fb5f9416579d47e7ed2239fed710","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-7hvW5hYtPDxOK45sg1ZE+RJpPepR+jT6LueqEbGgqIjZOq0meZdf6ahe42MttKFKscZXSu5LzRLCnXaCcl1SJg==","shasum":"e7dfef3fc7697aa744a940c839cb7e64c113713d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDaZww4eTTFNY/Vk+Ox3As3LjfKlxfhp3PATVFmnu4pTQIhAIag+MAwflwKb44AMTKI/zl6hFubP6QVZyhVy+3W9H7n"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710_1699023906767_0.5133573982733919"},"_hasShrinkwrap":false},"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218":{"name":"@strapi/pack-up","version":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"464db9cf2080552bcbd8e8b039a9da10207fe218","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-kPfir+t0UEmyvs55053QbFGIGo6gYSFOyKG79ZAmUDEuAI2qzlQSWTllmQEsQFZ/scNsrY+HO7WBXv/JgBKYPg==","shasum":"60cb1e84d45ee76f10176cc37968ba5971eb9774","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218.tgz","fileCount":102,"unpackedSize":712769,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICbpM/+Y7aKBCJcPZaSlDTRKaRvBIZbtIFLmOXA0ruu6AiBUzIzT4+731AEqyAALW7K4+FZgWS5mYPv2za8OIEKhNQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218_1699023988039_0.7936871887693284"},"_hasShrinkwrap":false},"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-Hou0Zrut/qEeR5mzUOYdG4Ypwvwt4H9B9ji8JO5F6oB0hlnh8TecI8gzB29hcj7seVj5XPXjgMZd+fxfJr+8wg==","shasum":"685ddfbbaebe6cab735702ea791c02561da31aae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD8bGilQRqNZ4QYtPFbYm7oEHOQiKcQeEf9plelOPzkQAIgG5lSHRExzTNz6KODG3PnhOzHmsXfLlTVDpmTIrVEA+w="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b_1699024233977_0.48884254560429174"},"_hasShrinkwrap":false},"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd":{"name":"@strapi/pack-up","version":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"51d7ab04c19ea5b592c633b116a61966aafd7dbd","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-Guuw/HDmeTVRX9fEidt1H3zTuJSY9J0hsgH6okoDTkhTj88YW6cwEVje7r3GqzfS6w42DxDWggoTjvI4uZjzrA==","shasum":"e981f4fe70b0258edf6747e864d3ee5c430e7a65","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC4wHusOPozeSIFWTHd6/bZfZL4ukXDk1X310PwySA2PgIgMjwUy/8/jUgS56/VPT43xxiVga7g+9IdNM0JV7Xaekk="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd_1699025565478_0.0099893938339366"},"_hasShrinkwrap":false},"4.14.6":{"name":"@strapi/pack-up","version":"4.14.6","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.4.2","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.14.6","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.14.6","rimraf":"3.0.2"},"engines":{"node":">=16.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"574e25daf919a547554c96eb3697759634ccbd6b","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.14.6","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-lODlLqCiCukbaDoQ8L/TCCF9r6QTw7dGs6ZbWJdsjZgKe3bIixyrUh49z128rpRuhVeBIhwiXRK7PwQrWegbQg==","shasum":"986fd79eb32cb9f3444ed5830b8174892d598f47","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.6.tgz","fileCount":102,"unpackedSize":712557,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCWlwzWsRWia48BVM27inC5IGWPDylmINwBVZn0AEcSYAIgGb1wsi+ge2nQ6WtJDUmvvm37vlXtdG8mVRrHvsYX4h8="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.14.6_1699027420047_0.15214194247564916"},"_hasShrinkwrap":false},"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088":{"name":"@strapi/pack-up","version":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f5b09a8e61e059f02784478e27c310c6290be088","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-G+J7BETRS2XMqkcAdHr0UE0eG4JajJYekNsi6xuqGifBeIHss+r1z5WWpzHGBgAIe/tZGDiLrbsBkvPviHnQrw==","shasum":"26955e175204be3afbf8f9c8e9451430a382e8d5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCWsRbrtDPDd85oEF5xP51tbUlkOiOhDpI5/diBhxBq3wIgWgw4mBhg4rnHTirvx9yTwbtQhkio6C0YybR60btKlpA="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088_1699057416420_0.11935003636036012"},"_hasShrinkwrap":false},"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"03194ce5a38172d044a20569a606986987d6ad2e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-4MEG7Van4L5fdL5BDI585S1mTtl7OFy1EMoIkxWb54TiyO37AhTy0wlDo7dRuGmuFlNCH++HgS0PsEU9CzS5eA==","shasum":"00828b587f6763176a230c131e804b614a13b73c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCmAZ3psirkNUf7FLBpn6bTXGYvuvA7qq2wHptVVx8kvAIhAN2uJqdhvIw808PaG44sWKSTzEmwAsRYXzOZ51sJIkBi"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e_1699278157820_0.4608983760076346"},"_hasShrinkwrap":false},"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642":{"name":"@strapi/pack-up","version":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"41a1238745776fac59a271afaab180cf06ba6642","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-DWqk4qJhZFWJylMS0pHQx2fZxLV9T7Reb333/HesaMSi7+hTFYbkgHcmH67PEbyc1j6jOCarrJfFq/4G613usA==","shasum":"06a7d744bfc6d9bffadaedf207167fdcc2a6fa17","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642.tgz","fileCount":102,"unpackedSize":711882,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC4nDDHFFloFL3IpY5yA62O26QYcZb5CD/w7p7Goe+8kAiEA8AsrrQ08sIdRJzSGlUu1xlP1gEq+xlE+dWpETAd9X9I="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642_1699285497047_0.35901777274826485"},"_hasShrinkwrap":false},"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220":{"name":"@strapi/pack-up","version":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"02973d45cb703d682fe23dde96c66f256ce31220","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-tTyR3wTfHY8bAARXnzNw1qnhbfrVRIXKQbyp771xb+jEGNg+uRUDNxJ1s7XPVA0ptJAxYnP1O1FCJAKXdFeMdQ==","shasum":"edf118e1d9da8d21f1fdcff2e19fa9b9f45434d5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHS5oJ+WTwaN3QdI+WsK5bePhTghSPGwtmvssvfwKDY2AiEA+aTirYOkkDw/HX0+rFNFabQbMsK/XPrwLOwa501TTVA="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220_1699316718613_0.4035516665594081"},"_hasShrinkwrap":false},"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"7ec817719c13b9bd44985548b0256a8725554aec","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-U+m1OHe88+T4rz+bGW7j1BYRmBOBQoO+REBPRvsPlAXpwaW+Zgn6g8z098krD7DBpID3OGpfST/+hRhPuAdENQ==","shasum":"2bc15bbd1ae9cab4d6cc8326b135212b8032bd47","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFOGJ5WRuyO0ORBZJk3WqftXwoLyPZXhuiB1cxTlE7aNAiBLiC71lU/0zGrTPtWVF2TFJFI+4XPzKAAs1Uhz7Zbr/A=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec_1699352272842_0.7938758075964008"},"_hasShrinkwrap":false},"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12":{"name":"@strapi/pack-up","version":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-EW6ZKhqGnHfMZM9PrT5sbak78Fh9HJET19WvxNP/bCDUK3pDFQmkNxiq3iZR3R62Orz/clFjBbv7uhK93RpmDw==","shasum":"1ad6806306b98230957cc5229738df6818a78646","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDT0D+4tLxOewJRazjNXXyYSCVLhNpyIjvf7p8bsTt/mAIgRn1/fCknW9Gk+Ub7VAiQlznA6Z8rkJ5c4vTipGhlcEk="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12_1699402902415_0.1847619466516346"},"_hasShrinkwrap":false},"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-KHoABbi6ZMROvLJH02eNNXPxiPbBeh8LNkJVIc/zXxQlh9L8aO7N2AC+td4Vnyen+9bf9VFTJQMA/3xESrD5Ng==","shasum":"1c604f81d9d21aade7c03c19df1927d3926c7e3e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDM4q8v+cVvj8hSf18koqtl8YWzB/foDKY9DPvbGYzQPQIgfKr9dkeaY+ikJCCbjIevD+XNx0hSUfl6lsAdatJVyDo="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf_1699450162984_0.19393287876601573"},"_hasShrinkwrap":false},"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-zJLe3I+ncZGgzD/fFWFUNfQbUOMABnSiAHDE/XWtkCNoVX0TXVAWihiiOdOR5q6oGI20PjDUyyyQLNL2h2A9wA==","shasum":"a84590842f704dd273328a96dd9852e020d52c0a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDGnmCs+4Mxv5IMlZWFl4xkoIb+Awuj7IzhxxF/SGke4wIhANH2f6R5EG7VxFo8PLAWVooxUX9IzHJi+iPuv+wu0Pqj"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1_1699453330924_0.5119593243891774"},"_hasShrinkwrap":false},"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f413c089167fb3a7629b7b91cf3206dab81bcdce","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-dAg3MBfSuWPAi9EVdCEccyZ6o/KNaRKyzjNFfNmKIbXOEnpcBqOo7amqWNb64zkohEcppRtJqd9Pnmqpyp6ODA==","shasum":"48c5718257c0dc57270f164d3f77091e86ad63f0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA4q0qoS136m+avtUyREdTgHSiimsVymi5zlnFM+mHglAiBEr6byqPhwJcI48G48IjMqSvGNx3xUMDhSrAAu3VqIVA=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce_1699454993408_0.3651668573613045"},"_hasShrinkwrap":false},"4.15.2":{"name":"@strapi/pack-up","version":"4.15.2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"bb510893332674e2607f7d335b34dc78c599319a","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.2","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-2CJ48m3jJIPjX3Z5uq9kc4KXbmkks6I9/ddRvCtTjbSEVO4BserhPk+3IdSCA1rLMozlUwrb1Vcsi6+tyrgPhA==","shasum":"b53243bb011a92b71c33c855c58062a13767700d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.2.tgz","fileCount":102,"unpackedSize":713237,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHdGFQwgp9/aJtT3JTV/avpLKjqDi5RC06OuQW6d3T8fAiAqBbYgxYlSO9BQgHyRUu+EjOTQoH/Y23/rkf6LcscF2g=="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.2_1699457377578_0.7330534558047312"},"_hasShrinkwrap":false},"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080":{"name":"@strapi/pack-up","version":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"5c5ae949bfec6a57131caacae14a36e8c1465080","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-y9/4+e2VriW3iygPznKA4rwnoXlkUIdbK6JMFoDUqFSAq67UXLj+3N/rszBmx1EQZoTWPHTak9MUaVfFQLAaGA==","shasum":"e8e359aa829b9be6756bff41335fee1944847d74","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDqp3BLVW+XKsdNJqMxhyONttywn5nh1wJ03ohbHM/9kAIhAIHMfRoA1P59SGmXzlGLE7yRa237p1B1qa9rBCCU86OA"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080_1699489326310_0.9484876371026243"},"_hasShrinkwrap":false},"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472":{"name":"@strapi/pack-up","version":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d999ad0b00ff427885462051cdc96626b7946472","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-dkGo0Mf+ub5LMU9WuW7vvp3NKVErkQKzQMC+z5iq3+u+2hl+TwrT2Rpq50ZrcOpmKkos11Wg5gSOHffS0eE2dw==","shasum":"798675a5ae09485fe767692e92097c92d17805d0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFrHiTMkjSRQU4siF0Dc1L+Z6QTg8oio5GDGRGj12peXAiEA6xbxfvytlTJE8G5iHY3sXCTtLJslmWOtMq2DbVe5LBk="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472_1699575958266_0.8508182598519685"},"_hasShrinkwrap":false},"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-oeThJDkvmq9q9FFNd6zE/CZcPGdU5RlPAfJS7/GDLFFKYP8vl/w9N15PVsXC2+r644iKD0cUUI4R0deZOYh8mA==","shasum":"38527be7164a16457974cb82c06f0d151ecbe950","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCD/FpaFCOScaSymZkSLvvdBBsp1WnDE6PMizAHOQ+JLwIgMFNJnbpXSvbKClfKJ0k21Ue8c/7OQuRxMQPtGy3DQgo="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15_1699612687050_0.5220205437306233"},"_hasShrinkwrap":false},"4.15.3-alpha.0":{"name":"@strapi/pack-up","version":"4.15.3-alpha.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.3-alpha.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.3-alpha.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"81425b4b9803fd4df570e050c40dd984ebd28ac6","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.3-alpha.0","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-H5xSIEO/LMYjAWtrxjhT50KOJ+OPesypNGPu87ATnkRKY+IfnxUMGU66/8WCujdopMpQOPhK2Ntu1vSl55vMLg==","shasum":"d6c33f6204e38ada5b668513c893097341675d0f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.0.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDsQKd45kh9nW7f87x4iMPnzJx0skyNfV92HSuHk/xHeQIhAIumGdjMEVzeOhCRz4auv0jsiQ851Ocnrv/pmzyeXgMK"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.3-alpha.0_1699697256925_0.164381314733552"},"_hasShrinkwrap":false},"4.15.3-alpha.1":{"name":"@strapi/pack-up","version":"4.15.3-alpha.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.3-alpha.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.3-alpha.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f97b1b07338a7b7be70049777861b4b211b403ab","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.3-alpha.1","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-RrB9jQYTiHpmz1ZnsLrbtgVblEWKfI3WuTladULIfv/8suxkgkT0HOwf117dgb9aO35vcql/Su4vCFUHEe5bKw==","shasum":"474bf5fb0a2cde074fd8d95bcd9fa91b7ef1589a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.1.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCZCoc7Zvlq8imLUM9Up4y5Dg/BPQwbDtz1ioXMcmD0agIgPSUnwhDYDnTrp9gLOnLmBguOw8MOpBfPlfhxdvFM9RU="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.3-alpha.1_1699698733988_0.44043977639088094"},"_hasShrinkwrap":false},"4.15.3-alpha.2":{"name":"@strapi/pack-up","version":"4.15.3-alpha.2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.3-alpha.2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.3-alpha.2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c25ead026bc34d38bd962f8b7f42fdf5263d3895","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.3-alpha.2","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-SJWS9wvrHZRnmZGxo2CTLbIMPh55ogZBfXtQSZO2w6HDmbyNjWvM8xx0yXANy8ZTsaHe+tWkHISSFUtKRmh1vA==","shasum":"964ae66efdafbe894ce32a5c7428807dad5f8ae3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.2.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBTil4jQL2sOnSTcyoErYAI8gPcwmjrzHB4ftr8OuEVHAiEA0k8mgpIfPn6cznyuSObgDQ04hsZZuR4nSmb0TBt/yOI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.3-alpha.2_1699699236846_0.6432937208159508"},"_hasShrinkwrap":false},"4.15.3-alpha.3":{"name":"@strapi/pack-up","version":"4.15.3-alpha.3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.3-alpha.3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.3-alpha.3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e52150bf32037a703dbb71c6346ae1c15db17284","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.3-alpha.3","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-EAhpGFfVRAS4ONlPJhasG99DAdNNeuBkXPG+s0no/zWKEjf6zvUunzmc9VY+EVt+plF9juTobV+P9/xOtgQBqw==","shasum":"862b46eb7a6ae3a58a55c9487114977c5a9f7fd0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.3.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGyYaZYWq9s4btWkKdEkL+xTrUMO8Piv6AgVd0H3fhOvAiEAyB5BD4QVDj7ZapXv/cUv1qLImW773uC2XncSPRg1xe0="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.3-alpha.3_1699699701160_0.3747059375345345"},"_hasShrinkwrap":false},"4.15.3":{"name":"@strapi/pack-up","version":"4.15.3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"^4.15.3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"^4.15.3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"_id":"@strapi/pack-up@4.15.3","gitHead":"458516e434d53abc2bcdee50a15ac23573f374b2","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_nodeVersion":"20.7.0","_npmVersion":"10.1.0","dist":{"integrity":"sha512-Hyos7G98/8KI2PS8psLB/Tx3WwAZOJw/W87MUgbbpagIEcqW6tMMFacAB/FmodHWgedmToSS9OrUhrvCk8ei4A==","shasum":"df657a9f4ac20215d2ee6a48d229d0de8a098d52","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3.tgz","fileCount":102,"unpackedSize":713182,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCm4fKH5r1VVujTU55o5Q5T6i1CNMYlCCDNnhnnCsRDyAIhAK9PLJ4jnWK7gggkwBETzcOSvvOgaBeZv0I9OetLmQN4"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.3_1699701164589_0.5373788578691794"},"_hasShrinkwrap":false,"deprecated":"This version is deprecated. Please update to the latest patch version."},"4.15.4":{"name":"@strapi/pack-up","version":"4.15.4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"da634b09510db5ec9ab7163670ae903f44929752","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.4","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-P5lMsapDTZAcIPlhVfvH2xtwYL5AeZp6KfmtnGrc5i5xaj8CqNcV5eIsxYL5Bk9IKJPKwf7zrgt7nPcHKF3BjQ==","shasum":"308f1aed77826d02dbe10fc2ff44ebcb47c58c50","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.4.tgz","fileCount":102,"unpackedSize":713237,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDnJdqb2etHISQhOzkAVSTEFIL3hz3lXOp5ZmbWEbKIwwIhAOrMBE7BSoJmaAKZf011JueXYslgvmsqs+Rr8yQrvPOs"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.4_1699701601291_0.10834200291671303"},"_hasShrinkwrap":false},"4.15.5-alpha.0":{"name":"@strapi/pack-up","version":"4.15.5-alpha.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"ecfbf5ede664b0e56f8dd828fd26bd63903b3d14","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.0","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-EMYvTKAJRDQXYnDBvGo4GiWA1tc24o0LO2cGydbV0smz1zPnkzx50TBT513/U+O4RMUmSjb/blgVy6JgllxBcA==","shasum":"ce504e8e88b6a9274cb527b3af3ef7a26cbf39b2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.0.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDKxQlhzdHWEuBtWRCGjuaPAIKXZMMzj0haBYpdq1PDLwIgBw7J9oB9yY0hMC1yGVzhSxDU++wZrLeLmdO3uaWu5Z4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.0_1699896274713_0.2795134699024151"},"_hasShrinkwrap":false},"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"af5a6e37b234eafddc8829a9adbf27da30fa551c","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-64Muf/4IH7w87PBMzRy+4pIQ6WAQ6RrDgfGZ6MlEXRs/OX3zzClbHkT6Lbpw84TSaV/IbMhjwik5Eml9YLkkPw==","shasum":"d1b30e0a8ca0a1f935c74a419041d4b0f3f0f414","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFQrTH7dWS7qo9ufFcCQm7QV5NpN8Nd+Qpya30NCNDUYAiEAzqvk1YBdHrWBlMT1vLacDsrYAfixH5/S2NfK7gFJiS4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c_1699902053927_0.06614799609532018"},"_hasShrinkwrap":false},"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0":{"name":"@strapi/pack-up","version":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"175b72af9d270bf8f683fb6f0bb826885ed33ee0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-zht+TR9J6E8yGfSyfwsZet0BoxVqyhPwU8FqMQaCmM0diONqcvEtv7OzXAUu8p7KqokeDVICpyFVHHlWiCgeZw==","shasum":"e49cf3c275edefb5c5bda3e5c01979ffeb6658f1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDGbwPj9yvyJAwP6B9P6wRnguHNkWqf4b84r6tS+FcOwgIhAKHf6Le70SX1L1rwHGaei26MMWTocDxHJ/ZlKRLaFsD6"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0_1699921376489_0.52161671494466"},"_hasShrinkwrap":false},"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e52ced96a510dcff85d35ad0cf7ac04f15ee2484","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-f+iahoxhda/FySjM3ENNB1ToW9NKYZAef8OHim3G1mit/31vPxkBFqtwdWl83zvdl7R2RO58OPjOZ4dQyFpcWA==","shasum":"12d1d4f8a114b3f07e7d17efc10ef8a0aaa7939d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGX9OqdYKlDejeqIqwpjilqsAhZimxtePwezSo3+/idLAiEAp3IaVPnd7dp/beadP8Rl+MRQSvlKZxDdKlBkVJX0c5A="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484_1699966285109_0.8810020566221408"},"_hasShrinkwrap":false},"4.15.5-alpha.1":{"name":"@strapi/pack-up","version":"4.15.5-alpha.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"59aec6c474372383fcdae05e0c781c1a7bc0c5ee","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.1","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-nhO4Ieb35RlPisVOetd5E4C76bCnV3wC7z5nuLYpYsY5SErEUHuIQBSHBIkuW08esnuKQ9vTO8MadGlz7K3ecQ==","shasum":"15cce0f755036b33da46d21540b089a8c4274443","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.1.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDnhysccDaYeQZs5ToTwedDQoBp6Z8BGkGyB0VrXGiEUAiEAnDaN4RgO0ZkAq0luxIJezf2lPE3GtDhC3Fcox5fnC1I="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.1_1699970276446_0.6584322776857703"},"_hasShrinkwrap":false},"4.15.5-alpha.2":{"name":"@strapi/pack-up","version":"4.15.5-alpha.2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"180e3acca9f4bc3ce9f79c293a311b3791ffdd5a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.2","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-tZ5Fx4f3kPyV9pzxm6sJV8BUaXjgd4bQeQNSC5hGQDY9tCSmnpMBdJOQ4e/lsQ8DPijh7HXfxx1R38FD3q0udg==","shasum":"546e3b21d7489bf537d06fcf595704858db6ff02","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.2.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHeh+j/G4Wk+TG6ztdVhaxrBvk1c7/row57XO2g9vAGAAiEAiZEbeycVhrCEyUMbTXXBHfOkjrgyswKhrT5WJEpK3j4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.2_1699979190714_0.7771954952128439"},"_hasShrinkwrap":false},"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582":{"name":"@strapi/pack-up","version":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-H1PPx2YHItetYtER3lbr/MlKH8mEHSXFye52TDXnT+pvIATv69oRdpRhke8l5iquVbb0Ewng0zgxXq+bbcftxQ==","shasum":"757e754bd8f3de2a16f576409892bd5175430f52","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD1WvDlY8W62LR4Bni16D+nDhmhs3nVmYDzyMVQTHeyvgIgWI9YrE5xwf4BK/ACKj+3XeXQMRmuiDBI0yOgZMjdD0c="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582_1699995519871_0.7327644625975516"},"_hasShrinkwrap":false},"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52":{"name":"@strapi/pack-up","version":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8ec354cd1dac7ebd1e675a82238d1538ac678f52","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-R4WrvfUFS5wyotPO4hO7eMr6c7QwqwXLxh8O7C48Ysrz3i6BuZuC5hvx7UB07xivdb7PnIeVkiKlHZaS0kvtpA==","shasum":"a1043a63d849ae75fae71735ddbc19cfeb462031","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCoeG7YWngHkvoG7gXct206lvDwBtqJt6aAhUMTaYxQAAIhAJ4ToWbQbvvyiXAg9ALy4Z9At3/0Y52uq1QVlA/YehF1"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52_1700007800165_0.7058344034776636"},"_hasShrinkwrap":false},"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.5.0","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-yDG3zV2MqqNUCBMqTbmVFPQmC2odmYHrxal/8Hnn+r6f9+B2JzymUfgu9tvtH+qGmoAOouSlX0KLpt61KsQh3Q==","shasum":"8dfc11e4eb408dbc30f2ba5f445f83374de753ff","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDt5OB3L2wIg8eXjFLE1KvQLdXRg3NXAJJEF5bDsvfHpAiB8q7iUhBOLDlcoIXgfbeM9f+WDarBtBUkjzdT5UX5yNw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0_1700038340115_0.8928149369188072"},"_hasShrinkwrap":false},"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b18de920e1888b39364512c5ed7d03cefc236971","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-FGv0w69UTemgTHrCu393Wyssdg3uzZv1hTdMkuFChSlmuT3remSYBUb8eqEuXqey5yOaZpfpfu7n+ByPoOv/lw==","shasum":"153b5979bf18c7b8482ca637bf5276f2b11995a6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFZjAJ3btGePSUY+zE4ehA1e+VJQqxMppC5g1O32aTIzAiANJypW5yTAFJTJ3/1rMw8/5NuCNpzNpcBe4E729MNtDA=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971_1700040883142_0.919489639907924"},"_hasShrinkwrap":false},"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-A/GfoAfQL53q2nwLaPVnpmuevAU9zN7qrbdmTFPX2s8Ktg92KpwZGiFKTkeVtjAqM4OH9cnfEvvMakb+1ArZjA==","shasum":"c9b28bfb9eeceaf70e6dd540ff2e93564041eaa9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDyBiYZpUvzpTuaHnYm3u4424XrjLc5twX+K8BkybzBMwIhALAGhfhvvtNtUQ9LBVMlsKNSV4+w//iabxhXNVqSHnUL"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0_1700046365727_0.9746816452757328"},"_hasShrinkwrap":false},"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf":{"name":"@strapi/pack-up","version":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-4lw40nOhX/ii2hMMq/qbBri6JULfh8w+JtD3n6Ve67wdp0OGwtA5XHR/dGGQWtt0/YNQGrIaRIDwTASxzfufLA==","shasum":"36338fd85a901d76d0e2de903e8b2b7429c3f0be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAMESJUkK+y4T/q+/uJg7RCydZlghY4srKtWc0vOd2wAAiAq0NrEqY7VsrwgH+KE/mW8pekWRqkuBt6c3C4PLxrOFg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf_1700048267618_0.4107842871185656"},"_hasShrinkwrap":false},"4.15.5-alpha.3":{"name":"@strapi/pack-up","version":"4.15.5-alpha.3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"85efb4bfa37cbf434907dcef6959c541d2b74249","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.3","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-1jX4v8imFYoe1MjrLlfMBOb0EzJ1A1+YYBd7zjuZXUX4RJir9xUGSfS0+26dGSqxoPxvuKtS/daqAnlvzPiHqA==","shasum":"c2ef581685a115f3688e8083405f39ac33a0a39d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.3.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHSgx4v0l9opUcHwOeVSL417HyPMBWpIwyiRZETFlsRlAiBvZJZwX/FfN9T7xnTyGC4XaatRq3rqGRHLWsqhuh0GVQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.3_1700055575162_0.5845686988120948"},"_hasShrinkwrap":false},"4.15.5-alpha.4":{"name":"@strapi/pack-up","version":"4.15.5-alpha.4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6a4fcc93af2f8955e8f981da3d264561253f2a3b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.4","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-amND1BzlN03PPNpopOVk5HWd+cdsDD7ueHDUHZDzPj0WoEKwJH0T5mm13GDbJiN0DAlzUySo2pQ8RuV17IVcAg==","shasum":"8d676048a0e80d623e191f782138fa7d0297871d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.4.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC/jzqNLascZDQ9/qYlRJnt4K5cn/sww0dQa9Dcq0mvowIhAPr/Gb8X2vULS2if4JPr9a/yWM0jEm5gzn2alLlSIlSV"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.4_1700062784451_0.38939605057132565"},"_hasShrinkwrap":false},"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722":{"name":"@strapi/pack-up","version":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"5157894bd50e9803e452b5636d7688f7f3375722","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-JhaT6+cz+fZxAZqvcu4qN0D5RWxNO5V1sxQCPG9CEWm023+QMpb5VnFyzs8tHoC42FD8x17hF9OUM+dllGvRPQ==","shasum":"65c2c6f1548de581f0fcbb452cce803ec9d2e7fd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBoypM7kVShAvhbAAlNa/2Gf0F2ZhZ2d6gQ3gKM/6nsYAiApD3kFpl3r5H+5KMC2Ao+vAQn5oqaeK4CQgITvbp0uXw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722_1700094202712_0.8943413004934666"},"_hasShrinkwrap":false},"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c":{"name":"@strapi/pack-up","version":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"728d614ca4116060132514ba8c504a2d136c3c4c","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-K84SLXa5lONiPNCLFk99jblLxLxfDaisTYuIlUjFk4XaIdPyWJGCxYKQSeoAUhlTlMsT5S7MkWduEE8DamT2yw==","shasum":"2dbe314c502591db47a3eeccea0dad54e86ea566","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBfVBJN37P1SEq/eA+zNUSexsFhype68o6DPML40rP+CAiBYugIZAWlaAcQJ7FUwtLi1bII3kOpRx6uvlWcLT/RXlA=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c_1700180603617_0.20581312888870662"},"_hasShrinkwrap":false},"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"a30568e92be13a6f2611ccd2a82f0d0dce154156","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-Kr6pDynMtV7DCepbp8YtMGFfq5Vb2pc0qQGGE76OwxNPjip4XUYuLRT2uhsG3G8nlla1eqwevKJTsLTbU+wnwA==","shasum":"ee5c520511aca1d446f46b5189929ea28425a942","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156.tgz","fileCount":102,"unpackedSize":713481,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCSOZu1S6hCVjIMyxOOSvov3T18XHM7WllNl25+gpMogQIgZo5/lRVryi9d7U5HGVTrOjmx9Xdg0xJ/pv8O1m5eUWs="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156_1700231007231_0.07516873546954739"},"_hasShrinkwrap":false},"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb":{"name":"@strapi/pack-up","version":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"695d94a247a70cc02478c3341dc54d8860d950bb","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-W2K3YJsW7YZBZS8INy6TgqSFfbuFpqXX3fsrHgSMX4GFJ1hPRKwy/NNAN4/Im6+tawoPheZgyzCBpGQWKBvuAA==","shasum":"bfa709e8530ff0b9a06d17b6f1b5bd30cba78eb9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHbpL+Jg43k1vVZmLnqxNsmLxCLBdJajl5pe40LshEWAAiEA8MizxCoMDTO82qQP/0u7+aj+sUL0G2uQHndjAb7hQTg="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb_1700267006473_0.017132223838113525"},"_hasShrinkwrap":false},"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc":{"name":"@strapi/pack-up","version":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-XmkyKIaTtdCJ1x93C5L4Tf0t7sFGInrMibU0JGFjHQIvKEVdAgt9ubwVMWU/fCmuIMilW6dV9jnbNvav6w0bjQ==","shasum":"838d840af3acc574045b7596f9bc6d292486708d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc.tgz","fileCount":102,"unpackedSize":713417,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEjvzNbpFm9ehccBPUNhUjZqIqnZeF+2UCTAcyRFJOMMAiAFq8GUhA1LR90Z1brQ0UbCVP19sZW0IUIx4xWSu9T4SQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc_1700526265628_0.35795685887110973"},"_hasShrinkwrap":false},"4.15.5-alpha.5":{"name":"@strapi/pack-up","version":"4.15.5-alpha.5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"afe9e1825429e5d421311cedb027d109edcd401a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.5","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-zDpuzAMXEsq80Jz6iegwqrbaEXhLysO7+++lYHs/uSaK05GQEoe5upMEm5raIVxBEqy1ipG9bu/XZBfMEy2P5Q==","shasum":"584fcc39c851d0177c4626fe427e3385918be897","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.5.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDY0JdGN5sTmpQwTSl8wNAn+N5UlIWWD1+RQ75s50cprwIgQzTRUULtf/R+e2y7R5cmSBHcPemdrcAe2OJzphSJEjg="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.5_1700595458610_0.7115508899992866"},"_hasShrinkwrap":false},"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3":{"name":"@strapi/pack-up","version":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8811cfafd27e6318bde3951dadbe45dfe1acbce3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-4NLe2L1EIRyUhpAjWWg7TBJE5e2dbVM29pmdfbPvaV9VDfbbu+omVMpjRSHQ0wY21NI+oIDIixJCU7ESYvwcNw==","shasum":"1391c9a6410390ed2935f4ca5c8e2726d27a9bcd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHUIrp2+BRRnx7HPXoSeatxY/2s9UgbuER5VKruK6xk1AiA3WoJXDGOgUrSze1x3guYzQuCjjol/ZykSLHT55J5/1Q=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3_1700785410964_0.1776258337269372"},"_hasShrinkwrap":false},"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b":{"name":"@strapi/pack-up","version":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-dI0g1c+hzC61nu5zsmBO2RboyCL37TGDNCTdobK1erUlyQJlARbeyAIc5nDLGlwXYncBuO67yUCr2+LUXW5zMg==","shasum":"d1f103f1d98e5394be1ce631ba24b12c2f7b16dc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDwsi852leVADqVzseGrXiyrRw8mzeVUEQ7c2RgAe5+IAIgcZeEuqR43d6gUZhtxWBOxg+GHQXSl+JxRK/jB2PVRMY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b_1700871792655_0.8707700546665147"},"_hasShrinkwrap":false},"4.15.5-alpha.6":{"name":"@strapi/pack-up","version":"4.15.5-alpha.6","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5-alpha.6","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5-alpha.6","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"afe9e1825429e5d421311cedb027d109edcd401a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5-alpha.6","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-K0HDBG66jX8e/tYfky5c06N3hFlijY4LuWhJtXWkB2e2dQQFBfWiKVwzFDOACj6dPIKAcivT5SpHuir9iCFc/A==","shasum":"0d4d0f334e23b22c454f14b9d9b6373b4caba347","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.6.tgz","fileCount":102,"unpackedSize":713269,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBd2Oz+xieMuv/tkYnhmw/CsNAPElAgFRba2Nqo+mbkMAiEAu1Vq/kS5ZE7AsRics+KUPbiNVWsOUCDw66woCyvCmYY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5-alpha.6_1701076729892_0.6252485390094218"},"_hasShrinkwrap":false},"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097":{"name":"@strapi/pack-up","version":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c9130a2ea39288aa524421ae5a00aa87b76bc097","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-8vFEVZpulAxBpG/ZFPNxveEWBSOjLfDb3Qm9XvNh1RmyxyGGb3tNMSeBEdk9bBi1ebT2Gd9wW8T5xbwqQw9TeA==","shasum":"b8d5d4c908e0ef9ef5d040b61428f07fdbd1b006","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAmw65AaWrcQvumWT8WfMHcauuDGTLDKxqPPNfzB0cr4AiB0YG2qRAiU8c/JfX7jtYf0sGQ+Nbiyj4Fl4Gx5qcBIoQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097_1701131049183_0.3323059820073906"},"_hasShrinkwrap":false},"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6dbac0c205b0f8495781db5706c18cac1a62e62b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","_nodeVersion":"20.7.0","_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","dist":{"integrity":"sha512-te2Jkt7zH32i6/25wjyX0gf+lMK20isoVqk+Iytg+sjW1L2dmjPl/yHl6YI5QvybqOqYwLYbEwV60wRvyBD8eA==","shasum":"fb63e6b08868363d73b6c9642b4ac5381d12403c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b.tgz","fileCount":102,"unpackedSize":715536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCxMiqRIKEDE/QXiOWb7eSnsXTu9jlaFa1Pr+TmfSt92QIgCUNt7+TXifImtHYEHB4x3WKUJU/LIcqLJluyt0tdlZw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b_1701183647755_0.8511366321573448"},"_hasShrinkwrap":false},"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09":{"name":"@strapi/pack-up","version":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-tIvpCkNL+vrQ/99RBf/EOMRNOMTT7588RshuYXJKx6D06x7JS9bovh0sbiVGCsR8u8EOsn0LsPvBG8QCLh7+ow==","shasum":"4d7d2a8f1495c9be2e56ee780ef416810047ffae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBgDWKowGc31zKgpgLMwS2pkzDbcuRNlVjzXYtR9I0J9AiEAh8jhMswWgqcij67t4e3qZKB/sW1TTYfQKd8HMUN+exo="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09_1701217439252_0.3385641561483115"},"_hasShrinkwrap":false},"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127":{"name":"@strapi/pack-up","version":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"9e5de363e3dc4849e916bb42aef8a0fddce70127","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-4gA1VtNVtQ5/Oa20ZIzcvBI1a3sM3df5gNxMVIcdrp2jDp4NR0tw2Eme/eFq+ttbX05EdxAfbAkH0h94ZlluyQ==","shasum":"32a61de1f0fbef30a6c695e908272a612d25542d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDOLkVDUxdwv9gmrZYA1n/oiCd3qXmK570ulWuCjDM9XgIhAN4uZMPEvl6w7q9/UtTg0obbsNGPRTpkGHZoc2dnUXKc"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127_1701263935360_0.1486306712174248"},"_hasShrinkwrap":false},"4.15.5":{"name":"@strapi/pack-up","version":"4.15.5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.15.5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.15.5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"dc96169c3f41dab4ab75d828d3fb39dd1a2dae27","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.15.5","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-qxHSqUB4BpCxvh3wdYfaqRrT3vXti4jH78i0S7lMT2nmJoPHsdgwtsThoqm9lYp7TN9Xqcu9oda9GOoAnqL0JA==","shasum":"deeb600666fbc3c3d0dd33c1b015303d05bcd654","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5.tgz","fileCount":102,"unpackedSize":713237,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDE3eoiu/v4CW4z1DCwxJU7JfUju95r2pVRm8V++RJYxwIgFIzdMHyiCC4TVUHFcOK5ArTzSvmZLppvP33bQNsxQ3M="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.15.5_1701272729076_0.1648966640001921"},"_hasShrinkwrap":false},"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b":{"name":"@strapi/pack-up","version":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"2611986c0db117aec91dfc12a07f7b24775b609b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-7tZIO5PrqJ5oLGu84QQLemfWb7HfZnr61k6T5gYgmb7cbDzv61vmZ80fcmLVD/GG4FzeUoAr/EFzjgMOmDU0JQ==","shasum":"007bdb7b09406031d102419c531012c42656a98f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDzJjQf2JuIkW6kzGoGQ2+NtiDpUwXCVIBLZi2gMQUBTgIgdfRpG0B5eerVoirdg5cZdM/rGudltpzeH/uXzT6bWFs="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b_1701303841581_0.7488420894154593"},"_hasShrinkwrap":false},"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173":{"name":"@strapi/pack-up","version":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3301d58a39e2554dbcd016c398aaa62609fe3173","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-sqB+yEatHgxGm7rC9vpbyf8Vvp3gLbkx+rWmjZY8vYvHQe4XlPXu/bYyDNBMwm5SQcL+iFlvGeYG+I1ye2GQLQ==","shasum":"c78c0c3bc178f14cca7c1248f9494c0530cb1340","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCTuqIusdU7pjrZeFNDYFsbznFFqnhmSd83wZieUugsxAIgIU3AGbNl1EaSIW4ziww9huCM9TjmkyEnHQ2B+kinUUA="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173_1701390360013_0.14989282207429433"},"_hasShrinkwrap":false},"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5":{"name":"@strapi/pack-up","version":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"865fdcc5d94352d43f1d1cb7634d0556de79a7e5","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-J3Q5HdLD22ahLiCY8+tkmr1l51USzYKHDQPJwDY2BiLxDfF146dgl4FBagy7qoaqDm0zMqqI2lwszng9ESCFSA==","shasum":"9983473198b44d9822ae736be84cc3644280d084","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5.tgz","fileCount":102,"unpackedSize":715472,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE9WUMwqFHYr+Ls0MoBHssmwDFjPZVhDVcaCHxs96xfEAiAtVd4RoeDybVchvd9Fhaomz6ZFkeLBVfBHcsc89H61OA=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5_1701476580318_0.5977771292891332"},"_hasShrinkwrap":false},"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-zwS+Q8dHS83RcXpzW6sbULJxXU4NMMcqw7AJY7F4gElmd2y0dCRN8KdLwUsGTZP93AnedYHvTPFXLL0JxWXq9w==","shasum":"7549e90a9268e565011fb3e728fcabc206b064a1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAqrtxpD5JlTKR8msf9AbyIinADl3o2qsyPY0TtZ3YtYAiAnqGYME/MSHI7I/jRVMOr1WdIpVhy5ScpGzO72nX9BHw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4_1701712769378_0.42209900565762926"},"_hasShrinkwrap":false},"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"1337050b5f44165b965996c0ffc1372cae2c77f5","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-TtJQtZkBCmfQx9PIrUsS3tjmRj/8jD6Z6eWjUvLceScBmpCwbEOfDbn8zP9nCKi9+UtO3kXSNh1oD7fPqq9V7g==","shasum":"6df56f5089d6f60b06e57579fe485bdf13365d8f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICKgv3wRqh33lwe92UO7SRlD3E6da8rKrLOMSf6d8FnVAiEAiPRL3fg9rPXEdowQkpA6O44mb4hpFzy3/23JL0Xdelw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5_1701890946174_0.9331166084111879"},"_hasShrinkwrap":false},"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-0eXivLwjZPJwe7isAY+JyBAwKuveEEmy538mKQxHwx3YpDqTOo+5PcRT5HoJfIZ3l/eu8M4PCbKTLDjbX43ukA==","shasum":"4e42a3864a21cdcf92558cac10acc8331f339d75","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDtxQimtZ9Z2StvOuFWgso6Yo31Rd9IOdsSTjiYGVp32wIgfSczuQ1Gwlpe/wj87O8NC+eCWZjXgyyPhROtSEA5z+c="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55_1702031328735_0.18524097481974167"},"_hasShrinkwrap":false},"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-v2bQk8mg0l2apytG5wIuvOMI+p6vIybGoeIwQ9PqVlBsLAyPHgz3DMvtStxXlricb44xkawAPRSfw0oDd3QlIw==","shasum":"6aa1ae6b9859fb1c792554563772708692ddc1e5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDvL2SF25uRD5ZWhtOEnsd7/Aoqxsruy/OpLlnby8TDKAIhAJ53Ky956RJXs+zlXXytlquZ0YR7ZeO0UpdLxqLA994+"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6_1702047255613_0.24563763077673295"},"_hasShrinkwrap":false},"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"af0176cf2e8b90e8550f1099a5ad7509a737dd1d","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-W9rFJDTOn1xl+AJXSQMpUvbpQ+APNCEfktw+/W4FvUp/YconWguL3Gpkz5mAEeNaj9fvhn/JqdN28xXB5ZmJkg==","shasum":"7e19f410a2371e9b647b7ed59ef291b0901c6563","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d.tgz","fileCount":102,"unpackedSize":713449,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDXtZXQbOwASVckhTg+bpTYer5Guzgm8ek9qL4itFLl5AiEA+jy0wLtIwHT8ajiVkOfYyzmB5pYpFG7B5ffRhJBpGuI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d_1702052008386_0.6329769211092111"},"_hasShrinkwrap":false},"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"16a54daf6a3e687d54fda4065a349f30931498f4","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-WI0toG2YfT4fws6ZzTUk+SN4M1eIs/x+4TwwsIGGggmYh1/WD44sJ4DxgZJYnRNb4/qdLqGf+mjmub2RTZ+gYQ==","shasum":"598ce84bc63eb9f1461c1cfc7fc49f685571dafc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4.tgz","fileCount":102,"unpackedSize":713446,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEutwp5tuyVVZshEcmf2hDVMrM26pQYptu/obiQU7pb9AiBKoh2paj5mVr+7UrNDU/ljIH5lSYcbQBS2uWy4NLbthw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4_1702918908588_0.5125424730484258"},"_hasShrinkwrap":false},"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.2.1","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.10","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.10","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b80973cf243bf8bae143be1230d8d463545204e5","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-EqEAMIkR2fur2Bc4G/L8k4JrnznAU6jqJ/Hx3ODi2rV89jtlRFW7nQD/37CXuqpZK9mUw3ujam6qseUaC7RL1Q==","shasum":"5edde6a4679e4557fec7968b1ecc593d3d4026a5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5.tgz","fileCount":102,"unpackedSize":715880,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCpQmNbEkehWvBAFeT3YxLm9VF+iJWgNnv9/DYABYoi3gIgf4R3lDc/xYxLoMPK7yKgyrCENU4dF/kVm+4OeiRrcTM="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5_1702992460547_0.9786057344958243"},"_hasShrinkwrap":false},"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.2.1","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.10","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.10","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e28520c3d3ad22e806666fb4e3cc049c1d14345e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-soTgLzdNhEM4YLMVyJkwuOMNaaJs2z9STEJbaC0cLJbvV2g2KHI9oScdCo9QHgbc1fiqTXfowWOJ5apaP8GMcg==","shasum":"a56bb95b2abcca97152754c1ab4b05cdf9b8639c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e.tgz","fileCount":102,"unpackedSize":715880,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIATW/8no1+qRjbWS8Mu1qQvOhmEH0Fi3hA/nuLJM4L1gAiEA5180WL3sjqrWJsemdslNvf9At7UOt51dK4Na9T4xXDY="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e_1702996211168_0.6016476842775491"},"_hasShrinkwrap":false},"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.2.1","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.10","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.10","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-XwGXr077nIPE3ZD88jIs6/0wP3Q7VVIETyJbSSur8lWMKUf+41mIUUTgKrNFx3NuJhsGO3wDsSWyWEC6pXW5Sw==","shasum":"19808b79dacf407cd80d6e76fa502615a5ea68ad","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970.tgz","fileCount":102,"unpackedSize":715880,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDI90TRXzp5zYOhzVlvJptUsUkyqO6kiczo1Gb5gCXgiAIgSwisljVWztBUPC8b3N0TzWA8597aT7hcgKmFY6GuQPU="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970_1703002895239_0.07960454850072951"},"_hasShrinkwrap":false},"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb":{"name":"@strapi/pack-up","version":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"bdcd983c3daea42b321cb4535ac7d9fce93b32cb","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-iOD6c6bzwv05r8/VCIZPGD0vIquGv9WhcEHdXttlfmawqGx3rUv5PWaB0n3uqVD2xhM3TpAgUZUW60Dv0k/rtQ==","shasum":"b981e23a29ff854d3245a7ea6f6793568553941d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb.tgz","fileCount":102,"unpackedSize":715854,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIESGNA2D0hlxq2s4glCqDVzM/n/mXrpWRaV3wwYBMmS9AiBiokpsHnEZE7xgcz37t0Cjzvr0cp2+B+o9QgHQHCtfCg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb_1703031628094_0.5080095203072987"},"_hasShrinkwrap":false},"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"4473dccab539275f7b8d04c8e45d41e92a5ceb86","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-+h+rDzltQdnyk6WpWXyTqWapZMnPP1/C2fWZwX4B/mM96wq5R5Q3h950GgF78mM4LCl5pQ7VBhNppnmKVIIW3Q==","shasum":"b4c0b86613036c030cbf5c4eaf5f510d21cb90c6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86.tgz","fileCount":102,"unpackedSize":713446,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCOTg/dpIEpdDiKVY3o4rCFcc+Q4NV5qw1kkrsp1pBdGwIgDQpBRHunKB9WH3rezCWFF0g5EerR7Dlhnkm1dxX+YWE="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86_1703062437664_0.3265461307806612"},"_hasShrinkwrap":false},"4.16.0":{"name":"@strapi/pack-up","version":"4.16.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.16.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.16.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b8acb528cd7a2c45467b3b84e79c10f7e652a844","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.16.0","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-gLY0pZicNKh6Bdmy3Tcq5x+GXk04RsblYV9hu5CzyF5+wiDNTin/uWzN0bn9pe9ySj4uqaCjEmTI3CeptV/dAQ==","shasum":"bcebac2d3ccffc4fcb9089a9fb1ced406a1d64e9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.0.tgz","fileCount":102,"unpackedSize":713234,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICBbbrgDdMUKFnlDz06JHdZUOg1MNPmcn9dsBGOsKRtFAiBjdqTlrmFtBZdIqdmj0Mp0aLAQKhOC2ce2Qc/Xnk8i6g=="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.16.0_1703084109815_0.6616245055507306"},"_hasShrinkwrap":false},"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8a2684845cc94b5c8a7a440047a7cf416dcc799c","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-ZesTdgpUC5/wl9kht0NIgWWu0e4/rBUsrTEni4UQRqix8pkrY+oFB64nhVyZL4KU8GPMNagcEyLfPrZcVg1sGA==","shasum":"95b548703e306361d65a99b98c9333b2b5e1db54","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c.tgz","fileCount":102,"unpackedSize":713446,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDZke2bl2lIUwXyze3tV8kAY+VsDYN65U/th71hXub3uQIhAKOpnJ6b9B/WR5KDeWC/GcH1j0Q27c7ch/xbV0KynYBU"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c_1703164625187_0.9558967251775183"},"_hasShrinkwrap":false},"4.16.1":{"name":"@strapi/pack-up","version":"4.16.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.16.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.16.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"af13d4e0562a4dadcc00401fbcca9d345686b7be","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.16.1","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-lRi92qc6Jl7gPqiUuT46UiEclM7wkqc4XP1YfWk751EuTR9o/QgdLF5LMDw8sO3G10u2kq6uuPn1epKJz/deSg==","shasum":"1d4b429a35a9f99f93afb1314dfffac5f856a921","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.1.tgz","fileCount":102,"unpackedSize":713234,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDfXH3C5jV0xGrUU953b0nk1UbJ3XaMBX5OfH+VgYoWSwIgUnKXvtyTkZnPvZh/kMWjYV/hr/2ECNALSMz27mqvdfw="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.16.1_1703168785699_0.01714140742024073"},"_hasShrinkwrap":false},"4.16.2":{"name":"@strapi/pack-up","version":"4.16.2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.16.2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.16.2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b887f1aa475e6e924999198e2b645bec323ba29a","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.16.2","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-jZNwDOQTK+wXMNCyJIzumW8w7BivCG4B1LK+jyYXTomwKnwkvLLGvJZtUdgY52a5ogJyLHKaecKhbskIuT/Fsg==","shasum":"66a6a9c7136dda54d08de9f16a1cf0421c63d099","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.2.tgz","fileCount":102,"unpackedSize":713234,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDLN5frojlr3+HZWRHwgd7gnk1MmFpO2udVrjZUK6D20AiBavD1UAi1VODpIbKp3ZzzsMb8TU/JE+q0skHlqqydIeQ=="}]},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.16.2_1703170523270_0.9232177404272957"},"_hasShrinkwrap":false},"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"900f6992da839ba1aa22c8383e4586a2c72b72c3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-GkgpLsPDXkEJZAydf0lGmLK7QLvtwblLXQhDLeSjNaQeTjmOCkc9kbjtMSZbRFyY1G7dpGqfUyg92J1wautY9w==","shasum":"18e6af47dcc21545fc5b94494db9e187e26c715c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3.tgz","fileCount":102,"unpackedSize":715878,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICqNSnD0GexVq3opPRbZ3hbCjCGS10YOaprRnt3NnEPuAiEAyjdm9TKZaMhf8TT95Dkccxz8A/NJ10J+SiYWa8Ar3cM="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3_1704182344552_0.30709943861977473"},"_hasShrinkwrap":false},"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302":{"name":"@strapi/pack-up","version":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"551df7a4853baa4a8982ba2db7e61f973a6cb302","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-5tBXyExKPE23lVehjb407iLKy97gCjPTBfY4yWbjaGg6oHYfDDo6KFe+m7AU3TzZEKNQNdd8zvMLu6Dqod6frA==","shasum":"4b43babf23f4903e29cc4bb8bb6c313eda4f6f04","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302.tgz","fileCount":102,"unpackedSize":715875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDiCiY7XX+0yBi4cyaYawDwUxbHZ3irbkMjPwEmLiZT2AIgdlgwQ3eI431a1W76OG7YBHFhc4FLth+xXFX6HWAuiYw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302_1704203920311_0.8520255816573405"},"_hasShrinkwrap":false},"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.2.1","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.10","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.10","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"876a032c480f51563719c2fe8e4739ba9981f1e4","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-7wuC7JWaXZDgka5fq6DH2s4ZxkZNsgTyHwrkQY0Db8B1k7BijRsfQoAVW7li/82moxncCUL+6xJ9nr+vD5Q6Ig==","shasum":"e8f6a786966d93a6a3458b5407fc158093601940","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4.tgz","fileCount":102,"unpackedSize":715880,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGLXsif9TghH+qrFv0+NLN+jCqTw75Em52TcX/2T6HBoAiEAoNXAcULLGfx4bGodSNx6IlndIrCNNWZW0SdtjUjgUYs="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4_1704216563262_0.08549078535971422"},"_hasShrinkwrap":false},"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2":{"name":"@strapi/pack-up","version":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"22f3123e946861ca798a41335ec80df6e68352e2","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-aqV4PC8fwPytBea3jKoKaRMzmslgjaTFq0HMWqTkcLKZfYQ+KNkydKtRD4ZQ72lrzNuQevtveJ05r7vE9ofifg==","shasum":"321b2885da4b0863ed93658c9714d6d978bcca7e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2.tgz","fileCount":102,"unpackedSize":715854,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAlSdZfETHP85axsiyOvlonTcgWAukBOPP7o9VdVOjfXAiAOI3Me+G6pNTtzyORKYCFMQP9MEI2086gCk2Ll7YIo+g=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2_1704241405267_0.9794364900609174"},"_hasShrinkwrap":false},"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141":{"name":"@strapi/pack-up","version":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"06f8ccf3e5180799f3674e001e1a5507ba1a2141","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-/FHQxYHfJ5SABwU0IcUW4w2WuWifJrhymNVyLsW0Es9XHZBuV+Qhu28cUXvU64jAICYeHeg+hUZkzzQa25oCdQ==","shasum":"c303a347def7f1a99b924c4bb087bf4d75f5d8c3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141.tgz","fileCount":102,"unpackedSize":715878,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDFeoYzcive2t2ZNYk6ccU52UlMQZiG8ajZIP7OhjIxJgIgZH8x0uD4FZQeifaQ0I7qtk2kw5vrX8wxEUHnEiUFpU4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141_1704281466258_0.5266110817022331"},"_hasShrinkwrap":false},"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"dc0644f58f68688716958be1623823bde2e615b2","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-9OjJivuPltFWiUERnLJWQFBzQwEu0Ra0oD4/Yzn4KC2w6bcN2fUZ0slCVPYsPRJNJi+caZF2sU7bp+ODNOBgmg==","shasum":"1aefbe2557e339b062bfcd3ab43faba83cfdf227","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2.tgz","fileCount":102,"unpackedSize":715878,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDATs6cALQ8yH92hSDmq3D8HByk89ikmmta4egVmbjAqgIgAUAsI8w7hIFl/1Gppoi54bm4+UEecdOR/pEMrZ5KWEA="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2_1704283149892_0.35987372554369923"},"_hasShrinkwrap":false},"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"ee7ce0c5504288647d1def0760e416edde96a4b5","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-dXzXzYVaZwIwriLDoLFWc7P6tsN2kPE/zq65vd06gbMzb7SgfCyUSZn1KcGyINYjLQ/UcV0m886RdsvH6OZnBw==","shasum":"667d404c4b4f607600b26e6185fb901cc8cd2888","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5.tgz","fileCount":102,"unpackedSize":715878,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDW4NQcTzGTF3jP3NNuej422tblUOo7mde7ZmzpQDMh/QIgJxJyJNUq1AUi/2oicqmZztDro4opobsQ/BJx7/Chrs4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5_1704285151124_0.8299993072447398"},"_hasShrinkwrap":false},"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"81d72dd33765b4aa300a092f80857287eababa0a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-RyAViXDOYZ0RJ+t9ahv+a5OQyc3IDPLzen8LXgsinVkSC1lAz++FIW3864//uD4W9SNpVRNWL7/uOKBAcSf1YA==","shasum":"89fbccb2fccfb1684e93e4e4996d251905278de7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a.tgz","fileCount":102,"unpackedSize":715878,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHaD1KeMZZzQHOXwQTRq5VHFIZIUp7vWx/YM38/xjxBFAiEArOjeN7nAQA5PKGduNxkTmLMSxCHSe3SFX0EVntTDhEI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a_1704288117757_0.122352754272538"},"_hasShrinkwrap":false},"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599":{"name":"@strapi/pack-up","version":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-4Qp+xhabohihBjNABiafzavIDlbWfaq6pmjv7NgJK4aKaCMutH7tSBO0UmfMxF8w/LG89/UAAmDNt0GgOxJpsw==","shasum":"8a7a0323ecdd84ba14347253dda8a4227c61eeaf","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599.tgz","fileCount":102,"unpackedSize":715875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFJeoBeA7vnsRflIa6IdTt9WkZsO5xxASz2hHa2EE7WsAiEA+piTbR9iz/YsgsnqMRD0jEV4KzrwuzYRQCVnjcPZEc8="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599_1704292107356_0.29721471151772993"},"_hasShrinkwrap":false},"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"950b677f6614f483cde77801d941607d6847a6e3","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-r/NBmYJ7PxO59SdsuBKhKqltK0iF9ORxpGsjMLw0aiAT/QJeauaWmnpHV3VsOlz4Wi9B2rOUfVePlIKT6+ttGw==","shasum":"8a53b79f9c4ae1d2a5a612fbbffcc87718694910","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3.tgz","fileCount":102,"unpackedSize":713446,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDRMNC41YDK62+mBK9MUTlOJOrRXJhVJ0bO+eSYJFqgQAiAi62ZuCVLIyh3L1QasVMDKEWpM/zaf2A82LMBRl2zhPg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3_1704316597202_0.9466937741424666"},"_hasShrinkwrap":false},"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9":{"name":"@strapi/pack-up","version":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-VLNVK8i2PzCV7gNo3qBjX754jNI8Uniwfm+Nlv6bTqBs1p+OKiVTwt9dBKRcU8XkP3BvXkPhwwqtIp/3lbO7jg==","shasum":"ab2bc809093a0dfd7117d77cfaa098959a70d461","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9.tgz","fileCount":102,"unpackedSize":715854,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGnTk3Bl4FrwUw5sXqbNaQb4zsq9w52Kq31ZqADaNZL4AiAQqEx1faHcfDn0ZodSv6uaMeqelnxkncGuaPNeEdhI1A=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9_1704327839464_0.9071172380588701"},"_hasShrinkwrap":false},"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","prepublishOnly":"yarn clean && yarn build","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"29255bc953ad5e2ca1458e157bdf55819b15696f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-lHgO0bgbwq0lqdVR6Huvj/kD4sk3cuoSeJwuzrOhIhaaRfE7HKqk8FWL/Igx4xbTyVOtraDlCha2DVdFrmAs6A==","shasum":"f2aded85bd517724cd7cd01bdee50c25e3da00af","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f.tgz","fileCount":102,"unpackedSize":713446,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICpxPEFS1RF7UK0HPfc6B8LKlNLFNZ/wG/fmFifjmFIUAiEAiLfz79bhIRL/is/fPEYEf8cBBFoWHp7liaEdSnfmRCM="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f_1704397604237_0.35944385238515686"},"_hasShrinkwrap":false},"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-gnENlbnCtZE/XCeY7Y2ghklEDc+32a1+4chWAAiEsoamfjtt5EwHrAZFHY0p8JE7Z4+JVvG6Owuwxy9/nbi7/g==","shasum":"2557f19f7f7d998f9d48e9b8bafb9a2232df8e6b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1.tgz","fileCount":102,"unpackedSize":715875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIF1V0AIyGlbNT+b5asYUPAMHGpAp8Kpxt4HdimxNk2r1AiEApu/a1yuqrUpLlAPOlAY7X8gXqmJFSbU4DNOUmhOwLl4="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1_1704468990777_0.58799382895101"},"_hasShrinkwrap":false},"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"f7b9b47085e387e97f990d8695971b51d7f7149a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-+yBVjIrPegU+BiB6V00Otrxb01uSY8G2dvYm9MlFxnCuo0Sc+ed1F0vGFi7sXf0ln7HAHRiGifxgPkxoWTrHAQ==","shasum":"5f5d6f6707c47b605d87775e447c4549010f4289","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a.tgz","fileCount":102,"unpackedSize":715875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDHpAQeHa1szobM2oyFMdeJgkmpympZngrnICH34gDyxAIhAONe5JjvTWNccbprvOmzcbFFmpcLnnkPEMy0+7QVvsk1"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a_1704893088877_0.5368670892571952"},"_hasShrinkwrap":false},"4.17.0":{"name":"@strapi/pack-up","version":"4.17.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.17.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.17.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"07112073ac7b4ffee57b911a13981bea3e6930cf","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.17.0","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-TBrsL+7Vp9KiEB+wVQ0lkHj7p0563K6mvP4e01iTEI1tzDAA08pYtUY3mpyL8fQWJWPt8qZPt+rk+3kLAJiEqA==","shasum":"aed0ae64c26e127dd800b7445e1b4be9959a3883","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.17.0.tgz","fileCount":102,"unpackedSize":715716,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHh9Qua/v9L8e4lNpVeczXKcCiyp5K4SUzu1aI/B+D5ZAiBSA1VV8DUQux4zfRLegvnI+6+rI2kfAJAMlnylJnHFgA=="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.17.0_1704894496433_0.6667555334202966"},"_hasShrinkwrap":false},"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90":{"name":"@strapi/pack-up","version":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"09b9d36b22a205d90c9303f2e37134938cf76c90","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-r6BuLDxJ7SqSrmiuuNci/9QdrnZRRw7fsH/k3/J+/zF3Vih6D4HcAt49p/7BN6c0qRij5+3rqZTQGvYMvV/qXA==","shasum":"73bbbde178f09568d4006a5b7f7ea4a226149dec","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90.tgz","fileCount":102,"unpackedSize":715851,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDuOLukChhwQM2gKtlUL+7LiFgA5SJL7AIEXCcCiamLCAIhAKXZscP1Isud0qsQLKu/tcyF3mWQaCmWQqauvqRLWZxD"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90_1704932631452_0.27971743737611554"},"_hasShrinkwrap":false},"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.10","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.10","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"5e40ce9194648ea13fe5221e82e4b94cc565671b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-DPW+kJ4nUPMDoBOiv2u3kbNPGs+IvUx4/e5P3CK+oVVv06lQF/bBN5Rxn/XH7tJMFXK/CDm1z76Taaj4DHQxHg==","shasum":"9ce9a84d2aadd614b75260fbcc8622eed4119fac","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB9Zk/xg8p0z+FaUdmwlkM/rN+lovbQW20cMLMex8aYcAiA9DKKOWOHMhnZHI1U30BEdmcwjSeK6tDwwYfzqTe2Ekw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b_1704977445281_0.8818546851510292"},"_hasShrinkwrap":false},"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.3.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ef6c82f357520e2653764729cb9db745fee1bb","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-rhDANUVfRbl3Kb7qn6606wuerh6jPbr5xUFJLarmDoXqek52jbDioPwHWj9qsVu0dAy+KncuyxQ+7oSonjKowA==","shasum":"7f384cc7e1c77b2327a2ac2bb6cfd5f0ca391373","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb.tgz","fileCount":102,"unpackedSize":715907,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDcUWvFfa3P+s3choPmmHQDet59mnzcwYsSmIegMQWmigIgNIKyjx1P6IMZv9+sQK+xlpGBc1GFlVRl6o4e2WpMryU="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb_1704978163968_0.28989879110340033"},"_hasShrinkwrap":false},"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":{"name":"@strapi/pack-up","version":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-wwn8GzZyiTdcnbwhLPVe9i01W/V48u2pNt2PERcPshmdUqyX83vjgTCAgT//dhbFfNqcw89Xyp2pcs4+feWd1w==","shasum":"0da9ba222ae727b38b47f6178360ddee8beaf0de","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDpp2/4K7BKRyN0dTwTz6ZPQOiUJn2cSccm/2pFYoiuoQIgTQedCqwLU0aXs1DYx+b9WHK4dbGtTBGIhHP+hxA6RAw="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51_1705019034254_0.5046270704482183"},"_hasShrinkwrap":false},"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-urY2MhR0DdXZr39Rdo+gddZd8M8MOD/fRyU2D0FYrlHkNX5MKRlXf0J0+FjfZHbeyq56IxCTQdWxVppTDc4UVQ==","shasum":"66b0676758082e39027111314ff80d9afa085a99","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAohrzDuoNFJ9j1T+3GIAmJ4yz+aAPs+YXNwuweS4XYrAiEA8a/c+gMKkO7a3mz71tJb0n30aZeFWmQLU2x0C9LcX7Y="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51_1705050385710_0.6355115877091022"},"_hasShrinkwrap":false},"4.18.0":{"name":"@strapi/pack-up","version":"4.18.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.18.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.18.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.18.0","_nodeVersion":"20.5.1","_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","dist":{"integrity":"sha512-TkaVG6sLkIar2CzuGGRtq2zc7ff34L7M5P5YbF+0xAXoS7bCihpAvGH9dEBqBcFWf64ZtCDWEXrNbJ+pqcneBw==","shasum":"68f588b345c87c44430c08c7383d5bed83d8c058","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.0.tgz","fileCount":102,"unpackedSize":720647,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDxJ5VFZE7XERhMdo0a41+Jmg1S0P1aINAeT6fTcxniDQIgS1Bri6hJjq0fNrdkMDAgX2PHHasZLBQ9Nip6reZd52E="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.18.0_1705053552596_0.3078029053353857"},"_hasShrinkwrap":false,"deprecated":"“unwanted"},"4.18.1-beta.0":{"name":"@strapi/pack-up","version":"4.18.1-beta.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.18.1-beta.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.18.1-beta.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.18.1-beta.0","_nodeVersion":"18.12.0","_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","dist":{"integrity":"sha512-Vf9QNpzfOXAJ4GY6jdnH5My0cmfSX0lyUBCMEgdjlaMzakVQie2/zZn5L5y+OpsOwrfEiQsIJMqQzb0zJf0wMg==","shasum":"047c8d7ae6fa6610d0d0eb78630a3521d98009ce","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-beta.0.tgz","fileCount":102,"unpackedSize":720668,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDmKFckGTHISvpFNsjz6G7yWa09VBhojE/aHxV5znyEaAIhAMAfa5Yb1LoY2MCgD0dhR5ZybTJPRAt0zpG7PdoxOia6"}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.18.1-beta.0_1705056235839_0.045062497229251264"},"_hasShrinkwrap":false},"4.18.1-experimental.0":{"name":"@strapi/pack-up","version":"4.18.1-experimental.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.18.1-experimental.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.18.1-experimental.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.18.1-experimental.0","_nodeVersion":"20.5.1","_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","dist":{"integrity":"sha512-OZFPUo+F7zrkuiquX46Z95+1TJUdt9dZWm//hOu7qyrhZYsYt4JuQ5lE+pV7RaRTzeB+Wg2gduUiuRP/7XXDbA==","shasum":"0e3467eaad6b813002487a9bb29f2ee78f9a6556","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-experimental.0.tgz","fileCount":102,"unpackedSize":720692,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDjrMzDYPGxJRUYxmaJ4HgYNsQCfPjAt9pGKQTmrBkT0AIgEfKKgD+rYJoB87zIkGPIoGskdLBYZQ7/jm5nDzj3p0A="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.18.1-experimental.0_1705057663398_0.33719513634404485"},"_hasShrinkwrap":false},"4.18.1-beta.1":{"name":"@strapi/pack-up","version":"4.18.1-beta.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.18.1-beta.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.18.1-beta.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.18.1-beta.1","_nodeVersion":"20.5.1","_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","dist":{"integrity":"sha512-YW8i2yGnpDUPXB31MulJ+NC2rM6uW7dEzNEFX14TF4IoUfXJDBccaV+zBlD4U/OIZ9HvWLuLwCrFaW7+cawkSg==","shasum":"b9a4492bab88981f44206bcb2cce993e12ffba20","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-beta.1.tgz","fileCount":102,"unpackedSize":720668,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDzvmU5FMPOd2Kgg+rDyuQE67t1Cmqyj73Sn/Ihz7Y4SwIhAIi2pEq9cHE2v7G6Vgb+ojPsVp6Hlx+kiILaXP8/VYqQ"}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.18.1-beta.1_1705058186885_0.39174710609853225"},"_hasShrinkwrap":false},"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.3.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-/jbyGrympWa1qJJpHLi3DPqPotkqmPJ7K7RMjXEhllBiVuU7E1tqPIMF9MzNpM3aCDFvZTj3X+XLSeNpk5nH7A==","shasum":"f4afcb911188a0fac45639efbe05f0c71e06ef75","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f.tgz","fileCount":102,"unpackedSize":720838,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDAAkOiz2UBWH4nAzNKBg4KMY56z2uNOr2Awod1Aj7mOwIhAKZMstQ0i7VqIHEWkOEZ1+dDh4F2Vw5VUdRZvCCESIis"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f_1705070301475_0.9693285647859848"},"_hasShrinkwrap":false},"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff":{"name":"@strapi/pack-up","version":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"37dd1e3ff22e1635b69683abadd444912ae0dbff","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-TMcKSVZ+6ZaN0DLixGubu/AnR4N3vEgQKgtOfbCP/NVFk19HifVPctkdzVPQceNR2tV3AJLOW3xj1N7Y9nXVSg==","shasum":"4b93a8c7bd396ff7df1ab5c75e81155d41312228","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDkm4xFiurLVHw1qAhPW0AV+l3ZJgXI53O3YYmy7b7cKAiBm7iD81B/frZoVB9QsorL8XQs8GA9h162acb1vl9odNg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff_1705105409674_0.20875879643791673"},"_hasShrinkwrap":false},"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa":{"name":"@strapi/pack-up","version":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-rnjTglcelb8spCcxIY5r9JDSkrFyBXNPW5XHwEWZMvHKwmVAd30Jrm21LGx9loK8/AjEiO1aYmUjhPLz6yovrA==","shasum":"06d27be3b9cb17285ae88f6128985a30d1882c4e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCpMXR0C9jf0ZdMgCSpeh4G4aTIwNdqKvLU4X1Li7bptgIgVd1w6tal0YorDVtsLzmg1UcKeROXKEN9GI5U89d28+s="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa_1705364621954_0.7286908056681083"},"_hasShrinkwrap":false},"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051":{"name":"@strapi/pack-up","version":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"687ad7e959d10f5a592bf06e35f86bb6d6e61051","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-r1085nYS8k2HyEpmyyZqA6K5Vi/63w4OUYgGrzUesHJ7e+0DYyH4qBxWBX1sWZS3LtHse99c29vLE3rc4C4zUQ==","shasum":"37af93ecbc744689c079a315e60b55da3c75cae1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051.tgz","fileCount":102,"unpackedSize":715875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGQbqzN845PJ2ZZZ9q/RqTt8SEB69YoiHisMK8Vkx8wbAiBWcxrZ0MEZ09PEhIycy4NsVEu09EV2vyskgRkfFiQdaA=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051_1705398972990_0.2737044156379276"},"_hasShrinkwrap":false},"4.17.1":{"name":"@strapi/pack-up","version":"4.17.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react":"4.1.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.2","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"4.4.9","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.17.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.17.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8f2c1c1fef98ce4b83240d60b1a96e3a41926a78","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.17.1","_nodeVersion":"18.19.0","_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","dist":{"integrity":"sha512-mCAcja1Es45rf/hOLpkwVMIcqg8KPpsh29UFMknZ+eHgcprRaq1AQZpQWzVVcpR3xpdPZADs9xMYzDKPl7iSqg==","shasum":"647d91b714e2a1438b4e1c1987de5d26161ad06c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.17.1.tgz","fileCount":102,"unpackedSize":715716,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC3s7NsIsju5+szGquvkwEOovn2WBaKC7dFNMYm23NQgwIgeukDk76oAaO9RoLfe0tZG403pCuQ6S+0tpoxyUcFVZI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.17.1_1705402255742_0.5865944813071522"},"_hasShrinkwrap":false},"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":{"name":"@strapi/pack-up","version":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-JAfXiOL84NeW0ThqdDlFu4hjvSxLIzIb32gx3V9HoNL2ngY5PGiGnxx75pA+qU258ielo/qShULsp+l1ORpPpQ==","shasum":"971c5fcae98a6aa226be1f9d6f9c1cf3d2aabe86","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGEXBEdRZUVHRBhjrGQpAx2pgWkOBQnpYLOzYN4j9zx/AiEA/fCS/hWH14uhqMPno7ARHYiey638LBlu43Ggsh0w6mk="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027_1705451041576_0.7459824844160357"},"_hasShrinkwrap":false},"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":{"name":"@strapi/pack-up","version":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-nVI4drcQjj3CCAWtrjN0fyYgt90vDxjo33jaI70ukB++KjMdktNHnctmbgUYJ2FtM877kfmli8OHxFfvHne5Kg==","shasum":"d440adc18174dfed4cb5da86305e8e3a5ef34e23","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCnwd0a43JpEKnKQEmcYuWVKUpd6v1Tk3i7trDKm9o8gQIhAP32T6s4/iNSGPOz4CF9Vc6K2uzXDD0bWbfdZEWO7GXI"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027_1705484811162_0.4292845816291666"},"_hasShrinkwrap":false},"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-U7545TSj9WiqNk3bilhZnbi42j/6HgIpzdHbY6Wv8vJS+bCW5rfWHvwL+X9dpJXM4NHXuXVWeVJ53N4ATXpg5A==","shasum":"d8f2cc052b2228d246f350dbfa959a9d28069296","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDua6Qkz8AraCI+EcGQaBbIiCa7UWqJAHU1YkovN1YQ8gIhAN3h7Irl18KpZ2PInHMV8jm4KEHaq1qc3acpmQBjnyxy"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7_1705489488599_0.5232695200791126"},"_hasShrinkwrap":false},"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-TcHdyakVJQqhXylL0k7gLNHegHHdBgivywOMOjAznLOVBL+2BPYpmDh6oLeVyWoSizogaDfWwBK9qR8D2FHv/g==","shasum":"fd82bcc14f339c94c5fb34b9d231c01a531f40bb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDeMn1aoeQ5AHtAcxCfKj6YYKy75Yvxn6OGb6pVHA84EQIhAP9Wc9l90J8+XSvkH8aeu4RMhJBloOuoGcnqe1IW9kME"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6_1705512307299_0.8205377209005085"},"_hasShrinkwrap":false},"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21":{"name":"@strapi/pack-up","version":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-pedqIR01tOpemHk64fuBFm/d8Vb83RA8//gDxvZRGj1IVQSzQZV5/PocmO2M4b2dWnQ7W9SxEwfUa/0m1e1TZg==","shasum":"6f6269c0fe955796516a2368ec420ee5d91ebb5d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDWxkfic2Rml6V3RhjqP+l3GjY0fBR/Bb3/CtLdm6PZ1AIhAK7Zvp4irEOgZsSqJAjWK+hvXTTuBAELhH4HgN2q5CRD"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21_1705537419671_0.5737677145478277"},"_hasShrinkwrap":false},"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689":{"name":"@strapi/pack-up","version":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"34a17e37276130e110099cd4bab2376d323ee689","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-B3RlUr65Kp4Iv6DRld/K1A9asuMf3dMq2JBUP296EBfCKG88lGoaVN0pb5VktkKbQiQDAVEI6Bak1YZsoAmlvw==","shasum":"2322adb72b96aa1d5352b39d854aff4765c3d159","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCEVglKmsqhT72PK8IKTlh9EsAEy7Cd0O6MB6xaAUfZRAIhAIi40nAIYFsu/kUqn5EyOTFqE6KS6RSGoL0C8P8/NQ3Q"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689_1705623837386_0.6094097833362122"},"_hasShrinkwrap":false},"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3c527bc5bd8ee4363868445061894bf79a47a4d9","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-iZOOMU+VOsPf0/ITs8hr/6LMQ3aciw3OSKV+KVKL3rZ42GrFGNfTGJZi7O7/XAokXMRUdufDEp4G88Knm2jsbg==","shasum":"c5939e885ae8bd221ee82332d7e0c679d3c0188e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCfcSKTqcKJKzNQC5VmNzhSkd8ZEIzZEWgyo5R6/CiA7QIhAIXBFWKjkZUReurwrR/uh9KoFT+J1RLBwzGL9wHKtkfa"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9_1705674738197_0.12686807714012915"},"_hasShrinkwrap":false},"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-oz47h6d1WuQiABV1aOYiq7XH4cWEHhC+ms5UAGx7d3TsqjEdU3FQrBP6DijKrGivCer/tKBn3ijmSkL64gOoeQ==","shasum":"d00f050237f2c61e5b0ff2e5492b2e8fae3fb05f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD1Io0RVV+RGQtsSSmJ5AR9tTxFfvhkhWCVAlfbWUo0eQIhAPiS8yjvFGc3LiuX//b/e8Rv4tMMyniIiFY5i8fLkGB2"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a_1705683090091_0.13035820337339588"},"_hasShrinkwrap":false},"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164":{"name":"@strapi/pack-up","version":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"27295f2164080cc40056b9f415cca323cfef6164","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-vOXDE6ZWOZHI07pQsSlRjITk06TGIsvz4pBuYo9LrfdG5Xo1EMyiW7w901oGH+8kpk3MUEJQAdZgo99amFPHjQ==","shasum":"384f2b2adc68ca0b954004f594d49769d96a72a9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGWz6Lpwe+qqXmbz7rmqbcygFf8O8SrE+tFOAZEF0nYMAiBTVzoLaNK2AXTI2tUW0zH8BUi+9/C9g/j7xCrNbG1JEQ=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164_1705710194779_0.46392334261714296"},"_hasShrinkwrap":false},"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204":{"name":"@strapi/pack-up","version":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"1168c576ca50587b1a4377082ee09d2375410204","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-vNT06ltnG/kFOTLZkzp5tdh8Z9YTGc698o0fbAUdGhBE/IYzPu/VfLRRuCZqrnS8CIsETjTn6q6s2pOyg/UDaA==","shasum":"e4e1295831a9d473e1f36b85c704375c1f875c6e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC1pVVqfiXqJQJ6vjIeDRrx6gO70WboL/oZ4h5JsjyBMQIhALEpaJB2oDztvdDas6HSorkXrcflsmI+B3LiRU2PDxyZ"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204_1705969483179_0.8139285783083638"},"_hasShrinkwrap":false},"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"ec073775440bb4757efb5a5d846535ae950fe4a6","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","_nodeVersion":"20.10.0","_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-Y5G8Y9hc80s1fQ8Hw0MQ36/r2/PIYRioVDwjpuDyh2GCmuv+psFhgDN7zzfXsu34u+0sSr7aTcisV7//Er2ONw==","shasum":"83369fa0138ef98faca77c2fbdca769ac8ea76be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCzp4AhB96twSvwYQPZ3MTqkwProuO0biIN80LkNjfZDAIgOu4nTKZbBeGdsSK0F6kEuV2i6riGOR2/pvceafUvVBI="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6_1706107096765_0.0033053728434904173"},"_hasShrinkwrap":false},"4.19.0":{"name":"@strapi/pack-up","version":"4.19.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.19.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.19.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"beec78649142fec14b075aa3658c515ea2fa9257","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.19.0","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-d+yP2jrUiBfJ436Ma6BiIVQx8GuRIq5lxkwXvLxv8Z3mn5nG2Rud1R1rtGJ32hEDfddrf8MqJ0eu1Pz4AaWgyQ==","shasum":"2c3511735ab88940747946138bb5ea15032dad72","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.19.0.tgz","fileCount":102,"unpackedSize":720647,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC3+Vo9+Z7t2rrBxlvC76IAQ/PSH3obc+7fGqMW3C1cBAIgEmGb9Z4/w11XlZyrGaANa5227jaiT9BgSltltRn61i0="}]},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.19.0_1706108446563_0.37806512268849723"},"_hasShrinkwrap":false},"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59":{"name":"@strapi/pack-up","version":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6a58621932ad3d83bf9d6928c1871e7906adcd59","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-gj6+ncEOr9qlWvi6oQN0B49dYHqEeaFNjoIP80NA1Ovita0LWT5maezn6BuY2nUfvQGQZ9uriLx8qtnklbYEaQ==","shasum":"c75b71b20542b92a6c0a367579e9e565f005f51c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC0e4aKtN4uCYLHZMxQhDL5x8GS07HIaIN5S6VBiKftVAiEAw96xlbZW3VFJRJy1yembDWjkPTKQbZ6n4fMFWg4X/V8="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59_1706142237179_0.1462445311560756"},"_hasShrinkwrap":false},"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.3.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8c0ce630983672c5ddb15e4a853fabb826def95e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-CUMXIULNKyN+cLmULESPfB6LMJxmfmdIC34HaPUI8HvQ15HeBCMcskkBhBCkKtgB3xR8zVkTzDSHx6BDPukNZw==","shasum":"0add02ef9d710be9f3074b04cb677c1f5a7fdae7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e.tgz","fileCount":102,"unpackedSize":720502,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCmtpIeE8GPaMFNdNu22zW6VS60aDzSGmX2OyJg2lfMygIhAJdIU+wwyoGLVb+sIM1Yaq5GloBmcewQ4bph6vwzJax9"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e_1706265542738_0.38309873461609856"},"_hasShrinkwrap":false},"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4":{"name":"@strapi/pack-up","version":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6d59515520a3850456f256fb0e4c54b75054ddf4","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-6qwb6F3Q/2RfZ5wrzFQn4T4F/F9kuzB2FP738fo7rHjjlwSo0NMumNhwR1ID6HE1jKMp2E3tpuavcdhX3sLSfA==","shasum":"f3c75d90488b90d28ca267e50359828576c67bcd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDNWNmL+AnUHmUbs06GGqCtcnCBPXFbo24TkxcKSZM68AiEA8j0NjbmhgnDa/ySu4dGzesGfEwY1PXfkHhKooDM/Vyg="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4_1706314922509_0.23799552440210237"},"_hasShrinkwrap":false},"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653":{"name":"@strapi/pack-up","version":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3844395bef7efa05c25c6d4337306935905bc653","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-RjMYyZKbGcSCSLbmHEJsV37sPDssxL1K+AuCtbO9KJQO36j4z2HX9RGVDctJ04SnEzec4vCGxYvOvJGW7qIO7Q==","shasum":"777e80ad883b09cf48f66c9dfff3b38a9f05ddd7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCwjF2MmT+pt3p1lLuY7BcrAda1or8tBOCgHrFs7YNcywIhAOWFOAGPGv+O3+DeeFga6Q8QBVsBZ56l0Ganfg3grcJ1"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653_1706574137071_0.23404563009861246"},"_hasShrinkwrap":false},"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"cae3a5a17d131a6f59673b62d01cfac869ea9cc2","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-trh44iPt6d9IPHYEnABUefNvr6y3KeQDQk141zpOG7oh85pxO+aVYJgRngj+Le/YkkJCkfRUtk/wYKjlu+SwFw==","shasum":"e002f5dd6b9ef892212846acb26995a946ad3319","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC6j5yiue5qTaRs6J4C3OaCOvrxUaLx0tEPW2piJ+sBpwIgfSPpLO15GzQnK66beo3Xpt/9fXI8L6TBxQZeyoNvmKo="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2_1706626278965_0.14171023908008973"},"_hasShrinkwrap":false},"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611":{"name":"@strapi/pack-up","version":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"0a7843dbfbff3628c1a547e687ca05eefe4ae611","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-XFY+BvNTv+cVBSTLY8Z8N78WftaIORl6DvPFMO7n6+RaqRRTek0EnZwd422C/BZ9SKfyj9WveBrTpyFqmtR0ug==","shasum":"bca7e113f868b86579aa81dedcc6e80c870bbdd2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBJnH8u5zXR/yUxDWSOx/uz7ZW66RYLk+tmIoEc7VEoCAiA2LtLisPFEUlQ24uah0Bl53fri9dz9KuO8Gui9F+iJ8A=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611_1706660572550_0.022705309335134816"},"_hasShrinkwrap":false},"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3844395bef7efa05c25c6d4337306935905bc653","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-e8M82E+nX9Lvg2ZbUJrr0s/D6Rq5WWGWloaZBmI2eF8mWUDI0IgwwQQaBG1RzIJaBrAijq6zGLS7EvTZGIotVA==","shasum":"75fb359327ed578dd4c8f62d995016695b3b1498","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGbGzkztKZn8n85ZpTW/S5l9lCBxCKQs/ZldUr1hPpCsAiBToa3IVAVOn+WPDDA/XwAZhZHp4b/3KoL9xxhikC2bEw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653_1706707227712_0.708870040521483"},"_hasShrinkwrap":false},"4.19.1":{"name":"@strapi/pack-up","version":"4.19.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.19.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.19.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"34f7e875cdbeee1f75a46ab733b7943eb518f47e","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.19.1","_nodeVersion":"20.5.1","_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","dist":{"integrity":"sha512-IlDNdHLlxZ9fPcphEUvy94i743yUmTgk4EQzWek6FgbSBFUwJ0YhrS5UMWpjoYc52GChumNArwezAg26GiBUEw==","shasum":"4154d6051a8eac72e439ed5a08df692d03502971","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.19.1.tgz","fileCount":102,"unpackedSize":720647,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCID7GJcjaeXiVzXMdGiSnVavxm4LgXk+00/za3Hc/EvomAiEA0VF7kwVn766prSIvQmbrvETVKD3XaVJZmbkwwtn82DM="}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.19.1_1706708624421_0.5328715996672939"},"_hasShrinkwrap":false},"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242":{"name":"@strapi/pack-up","version":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"c5f067b5650921187770124e9b6c8186e805e242","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-N8QWa1Uicm2fICUBJ90kgBHyQshxJtSY1AeeFlWlyJLlDBALWToetws4aANKziEaOsjQm2QO/L38hTJF8PUjnw==","shasum":"b1b8c995ea34cdcf29d9dc7699f104513f83c42b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCoeO72jQESEbv2HeHhF9S29Vfs9Jngoq+7wRPEjAtibAIgJo1UDY3CjBcLiE15Ayr4Ggk8wflfzAR2oYCDOStmkUc="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242_1706747007976_0.09953373936345988"},"_hasShrinkwrap":false},"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84":{"name":"@strapi/pack-up","version":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"504ae21185714e6995d2bdd6458efe2e20371a84","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-Mi8E7ncncZUbzz9XdWJQJWkTvhgLYQyAmVmkYxbhgUYN35D0hhgjm7rffzLQfUjPE4iSLeCipiw+9Zp0qA+ETQ==","shasum":"f9f3090d804494fff471c01ef564978a6d1b64a2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGjG+E/srfJprz8d53pzx/6s7lF3jhtXnA+jeo1urgRYAiEA/onLiZ2b2QqUJYTY13G2qhYw5JZO+sjHRvTWRXMI5t0="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84_1706833341658_0.47476734391353204"},"_hasShrinkwrap":false},"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.3.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3f7b2587c5e3d548262671895cf11d8bf8c9166e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","_nodeVersion":"18.18.0","_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","dist":{"integrity":"sha512-KhH0PRm4r0qh6Ti+w9ZC8oqWCgVopg0/V2TwHA+VlE0mLVycDrYiKSDLay0MncPJZ5VEtmiR/YgW788cLZ3yJQ==","shasum":"7ef31452cbd8e20aabd28e8e8a06c85b10b6587b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e.tgz","fileCount":102,"unpackedSize":720502,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA6RlF4wPNC2UGFaA2oLqoG6KS3yWRLHI4a24ady5OWGAiEAjtsV7e/y4TeA76FMsa8eq60NrnKkf5JVDn3tfhD5sIg="}]},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e_1706879437838_0.029986011431912152"},"_hasShrinkwrap":false},"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.3.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prettier":"2.7.3","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"3f7b2587c5e3d548262671895cf11d8bf8c9166e","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","_nodeVersion":"18.18.0","_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","dist":{"integrity":"sha512-/09VfuQTuk6u5kfMmFydVxuNIdB0JKIoIHsXNauIcU8hjAmeffvDePQr7uDNZpDh6uxjAo4NoFodkmCMQDVdGw==","shasum":"60d5536227d2c34ec74a37741b4963c8c56d3bf5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c.tgz","fileCount":102,"unpackedSize":720540,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFQ/Q5ArQSH+wCDJ2DzG086B0MXCxOLWkjJ45S+o5QSrAiEA6glr/9P15rFqGpoV8/ZLhwh74r69dzK6vJ7UOUpVmvM="}]},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c_1706880896424_0.9875174919537912"},"_hasShrinkwrap":false},"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f":{"name":"@strapi/pack-up","version":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"44f19b3d2f81d983c343a219aa2781ee0deecb5f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-Su2EyAZq3fMYaSKYkIFuPnnh+po3Tnippa0ftdCJKPdybNTaE4lDvl/FV745ALtzHlEB/XCqfCLe512EgL0ing==","shasum":"5adf03e34cfd5ebc26cf69e4bd0cb13b9e97348a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIF4YNoB34skijURO5L+NymtHG+8++Ay/tMrAYZeXCWPCAiEA9vfiPgq/D+V41i5GjmDQWCFttPGf+Lhcq+KfrEuLwa0="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f_1706919768578_0.8799553700588691"},"_hasShrinkwrap":false},"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1":{"name":"@strapi/pack-up","version":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"287aae0bb4a682fba312332372895dbf8e032bf1","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-Z29B/gLTjLLtgUoD1AMI/t8MiXF9zU7ER3lp8HuuTfHmP77LzvMx7UgecXMkCL+E5917vYTnd/LcrRdoaJPtRw==","shasum":"b44fe276955c41960f3b022e2442d07d20c4b96a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC/oEA0HBkJdwjNrZycEAtoZV7nHeHAlHhgRCVgQ0Z5dwIgW5a/3SRyGre37X+u8S7qW0GHISPjKyy7Cv9TjR3QTrQ="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1_1707178945041_0.7720785130601482"},"_hasShrinkwrap":false},"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0":{"name":"@strapi/pack-up","version":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"6d384ed205b7f0792d9bea79195f01b30463cfa0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-1R1FaVkyQxrcu4ywWKEd6VtSbaNG0XbdABwFf0V4VTIdiJiMcQeRLl5YaFYjWEH5dPEQRV+wPPXagEWK9zuv+A==","shasum":"2bf1dafb3d16d561b43e2080532e5532548502be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCb1I+VC5AcvlDqyk9NE6i8QTfM4QXlfvubsJ172wpz1gIhAIf+Z0ad3CrNcDIWggsPJYsL1pcV9Ly5fmSMv/uWqtJi"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0_1707265302799_0.42141335967999494"},"_hasShrinkwrap":false},"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"519fbba45412bad5469a604191f80f57bbdb896f","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-O56WOXdpanhrmnXRi46w0yy5muOqqhp+a8wFNXQ6VzKCIFk9V9dWp63YPu6pVZ6UBKyCKN/5OsW+mWf28Awfmw==","shasum":"275c46f4204c9a412503d3c60e833b9cdd33a755","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICjlJs94JPXDeEkTAdaF01OLwjyYCYiGxjLbtdg3EMW0AiEAtuUZJOol4otRAKZZlTFo8ltpvM56SDNsXn+tkt3CZo8="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f_1707317726419_0.9325882675200534"},"_hasShrinkwrap":false},"4.20.0":{"name":"@strapi/pack-up","version":"4.20.0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.20.0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.20.0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"b0d94f6dceaf9f7392d144dd44421748d506e2e2","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.20.0","_nodeVersion":"20.5.1","_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","dist":{"integrity":"sha512-YITvQSUGVxDKGp/Qu7CmcvggjvDlQLKefy9fL7cxh78eg0trOtcpgtmywuYd/a+UNhRJV4F0w6RjHJCD4OGzbw==","shasum":"a9d42e465efb15914d2e6e409c63de0d8a3db812","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.0.tgz","fileCount":102,"unpackedSize":720647,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0ES5Z85uiIVMWpAJG2TmC1eu9U6w+RGMhjFouWpJYowIhAJfQRi+LcrGMQLkg/otJMU3GjkpePFIyJGt0U1tUo2+P"}]},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.20.0_1707322405960_0.4630774999700067"},"_hasShrinkwrap":false},"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b":{"name":"@strapi/pack-up","version":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"60335b11eca9587b558035fe9ecca90e05db036b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-F36tJti9qofbOlZn60z3d6L5wWSXDyGb5QJiC6sqlB3BdE0s2q7TONjy6WM6d/SthKILBjz6JNCNqt1QJIqLXg==","shasum":"005062933b8470c1498d7fc052354f1348eef8da","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC544YmVIZNA63fdTZb5Ej74fxfba8hyyp7DnmWRCoXtgIgWksj4JZr9YUkPWYRiSwqbYxec1skSyg8vEHf7ncukZc="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b_1707351743462_0.3638041181473144"},"_hasShrinkwrap":false},"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b":{"name":"@strapi/pack-up","version":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"677a639124e715b4bd6bb862d1ef6536358bed8b","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-fOuulW8MVXcqDHJOuHY4ToWmle5wAIYra5B8LPhUSeiDy5tMefl4lB8zECNZhZuJlvPrE4FAcUX2mGmyFUKmIg==","shasum":"06c097358314321e35296d433ae025045ef00c9a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD5+YRmhc+6mwHEtgEnbhyme/v/t6jFmDUx250SXSTLVAIgWU8iBm2ZlbFz/L1nXaIZe1chMTyVCC78ZdI9Hh1nvfU="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b_1707438147477_0.013994703911255568"},"_hasShrinkwrap":false},"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed":{"name":"@strapi/pack-up","version":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"90a86f595c31de9a89f4255318bfb0cccb30ceed","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-8VXFhBLAVGQfvmC28cqqwWTrTNdJctp6qPIum+eM2TWAJLyHA1UHtqrVIGHm5HyWHbuGyJfN+5oI8h7gQzmBwQ==","shasum":"f6621b3cd3de1f71de280884a6b5387cb3aaee78","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC64i2lm6pRHDXuZ6W9+inu3vIpDEKZJpgeU+1OWPQ6CwIhANnWI4VwqVpnGiiGUsl6seoACvHqhtoM61/SCtPuqYDn"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed_1707524527010_0.7357134375171619"},"_hasShrinkwrap":false},"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"8f1f62600f67917861bf1748cf7f3138e781b5c0","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-W25XpE5cAx6N/r+2HdmvyEl6PkJWLINJxFxQh9mIq+CFV39GyhHAcrmvdfjz0TzbKTYXM4y5emVJSlt0NUCeMw==","shasum":"713edf38d17461efab4c6742c0f3d92f22f6462f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFIY7fZlpZ/j9zgHCzh/iTHUKXCevgAOUCpMLUmaKY/SAiEA0fFsL18tEr1dW32k2JhuzzcUDVC1Xzg/5WxgstcoRGM="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0_1707752011321_0.4014869816785658"},"_hasShrinkwrap":false},"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37":{"name":"@strapi/pack-up","version":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"aa7c7ec6724534e157d8a23fe85ee8318dabbf37","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-VimAk6WvtHWSdS9vLzzyl/Jygx7mPfkXo3hSIV4oSyt6ZaeJSWH1Pff62C6OTyzsr9IAPRMrcvDe25kS9SSC5g==","shasum":"33227aba833573d76b5d45b675339b97d630998c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH8eTMN4QsaXZyW8UEtJX1H3884RkEqJkGp8p+DFQ/61AiEA0Jbfghohz4NGDKu2zXTBOru878G6/F23I2iUuG+rW/o="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37_1707783798750_0.045070795623937565"},"_hasShrinkwrap":false},"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed":{"name":"@strapi/pack-up","version":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"95a939e004e74915357523e3adb118a31fef57ed","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-XBK9Wc3kRQRBBeWisDoIuc1jmvM3opAdWdVHk0T0vUpI/R2+lQglk5qzeEXlsFw2oyggzz0UCvII84NualbXLQ==","shasum":"b12fcf20a77b1ea9922a160f5f23deacf11ebeae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCgqgtUNk3+dBxEzrW8bdpbHAJVtRG7jXNjCSQ6CmpXbAIhAPYOm/FepmEN2RguPYhPIqRyA+wSCOF2i1CDfVkDkKg5"}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed_1707870153317_0.6821152879538073"},"_hasShrinkwrap":false},"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02":{"name":"@strapi/pack-up","version":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"73f815eb1f316f56cecc0cb70e627d00826fee02","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-7koTXHrM8G5KvLheIbcAMMS1UB81UaNpKUeA4xnsOJGFTUtOSpAO/cbAdLInba6M1YL203JvIezParkmuTqZ8Q==","shasum":"f9047c34cbcdebdc7fc891d3c01dd3289acb9fd8","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02.tgz","fileCount":102,"unpackedSize":720806,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAFnAi/re20o3KqRURf1HF89OVrOYZ2O5odCNEFuej6jAiEAizksjEFE+KwPew4tV04IDyi9efHSPkLSU03pgYgn67M="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02_1707918547120_0.38789203245923165"},"_hasShrinkwrap":false},"4.20.1":{"name":"@strapi/pack-up","version":"4.20.1","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"4.20.1","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"4.20.1","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"9aa6e94b2fb58dd50a098d8736f995e5982de730","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@4.20.1","_nodeVersion":"20.9.0","_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","dist":{"integrity":"sha512-f1iZAgmTnh7gmL8ybqgU/Hsublo1Eavp9SNlLjM4wFdW9xmegS3A5RS1F9upF44l/yvIt7MajYu/ogbpDNyc7A==","shasum":"0f27b3738bc22973bb38fac2231c9c62c021af01","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.1.tgz","fileCount":102,"unpackedSize":720647,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAul3dpEPkCJhgCA7UGVXEVMAsOdBc8o+5l0Jt7KT3gYAiEAyajVVZ7CnFuYWUiJcBt/1OAnTwvJO0gOb263WDupGvs="}]},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_4.20.1_1707923643327_0.7303830688361195"},"_hasShrinkwrap":false},"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871":{"name":"@strapi/pack-up","version":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"d470b4f75cf00f24f440b80300f1c833c322b871","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-0yuPV0nVB20AlCd0DqHpXeoWTloXxRE2ceSJcc91GVPkHy8YIK3UL+bqqulz2RKUq627gRyJ+yG9XviVao2LQQ==","shasum":"dbc6d6fb486a6f225071bf43451a25d6e9ba8c33","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICrJudPUmm4rmqifeySR0srkdcUX7RjrZgJPG+HqGXifAiAor43V94uf0y3v92z4z98Q99TTCpb1ScEsYQe1DKiWcw=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871_1707956553948_0.7155285473857591"},"_hasShrinkwrap":false},"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602":{"name":"@strapi/pack-up","version":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","description":"Simple tools for creating interoperable CJS & ESM packages.","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"license":"SEE LICENSE IN LICENSE","author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","import":"./dist/index.mjs","require":"./dist/index.js","default":"./dist/index.js"},"./package.json":"./package.json"},"main":"./dist/index.js","module":"./dist/index.mjs","source":"./src/index.ts","types":"./dist/index.d.ts","bin":{"pack-up":"bin/pack-up.js"},"scripts":{"build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","lint":"run -T eslint .","test":"test:ts && test:unit","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","watch":"node -r esbuild-register scripts/watch"},"dependencies":{"@vitejs/plugin-react-swc":"3.5.0","boxen":"5.1.2","browserslist-to-esbuild":"1.2.0","chalk":"4.1.2","chokidar":"3.5.3","commander":"8.3.0","esbuild":"0.19.11","esbuild-register":"3.5.0","get-latest-version":"5.1.0","git-url-parse":"13.1.0","ini":"4.1.1","ora":"5.4.1","outdent":"0.8.0","pkg-up":"3.1.0","prettier":"2.8.4","prettier-plugin-packagejson":"2.4.5","prompts":"2.4.2","rxjs":"7.8.1","typescript":"5.2.2","vite":"5.0.11","yup":"0.32.9"},"devDependencies":{"@strapi/pack-up":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","@types/git-url-parse":"9.0.1","@types/ini":"1.3.31","@types/prompts":"2.4.4","eslint-config-custom":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","rimraf":"3.0.2"},"engines":{"node":">=18.0.0 <=20.x.x","npm":">=6.0.0"},"gitHead":"7abe81e395faf152048bfba0b088b9062e8ac602","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/strapi/strapi/issues"},"homepage":"https://github.com/strapi/strapi#readme","_id":"@strapi/pack-up@0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","_nodeVersion":"20.11.0","_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","dist":{"integrity":"sha512-H+ZE62KfnJ2ozebGxtRYGmMsmR8cvnm2HLI9d4r5xqg3IPfS3h9kJ2s1duCsL/KfypzHqOWRFyor+h1EUotymA==","shasum":"2d2d8499be05f9b0d406f0a7b48ee885ae4d2baf","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602.tgz","fileCount":102,"unpackedSize":720782,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGTCy36us3rpEqozWoqRFh1q+XaJxnjQz9adBEXm6sKdAiBHW+QWk2hnJx/ti4H5jL/eMSNejYi8BrlVR7ltEZ0dmg=="}]},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pack-up_0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602_1708129363967_0.9859905594321292"},"_hasShrinkwrap":false}},"time":{"created":"2023-10-02T14:33:03.536Z","4.15.0-alpha.0":"2023-10-02T14:33:04.006Z","modified":"2024-02-17T00:22:44.649Z","0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b":"2023-10-02T16:07:51.366Z","0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f":"2023-10-02T16:28:56.770Z","0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d":"2023-10-03T14:09:25.655Z","0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c":"2023-10-07T00:25:38.289Z","0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a":"2023-10-10T00:24:55.094Z","0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e":"2023-10-10T09:49:40.722Z","0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3":"2023-10-11T00:24:49.438Z","4.14.4":"2023-10-11T12:33:28.055Z","0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31":"2023-10-13T14:50:23.377Z","0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7":"2023-10-14T00:26:04.411Z","0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":"2023-10-17T00:25:38.037Z","0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":"2023-10-18T13:51:24.202Z","4.14.5":"2023-10-18T15:04:03.297Z","0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d":"2023-10-25T08:09:01.674Z","0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7":"2023-10-25T12:48:08.875Z","0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8":"2023-10-25T13:04:33.314Z","4.15.0":"2023-10-25T13:08:19.334Z","0.0.0-experimental.check-license":"2023-10-25T13:24:59.149Z","0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52":"2023-10-26T12:07:33.609Z","0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7":"2023-10-26T14:07:41.368Z","0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457":"2023-10-26T14:19:32.531Z","0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd":"2023-10-26T14:37:16.067Z","0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d":"2023-10-26T16:28:57.751Z","0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646":"2023-10-27T00:24:21.581Z","0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8":"2023-10-27T10:00:22.392Z","0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2":"2023-10-27T13:03:49.870Z","0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0":"2023-10-28T00:25:11.998Z","0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571":"2023-10-30T21:19:25.219Z","0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571":"2023-10-31T00:25:12.739Z","0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3":"2023-10-31T08:31:55.620Z","0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b":"2023-10-31T08:50:18.475Z","0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69":"2023-10-31T08:53:54.212Z","0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a":"2023-10-31T15:37:41.050Z","0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3":"2023-10-31T16:28:05.168Z","0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a":"2023-11-01T00:26:58.773Z","0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655":"2023-11-02T14:15:01.017Z","4.15.1":"2023-11-02T14:28:39.988Z","0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52":"2023-11-02T15:54:59.786Z","0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd":"2023-11-03T00:21:59.891Z","0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7":"2023-11-03T09:17:40.368Z","0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888":"2023-11-03T09:20:54.962Z","0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e":"2023-11-03T09:44:51.916Z","0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2":"2023-11-03T10:00:49.319Z","0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044":"2023-11-03T11:03:35.888Z","0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336":"2023-11-03T11:30:25.368Z","0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76":"2023-11-03T15:04:19.428Z","0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710":"2023-11-03T15:05:07.097Z","0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218":"2023-11-03T15:06:28.411Z","0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b":"2023-11-03T15:10:34.686Z","0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd":"2023-11-03T15:32:45.722Z","4.14.6":"2023-11-03T16:03:40.349Z","0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088":"2023-11-04T00:23:37.058Z","0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e":"2023-11-06T13:42:38.068Z","0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642":"2023-11-06T15:44:57.467Z","0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220":"2023-11-07T00:25:18.798Z","0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec":"2023-11-07T10:17:53.104Z","0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12":"2023-11-08T00:21:42.680Z","0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf":"2023-11-08T13:29:23.270Z","0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1":"2023-11-08T14:22:11.179Z","0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce":"2023-11-08T14:49:53.651Z","4.15.2":"2023-11-08T15:29:37.966Z","0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080":"2023-11-09T00:22:06.573Z","0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472":"2023-11-10T00:25:58.574Z","0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15":"2023-11-10T10:38:07.330Z","4.15.3-alpha.0":"2023-11-11T10:07:37.289Z","4.15.3-alpha.1":"2023-11-11T10:32:14.309Z","4.15.3-alpha.2":"2023-11-11T10:40:37.065Z","4.15.3-alpha.3":"2023-11-11T10:48:21.466Z","4.15.3":"2023-11-11T11:12:44.955Z","4.15.4":"2023-11-11T11:20:01.552Z","4.15.5-alpha.0":"2023-11-13T17:24:34.991Z","0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c":"2023-11-13T19:00:54.261Z","0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0":"2023-11-14T00:22:56.786Z","0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484":"2023-11-14T12:51:25.335Z","4.15.5-alpha.1":"2023-11-14T13:57:56.632Z","4.15.5-alpha.2":"2023-11-14T16:26:30.944Z","0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582":"2023-11-14T20:58:40.101Z","0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52":"2023-11-15T00:23:20.564Z","0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0":"2023-11-15T08:52:20.419Z","0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971":"2023-11-15T09:34:43.364Z","0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0":"2023-11-15T11:06:06.007Z","0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf":"2023-11-15T11:37:47.984Z","4.15.5-alpha.3":"2023-11-15T13:39:35.421Z","4.15.5-alpha.4":"2023-11-15T15:39:44.704Z","0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722":"2023-11-16T00:23:23.115Z","0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c":"2023-11-17T00:23:23.945Z","0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156":"2023-11-17T14:23:27.472Z","0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb":"2023-11-18T00:23:26.851Z","0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc":"2023-11-21T00:24:25.944Z","4.15.5-alpha.5":"2023-11-21T19:37:38.853Z","0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3":"2023-11-24T00:23:31.188Z","0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b":"2023-11-25T00:23:13.218Z","4.15.5-alpha.6":"2023-11-27T09:18:50.165Z","0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097":"2023-11-28T00:24:09.385Z","0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b":"2023-11-28T15:00:47.938Z","0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09":"2023-11-29T00:23:59.744Z","0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127":"2023-11-29T13:18:55.613Z","4.15.5":"2023-11-29T15:45:29.335Z","0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b":"2023-11-30T00:24:01.841Z","0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173":"2023-12-01T00:26:00.252Z","0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5":"2023-12-02T00:23:00.598Z","0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4":"2023-12-04T17:59:29.526Z","0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5":"2023-12-06T19:29:06.451Z","0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55":"2023-12-08T10:28:49.007Z","0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6":"2023-12-08T14:54:15.854Z","0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d":"2023-12-08T16:13:28.607Z","0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4":"2023-12-18T17:01:48.815Z","0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5":"2023-12-19T13:27:40.817Z","0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e":"2023-12-19T14:30:11.410Z","0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970":"2023-12-19T16:21:35.471Z","0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb":"2023-12-20T00:20:28.331Z","0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86":"2023-12-20T08:53:57.914Z","4.16.0":"2023-12-20T14:55:10.004Z","0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c":"2023-12-21T13:17:05.475Z","4.16.1":"2023-12-21T14:26:25.972Z","4.16.2":"2023-12-21T14:55:23.536Z","0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3":"2024-01-02T07:59:04.780Z","0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302":"2024-01-02T13:58:40.514Z","0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4":"2024-01-02T17:29:23.570Z","0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2":"2024-01-03T00:23:25.482Z","0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141":"2024-01-03T11:31:06.481Z","0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2":"2024-01-03T11:59:10.149Z","0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5":"2024-01-03T12:32:31.369Z","0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a":"2024-01-03T13:21:57.969Z","0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599":"2024-01-03T14:28:27.655Z","0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3":"2024-01-03T21:16:37.434Z","0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9":"2024-01-04T00:23:59.742Z","0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f":"2024-01-04T19:46:44.583Z","0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1":"2024-01-05T15:36:31.040Z","0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a":"2024-01-10T13:24:49.064Z","4.17.0":"2024-01-10T13:48:16.670Z","0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90":"2024-01-11T00:23:51.608Z","0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b":"2024-01-11T12:50:45.464Z","0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb":"2024-01-11T13:02:44.199Z","0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":"2024-01-12T00:23:54.424Z","0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":"2024-01-12T09:06:25.928Z","4.18.0":"2024-01-12T09:59:12.756Z","4.18.1-beta.0":"2024-01-12T10:43:56.063Z","4.18.1-experimental.0":"2024-01-12T11:07:43.646Z","4.18.1-beta.1":"2024-01-12T11:16:27.055Z","0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f":"2024-01-12T14:38:21.706Z","0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff":"2024-01-13T00:23:29.903Z","0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa":"2024-01-16T00:23:42.153Z","0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051":"2024-01-16T09:56:13.175Z","4.17.1":"2024-01-16T10:50:55.958Z","0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":"2024-01-17T00:24:01.799Z","0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":"2024-01-17T09:46:51.390Z","0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7":"2024-01-17T11:04:48.853Z","0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6":"2024-01-17T17:25:07.567Z","0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21":"2024-01-18T00:23:39.955Z","0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689":"2024-01-19T00:23:57.695Z","0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9":"2024-01-19T14:32:18.402Z","0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a":"2024-01-19T16:51:30.334Z","0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164":"2024-01-20T00:23:15.152Z","0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204":"2024-01-23T00:24:43.391Z","0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6":"2024-01-24T14:38:17.001Z","4.19.0":"2024-01-24T15:00:46.855Z","0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59":"2024-01-25T00:23:57.458Z","0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e":"2024-01-26T10:39:03.003Z","0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4":"2024-01-27T00:22:02.930Z","0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653":"2024-01-30T00:22:17.296Z","0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2":"2024-01-30T14:51:19.180Z","0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611":"2024-01-31T00:22:52.781Z","0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653":"2024-01-31T13:20:27.906Z","4.19.1":"2024-01-31T13:43:44.630Z","0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242":"2024-02-01T00:23:28.159Z","0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84":"2024-02-02T00:22:21.934Z","0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e":"2024-02-02T13:10:38.084Z","0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c":"2024-02-02T13:34:56.622Z","0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f":"2024-02-03T00:22:48.801Z","0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1":"2024-02-06T00:22:25.314Z","0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0":"2024-02-07T00:21:43.092Z","0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f":"2024-02-07T14:55:26.690Z","4.20.0":"2024-02-07T16:13:26.203Z","0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b":"2024-02-08T00:22:23.686Z","0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b":"2024-02-09T00:22:27.721Z","0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed":"2024-02-10T00:22:07.238Z","0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0":"2024-02-12T15:33:31.537Z","0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37":"2024-02-13T00:23:18.931Z","0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed":"2024-02-14T00:22:33.555Z","0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02":"2024-02-14T13:49:07.335Z","4.20.1":"2024-02-14T15:14:03.586Z","0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871":"2024-02-15T00:22:34.381Z","0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602":"2024-02-17T00:22:44.158Z"},"maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"description":"Simple tools for creating interoperable CJS & ESM packages.","homepage":"https://github.com/strapi/strapi#readme","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"repository":{"type":"git","url":"git+https://github.com/strapi/strapi.git","directory":"packages/utils/pack-up"},"author":{"name":"Strapi Solutions SAS","email":"hi@strapi.io","url":"https://strapi.io"},"bugs":{"url":"https://github.com/strapi/strapi/issues"},"license":"SEE LICENSE IN LICENSE","readme":"","readmeFilename":""}