{"_id":"get-it","_rev":"149-fd0a617905875a59bd026df258797e50","name":"get-it","description":"Generic HTTP request library for node, browsers and workers","dist-tags":{"latest":"8.4.6","fetch":"8.2.0-fetch.1","rsc":"9.0.0-rsc.3","canary":"8.4.2-canary.0"},"versions":{"0.0.1":{"name":"get-it","version":"0.0.1","description":"Get it! Get it?","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Espen Hovlandsdal","email":"espen@hovlandsdal.com"},"license":"MIT","_id":"get-it@0.0.1","_shasum":"4b57a361fd6287c5031848c8caab97f35a49f065","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"4b57a361fd6287c5031848c8caab97f35a49f065","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.1.tgz","integrity":"sha512-/VBttmVA8manJmo176DGem/f0sz4xcTR/7yiPAb7XXD5cp6jsTO71c/x/n7/ZbYkHXT6x13QK8NXYzUMKOk+xg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCID2cYMAhur/2GYQXuLXGvhH7jr8EA1aCJ+SSHF8UHNDZAiEA3wnaLiyiiOOA5jqSNijwcsU+YnoisP8+kA2WOYGDDOc="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.1.tgz_1480415064819_0.03559962008148432"},"directories":{}},"0.0.2":{"name":"get-it","version":"0.0.2","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","any-observable":"^0.2.0","any-promise":"^1.3.0","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","global":"^4.3.1","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"@sanity/observable":"^1.1.0","babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-preset-es2015-node4":"^2.1.0","babel-register":"^6.18.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pinkie-promise":"^2.0.1","rimraf":"^2.5.4","webpack":"^1.13.3"},"gitHead":"a31bd20941a21343d10e4278fda9b285969927ba","_id":"get-it@0.0.2","_shasum":"6147d0a929bf6f4a5c1cd5ef761149249b069dd0","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"6147d0a929bf6f4a5c1cd5ef761149249b069dd0","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.2.tgz","integrity":"sha512-pHEk986+JfLk97MZhThU46gRzi8vIGDLQxxpRROL2NC9VHXOMRgFDDOMATzv3dw5CdE5GWlYIOdn8ilkN6ZVpQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFdzj73/jteSfJQZUTTP26ghX6l3J3Qf5gLv9OgEa+7zAiBPsXD8WCwUO1EHk4lszvPIJAyr7WSFs/DuZImmjgYMKQ=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.2.tgz_1481287854450_0.14984364993870258"},"directories":{}},"0.0.3":{"name":"get-it","version":"0.0.3","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","global":"^4.3.1","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"91f23e897c1208b0dfef04726ffb3447278459cb","_id":"get-it@0.0.3","_shasum":"11b4686ca21b57a6ea90dcf1044da6a99645ed22","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"11b4686ca21b57a6ea90dcf1044da6a99645ed22","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.3.tgz","integrity":"sha512-ZPt7v4A8s6CfRkQHOLwDKnd2HZfzu9Zb0Lg96aOlAVQuTLCRs6DIJqU/FGDAunvgLM4oFTuMvMkhWKayhycZKQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEGZ26sow6cwH23bxvrKNxJBROvuoOceRlxwZiDfAymAAiEA33h1ajgRJwIJ1INPEUpHtbnzHHV/N90vmPZAIeHJxwc="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.3.tgz_1481299212863_0.181254354538396"},"directories":{}},"0.0.4":{"name":"get-it","version":"0.0.4","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"5d938b563a93ddc512a1d44369dbdf8c611913c1","_id":"get-it@0.0.4","_shasum":"af650c70e1f2fa1e967dcb2630b77b7f70d3c80e","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"af650c70e1f2fa1e967dcb2630b77b7f70d3c80e","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.4.tgz","integrity":"sha512-X5GAtubmJh3p2GxEcU5us1wxc+EswfS7okH8EqLRIRrkansXhNV10staTd4QhdY4Z0tW0oshprf9CoP1cbDv4g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDmv0HKUKMAzZlBrEkUxTM4E9ruhp6R9ivg8g3uaqYCOAiEA1oOeqjDfZK3b0NzzrLv92ESVJNw6OIibLEmD3g/vmr0="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.4.tgz_1481533721587_0.32441664673388004"},"directories":{}},"0.0.5":{"name":"get-it","version":"0.0.5","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"6ac97d8046eeda385957a80f8e5a57ad4677a217","_id":"get-it@0.0.5","_shasum":"cc46d914f3b773948c2da4b6cb67aee57e4032a8","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"cc46d914f3b773948c2da4b6cb67aee57e4032a8","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.5.tgz","integrity":"sha512-bePONsB8TtNi/iadEFRR3RJj5HUkhkh7ZLburcc6H+C5pltukjyJvcyyQmA+FrybtZNUAgHs8m3KsF8b2DWlmQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFH5F9I+eWouPM9UXf1dYIXP7LBcCjJcqWoAzQjqFJu+AiEA+1mhx6E4Bv7zgL1LRfF/Ll9dtbobahwXmFM/OFFuw2U="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.5.tgz_1481536295329_0.4123822804540396"},"directories":{}},"0.0.6":{"name":"get-it","version":"0.0.6","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run compile && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"78fc04f208987c1115d87980a67f4ac940d78d2a","_id":"get-it@0.0.6","_shasum":"deafefe5932e4b20ae3e02897c50cf91f5120bca","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"deafefe5932e4b20ae3e02897c50cf91f5120bca","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.6.tgz","integrity":"sha512-bI/sLMhVqxkVbUZAdNaa24803KrwDUVsYqDp14C449HgtixoZKvmaadt7ikZT7WzH0tt/E/sazAaXl2rDfa1RQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIC7Cdmpk5mlnFnCE+PFBFeMF3gnnL44hMqblc7VJluM1AiASUG45bE++bleYJxS9Rd94W2v2vwLGnleRNDBevv27Qg=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.6.tgz_1481537776408_0.8632956275250763"},"directories":{}},"0.0.7":{"name":"get-it","version":"0.0.7","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run compile && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"69d9d92ef1795d327361fbe6862d4916c789d975","_id":"get-it@0.0.7","_shasum":"8c9540f53a7da66b4f26b3a6d73e4702003ae020","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"8c9540f53a7da66b4f26b3a6d73e4702003ae020","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.7.tgz","integrity":"sha512-FXmVb+QVQiQU4WTCSphX07YWciT8TMNIeNal9Xk0JeRguPB3j94zKHfiA4klw0xEMezE04gbXM0bG4bZtJnKvA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHRs06oRmF8dqqTDDUE5OYsMj9r6qmSD9wbJjPbzQzh1AiBiGNuDdtYjOEd1zRei7yGX6JsEu8VKG4g4v/avL+aQDA=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.7.tgz_1481542882369_0.39918497460894287"},"directories":{}},"0.0.8":{"name":"get-it","version":"0.0.8","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run compile && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"e542a0a41e4c8030b294228d0e81ce31fa3514a9","_id":"get-it@0.0.8","_shasum":"a992d1fa6027622462f748b2427329e0045f1ec9","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"a992d1fa6027622462f748b2427329e0045f1ec9","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.8.tgz","integrity":"sha512-5t04fZ1mSZo+BzaQTHhY0v1KJfEOfrdoDJmyn54YMWIJTG3OImk8Z0evBZUK0T+xXNCewV6LWYQeRPfufstg7Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCsZTb/xjrnpQ6OyFu579MxMX02gx4SIlIuenneNKivPgIgSteolUayqdx/tlkTBWlbVQQeHV5zYUrKtV0qFOdCBQ4="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.8.tgz_1481557263104_0.1283503365702927"},"directories":{}},"0.0.9":{"name":"get-it","version":"0.0.9","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run compile && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"7d339e57efc70d7d0a81e4b892bec98ac9e1048f","_id":"get-it@0.0.9","_shasum":"5315f80b6099795055da83f4c511e7dc50cf54cc","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"5315f80b6099795055da83f4c511e7dc50cf54cc","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.9.tgz","integrity":"sha512-s/bHeTt564m43wfS1XYfP2k3KY+1kJlAihcmSxgHDpvZHkDw3sgPOKYSDsFUSu8bh7Vj3zqmAqkKliIlbX6qiw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDD56mO+CN2ke7/Pv8eNGOt4SZpvai9c2vnRU92+Xi8qgIhAMmfN/NHtfm0bnjaCIi+o1/AF+U+x/rB6WuGrUe+kYyX"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.9.tgz_1481623354172_0.8540966669097543"},"directories":{}},"0.0.10":{"name":"get-it","version":"0.0.10","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/timed-out":"^3.0.1","create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"03b1af3eac2d7684bf34d2cdec6b8f204798f694","_id":"get-it@0.0.10","_shasum":"ea8b07ae00064f60fd33a14677576e6f8cc909aa","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"ea8b07ae00064f60fd33a14677576e6f8cc909aa","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.10.tgz","integrity":"sha512-2Jhp5nj1N6zE7BpHbXt2SqTbWfGcYpnf1YO5EB8uZl6h/teoq4MqucKf3jTqR2GF/h+mfqHihZCHrSiyz4eTvQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC783mZzgEpJ2EcWKlrMyxSXt7b8ae/HhSIDR3So7FYLgIhAMiuol06pqgG4FEQBqBNs79uRNTKb9TU3xSqy2yk5WOY"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.10.tgz_1481654043024_0.24200883763842285"},"directories":{}},"0.0.11":{"name":"get-it","version":"0.0.11","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"32f14f7541fbcd00e1a5836c89a546e1723ce350","_id":"get-it@0.0.11","_shasum":"3c920457da3b432019b2efad56b8264817159c6f","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"3c920457da3b432019b2efad56b8264817159c6f","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.11.tgz","integrity":"sha512-sLUJCAhQk+/9FV7T/7xInLlQlTgXLzPz12ahBBt0f7lhEEWOVTKTwVR1KbtZ/enofNcOsraoWfRU7oNqt99//w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDJK7u+3I54XiIk8qU33OwyPj56d5TfYIYt5tZ8jMJn+AIgFZj+ljUeihwX3e+LnYcQRqOVxrKM83WFZTYM1w7GEB8="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-0.0.11.tgz_1481720899930_0.30236220778897405"},"directories":{}},"0.0.12":{"name":"get-it","version":"0.0.12","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"9dd0f75187bd6a2425f5cc7e40d9a14621d1707b","_id":"get-it@0.0.12","_shasum":"737faa60b3b7045ded9494daee982fe0f890c8ad","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"737faa60b3b7045ded9494daee982fe0f890c8ad","tarball":"https://registry.npmjs.org/get-it/-/get-it-0.0.12.tgz","integrity":"sha512-Z3vSWcrLidZdpEAm/vyticSseYBvE5J5XZWJzvwEaMQhee/1Ij8DYOi9TMtAjQOskGtcjSXRr4mZo6vBPZ+D9A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCkDaEAFhNqQ0uJFkZuhl7nY9QSdtLOfhz+yuqh9bL1HwIgatwUSnaKZt+58leu0BwiyZlZSPo9nC7cyzJtFBC+mjA="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-0.0.12.tgz_1481830344276_0.5704461359418929"},"directories":{}},"1.0.0":{"name":"get-it","version":"1.0.0","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"86cb2d3f3c6a7357608a9a03c3b15186c39fdd6d","_id":"get-it@1.0.0","_shasum":"f1bfce920567d4f540172a7637f5425757b7b1d0","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"f1bfce920567d4f540172a7637f5425757b7b1d0","tarball":"https://registry.npmjs.org/get-it/-/get-it-1.0.0.tgz","integrity":"sha512-4HOzz5vTJV2TyV7ko3iDCQkcZNXAylEn1XON36QfQ3nOON4RBQP7l/NUwS8oiHGbFeVvo/xeZKrxxdXRZP0W6g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBPAjYvr9+G2xr1s3LEuAhVjn5IWQ/Vzu+LiOVifJQn3AiEAnW7isM3cf1VVgpC1CBU10JPZzDg0nA9t6C9EMwA/s6A="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-1.0.0.tgz_1482157928635_0.9398988864850253"},"directories":{}},"1.0.1":{"name":"get-it","version":"1.0.1","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"5be7f421661c14a8f60af087f97f92317ca9dc9a","_id":"get-it@1.0.1","_shasum":"4d8a9f1cd7245080f63a0cc3894f4f91f36907da","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"4d8a9f1cd7245080f63a0cc3894f4f91f36907da","tarball":"https://registry.npmjs.org/get-it/-/get-it-1.0.1.tgz","integrity":"sha512-PgYRdmyXVXRb0+jDBi6B8GzaEwkSvflmKwMeJaym3vNg7p/Hdiv3hVy+hUz4X+V8iMcQn6afJJFgICoZHznOCQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCMAS6TJ6QP7phfCWr3Xd4OCJiWtWIw9UaLWJXf9OsblwIgQKpjTNyBGv3iKxduPY6RpCQmfp6/e0xUTTg6XAP9OoU="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-1.0.1.tgz_1482408127355_0.4821029733866453"},"directories":{}},"1.0.2":{"name":"get-it","version":"1.0.2","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.3.3","follow-redirects":"^1.2.0","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.0","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.7"},"devDependencies":{"babel-cli":"^6.18.0","babel-loader":"^6.2.8","babel-preset-es2015":"^6.18.0","babel-register":"^6.18.0","boxen":"^0.8.1","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.3.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.11.1","eslint-config-sanity":"^2.0.1","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.0.6","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.0.0","pretty-bytes":"^4.0.2","rimraf":"^2.5.4","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.3.0"},"gitHead":"92feed42a5c5571a626969c87a6c67dede3e7ac3","_id":"get-it@1.0.2","_shasum":"7a8e7b8fe6937b04c08f5a54ca8747c6a8aeef68","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.4","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"7a8e7b8fe6937b04c08f5a54ca8747c6a8aeef68","tarball":"https://registry.npmjs.org/get-it/-/get-it-1.0.2.tgz","integrity":"sha512-+Kq3d1g5tJcvOoT05nSGyPtJNuq5axueBPtDVqU9qv3wSybRbd5jMtikVXBoFLjY5fTVY9lCuv//yBU3BTq8iQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQClcDSkZScGOfcYe+YbaEm6zRqjfACklrv9DLKTVmhkYQIhAKzcwrLss8kvL/TI7z6yJTr5mhqZE1h28ozPHtO7Mdxc"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-1.0.2.tgz_1485351215036_0.6394480189774185"},"directories":{}},"1.0.3":{"name":"get-it","version":"1.0.3","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","engines":{"node":">=4.0.0"},"browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.1","follow-redirects":"^1.2.1","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.8"},"devDependencies":{"babel-cli":"^6.23.0","babel-loader":"^6.3.2","babel-preset-es2015":"^6.22.0","babel-register":"^6.23.0","boxen":"^1.0.0","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.4.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.16.0","eslint-config-sanity":"^2.0.2","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.5.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.1.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.0","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.4.0"},"gitHead":"8c5d24737e50b61f574d38767f081832c79b974f","_id":"get-it@1.0.3","_shasum":"8b5584f5e01f6bff363a85d60fcab8a95eac03e1","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.4","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"8b5584f5e01f6bff363a85d60fcab8a95eac03e1","tarball":"https://registry.npmjs.org/get-it/-/get-it-1.0.3.tgz","integrity":"sha512-9h0XQsaag/ihf6DWSKePICticwOtR3fh2zJXgVVaQi2BvOJBSblq6Zxakzz+2ForQVE0V1O6BuNmPTp9gvVc6g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICBKu3ciWsTEUFA5pezFB0qOXPooCyhqDmunOdKqIFPhAiAoAhKT9w+CfgTL4++PQZoZ9T6VZRJDj8xqj+1eLG61MQ=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/get-it-1.0.3.tgz_1487768999295_0.4032552258577198"},"directories":{}},"1.0.4":{"name":"get-it","version":"1.0.4","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","engines":{"node":">=4.0.0"},"browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.1","follow-redirects":"^1.2.1","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.8"},"devDependencies":{"babel-cli":"^6.23.0","babel-loader":"^6.3.2","babel-preset-es2015":"^6.22.0","babel-register":"^6.23.0","boxen":"^1.0.0","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.4.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.16.0","eslint-config-sanity":"^2.0.2","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.5.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.1.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.0","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.4.0"},"gitHead":"888fd1cac7893e2fda13bebefcd91aa8d4d47c46","_id":"get-it@1.0.4","_shasum":"f10687b69efc12db612fc3e33af001dfe3ae8846","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.6.0","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"shasum":"f10687b69efc12db612fc3e33af001dfe3ae8846","tarball":"https://registry.npmjs.org/get-it/-/get-it-1.0.4.tgz","integrity":"sha512-3c9T5KhPIjtcOX9OKyIZrtxRDggADhjE1jCqFQUPTobUsyXBh3hGkDcZLcstKBbi8QhgYz40MiuPiZMHGVGQRQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCmwhYYw4VMZVE2Y1i52IIjxtK+d4Xr8qFbts5Jhcd1GAIhAIYTMVQ41Q80w18SyKu+gNwP1oQQbB3N+TMj5R0b4c6u"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/get-it-1.0.4.tgz_1488372323757_0.7559049413539469"},"directories":{}},"2.0.0":{"name":"get-it","version":"2.0.0","description":"Generic HTTP request library for node and browsers","main":"lib/index.js","engines":{"node":">=4.0.0"},"browser":{"./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.1","follow-redirects":"^1.2.1","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.1","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.1","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^1.2.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^3.1.0","unzip-response":"^2.0.1","url-parse":"^1.1.8"},"devDependencies":{"babel-cli":"^6.23.0","babel-loader":"^6.3.2","babel-preset-es2015":"^6.22.0","babel-register":"^6.23.0","boxen":"^1.0.0","browserify":"^13.1.1","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.4.0","chalk":"^1.1.3","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.0.5","eslint":"^3.16.0","eslint-config-sanity":"^2.0.2","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.5.0","karma-chrome-launcher":"^2.0.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^1.8.0","lodash.once":"^4.1.1","mocha":"^3.2.0","nyc":"^10.1.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.0","uglify-js":"^2.7.5","uglifyify":"^3.0.4","webpack":"^1.14.0","zen-observable":"^0.4.0"},"gitHead":"05e3087b0641ab0abaf961c619605bab1f95c020","_id":"get-it@2.0.0","_npmVersion":"5.0.3","_nodeVersion":"8.1.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-pXDtpBn/+mobAcD9K143CJ0a5n6GtyKpRHlat2YG38W03RUmOKirAb0P0DNGLygZDNqvU3QznGKJfHJ3nB7xsw==","shasum":"1ce4e337a3d11ba7e0c2e0d288e151b2925e6fae","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.0.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICQ5T0OThKgtcxAFx1P2zl3O7cSvSWExjAwR64cIveazAiAGtl/52NIQQ5TmjV7/QCrxxKbug3aPchwV+AYwxd3Oxw=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.0.0.tgz_1498068311534_0.684468588558957"},"directories":{}},"2.0.1":{"name":"get-it","version":"2.0.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib-browser/middleware/index.js","./src/index.js":"./lib-browser/index.js","./lib/index.js":"./lib-browser/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib-browser/request/node-request.js":"./lib-browser/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib-browser/middleware/progress/node-progress.js":"./lib-browser/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib-browser/util/node-shouldRetry.js":"./lib-browser/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib-browser/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib-browser/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib-browser/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib-browser/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib lib-browser .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib-browser/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.3","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.5.2","babel-register":"^6.24.1","boxen":"^1.1.0","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.1.1","eslint":"^4.1.1","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.3","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.23","uglifyify":"^4.0.2","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"9b94834a6e65f80620007e66752251cf3b7d3e01","_id":"get-it@2.0.1","_npmVersion":"5.0.4","_nodeVersion":"8.1.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-jxuz9QV0mTXEEIZo0QIBwHqyM9xNCQv3gji51MkswK6cFugOK1NM6YtyKXGen9zyUOFNvE08Gq1izZhgVrnMvg==","shasum":"2027451d6ecbe057b1b5d4af684945b6d01118cf","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.0.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCU7KDxg+Cox9UEs/rwAFGki1oz2ptBCikKKSEm7sVYUgIhAIR9SN3xgzG6xCdz8RdG5QFYiV6DKET2U49AQvwM6lwT"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.0.1.tgz_1499166040234_0.44655000627972186"},"directories":{}},"2.0.2":{"name":"get-it","version":"2.0.2","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.3","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.5.2","babel-register":"^6.24.1","boxen":"^1.1.0","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.0.0","es6-promise":"^4.1.1","eslint":"^4.1.1","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.0","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.3","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.23","uglifyify":"^4.0.2","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"8636750d42d1163f338143a9c90716cbd8056a8c","_id":"get-it@2.0.2","_npmVersion":"5.0.4","_nodeVersion":"8.1.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-5Ad7AIrK+TdveF88y3FaBJO0Ktdvq/Y60TQCau38nJN0E8JpXhv7usd6X8YVlVcxmnxnRONDbj/Hixn4KCWj1A==","shasum":"2534e6a3250f8c6d11e2124d85402719256aa7bf","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.0.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCorN2vuZ4SDDCRSibXaJ6SthCIBF8xNVMzp/VdVAESZAIgZmIaGknkJQsx2ePD/oldynomc2S1XEHSo8TT383JbGU="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.0.2.tgz_1499168680565_0.9596124112140387"},"directories":{}},"2.1.0":{"name":"get-it","version":"2.1.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"9e15758843f333104721b26d84a0ecd3a7837c04","_id":"get-it@2.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.1.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-eXV5/Qm2tqJy1ODRlyct4zLj7J7f9cbOJqJky4zXcVgehe2z8dgHra/e7dOpUGJ48qOfKOfF4JLT805UQ6f3Og==","shasum":"7fa539d3521ac435945584ea52de9f4e884ad0b8","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCf1RO8pNKHjH1b9U1aCID4haFdcq+TDvsumnJlWAydlQIgEP6X9wfZLlspKSK4lTtEFPa0av40AfN26gV+QFcKxmc="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.0.tgz_1500997670986_0.3548400164581835"},"directories":{}},"2.1.1":{"name":"get-it","version":"2.1.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"ce517f445718daebb44ffed0cb35a691f3fbfa20","_id":"get-it@2.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-wFPmTtU7Q4Q9SHz6b21fIdneDJpfgqYc6CjvQO3Z1zq1XOhqCNJgisG1gX0P4Rw28DrjF8qbFpyFT3Be2Khvlw==","shasum":"ec63763757e11e720e14117fcf2a69749885bd13","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCiM93lUwXUXeBRvU206VSZlZc/qDop6kxkUkS0lYjhdQIhAJPMoLEO52GDShmM3xOqA+VG+rU6qS8w/qpE3NGsNh7W"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.1.tgz_1501246652048_0.24268549401313066"},"directories":{}},"2.1.2":{"name":"get-it","version":"2.1.2","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"bbd7b1ada54956ca302df0247956aa6d11767a8a","_id":"get-it@2.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.1.4","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-heVxXQESkOFcQyyMd2Da9UCoMs3kg+Yb3lc07rc88szhxaVFQnnI/IRGGjlcjL2LvZFB21/juAVyWYHECzREDw==","shasum":"ab3f7a61aaed8fcce133bdcdec9569592ef6f0ff","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDFIYdotWb3jXlEHeXcQ2WEaDMIADjzCtMXR1Mq0UIE/QIgA/26d6LSVx10RE/gZNOv9Q0zYTgFfaiT0lvK97ARnS4="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.2.tgz_1503948093814_0.33597816340625286"},"directories":{}},"2.1.3":{"name":"get-it","version":"2.1.3","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"f5c5cfbeb62fe3c01106831f1452d553882f5a74","_id":"get-it@2.1.3","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-RJRZma2khwrZjkhEkntMqwyrUHK7jXJaG1ybM7f8ChFV9xD4kilHBiX7SWfgNog5ZrZ4OentTnjOVSRebUngqw==","shasum":"5d9eac4ee8f0cc76583bc83a8c893c41647ebaec","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.3.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD84CJf+hZkqXqpA8jNf1AY6ks+NHqPY9V5oZWwufTHAwIgTqr21L88uyh7T0vfIFJwbhkdX9GbwxL/w3Y+mIwhIW0="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.3.tgz_1504004734609_0.2558262350503355"},"directories":{}},"2.1.4":{"name":"get-it","version":"2.1.4","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"ae3e2916e007b85a067541a5e51c8c8c14ed467e","_id":"get-it@2.1.4","_npmVersion":"5.4.0","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-pcPFysuvrO5x/c7ex14kDw2fIrxX0yiFsFWD8eHZn3u8O3hVSDPM4ZBNVx1UTmFUXTlMoMmmc22QK3J6aS4qVA==","shasum":"2f8a4e5977b1edd8ebd9822f6e61cf0db1e659ee","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.4.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA5mFasiA35fx76PILqj2PONP0E6S7U6nlaHI5Y4LTkoAiAp3kqRTQZHKuNh0KMunZGC4j6+6DqUtPlA7Zwh8XCIIg=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.4.tgz_1505230117298_0.43777903309091926"},"directories":{}},"2.1.5":{"name":"get-it","version":"2.1.5","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"8b99771d09ca3a7ac3839d046ef59abed3e7baa5","_id":"get-it@2.1.5","_npmVersion":"5.4.0","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-DD0PaZTAo1GPfw4Yr7q1KvkIKwiSUUTjOP/PiJWLJ+S71L3O5xpcNpO2aNmCI9LuQsjIumm0YLZieu2QsPTkDg==","shasum":"ffdb2aeabac6737e0c95b4e4f34bacb66bd7d086","tarball":"https://registry.npmjs.org/get-it/-/get-it-2.1.5.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC9fm/kL8nhcCkNEWPIyougEd8luuitHTFD3aAdtqscAgIgV9XawXm3JxhMjChwhUa8dXu7aCQiPypsMtK7952n8I4="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-2.1.5.tgz_1505388134224_0.9264569117221981"},"directories":{}},"3.0.0":{"name":"get-it","version":"3.0.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"gitHead":"0c909944d63bb7e38951666c3d632c89594e0631","_id":"get-it@3.0.0","_npmVersion":"5.4.1","_nodeVersion":"8.1.4","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-zfv/p7P5z6AyItS2dz1q3ssQ2VWSQnstF+Tf5mZOwkYK5bgkUrUp1CZypN5FYqEfIA0eGqeNsRUuE6CJ0op93g==","shasum":"807a0924e89d3641ff35f4224b6566d058a13be3","tarball":"https://registry.npmjs.org/get-it/-/get-it-3.0.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDYne0H/kSEbuZaay+VkfySUmcsNbMLWAPQuxZa807nNgIhAINQxgWlF/hh6h/UEO4qhSdnOmV0yVfHGxQBGgZEIdX6"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-3.0.0.tgz_1505766857113_0.13225009688176215"},"directories":{}},"3.0.1":{"name":"get-it","version":"3.0.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"25ad6e750f8d95fddaa81d739402672055f62d81","_id":"get-it@3.0.1","_npmVersion":"5.4.2","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-BZ0ngYa/aX30HvzFpOAywx1Rk9zG32XYThVD/oskvLvns3dy6hNKLzXQZbQXfNUSX4htFq5QE32xALk72+R5dg==","shasum":"5442f51c270cd3e02e05c952a1a628b635565155","tarball":"https://registry.npmjs.org/get-it/-/get-it-3.0.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHB3x+qgaiQMVgGadNpsqoY+t1tlP1dU7v5Fz1oWkeVKAiAo6Ia3GA8Cfibai2nbGpYmIapHNFoqpiFA0+IsvxE8Ow=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-3.0.1.tgz_1506077831304_0.94164311257191"},"directories":{}},"4.0.0":{"name":"get-it","version":"4.0.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"0e39622d6657c9e0d26a29416dbe3f4a9464ea83","_id":"get-it@4.0.0","_npmVersion":"5.4.2","_nodeVersion":"8.2.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-BXHTf9BxTB8ah+XQRXqeZBzegfxy1nk75RxvJSPsfWK8UjsH9kFdmAUfb7ccUQuaDDJAibuDfBdSAGqGIy6ijg==","shasum":"175c864310707774e4d775c0bfe3c7978efbc026","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.0.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCgkRvs9yFinLMfUU+fSSr6hUb7ZAH+HYDafohfuogQIwIhAJsDFzbNwPYvZa2TVxk1ObiefelZl2MBcun1PCic1XYB"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-4.0.0.tgz_1506589589927_0.45150179881602526"},"directories":{}},"4.0.1":{"name":"get-it","version":"4.0.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"45f06e3226b1380ca6dff9a3e91ea43a5bcf4416","_id":"get-it@4.0.1","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-fpibNIRemynFiKLfA+Fm0pG7+8z9tawwRAuaN1dsJ/h1Gy5NgGZzFWi7Ci/qY0lOJwAI/T31BZAOP6K1BfpIwA==","shasum":"57ce86379de54a9ef633ee4c81fbe792df82b3c7","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.0.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDItybIufA5Zw8htBdtpjU65lvrVVm67pi06TrZpnlBDAIgIn3bk9o3Stn4A61eg7v0PdTL69P7xtBx7njI6dnba34="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-4.0.1.tgz_1510498530607_0.6721795601770282"},"directories":{}},"4.0.2":{"name":"get-it","version":"4.0.2","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"c46e20e99d80b12ec5c86a2210e878e6039f413b","_id":"get-it@4.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-eyJOmisx/0cMmgUycZ9/mN845ODzF9jr9an+8IBOQFt0mRXLjCE+ZpGc64pl3cB7HN+gAR19nxklUn2ZRt9IGA==","shasum":"71f21b3244af7f4a3fd45697fba23576d02b8646","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.0.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDUBkdY1uKWqZKleJRNHJ+c3uux7X3L8dkLvpH0pntj2QIhAOPrkJb9f5cTruF7WFqxZ9y1NOberJ5S0x04e7Bzm4g9"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it-4.0.2.tgz_1516488645131_0.3189817271195352"},"directories":{}},"4.0.3":{"name":"get-it","version":"4.0.3","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"b59906716515816ccb056789404b0ea2e9b2be14","_id":"get-it@4.0.3","_npmVersion":"6.1.0","_nodeVersion":"8.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-twJNh+a5ABHK6SObUbRmxcbsxUVjT49Sf4HIDfetr0f4IG/ZosqU8bGh4zPqOgUoUq696xAt6bY8/hSYW1RtNQ==","shasum":"66401790c0b3405b4ec19495a73a9a17af10c824","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.0.3.tgz","fileCount":134,"unpackedSize":521330,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbFaMNCRA9TVsSAnZWagAAb50P/jQh5OV0dvkrkIdnKkM1\netUkRKGlLw2/JALo0hQXVs1Vbm0u7GU9tR2Hf7dI802C2tXYYiAp95xYax76\noihSoKeIWWZ4fNpA4Zg/bRc/Y9T7nDZly9LF7ntsM0AZWvZMgTbSux136lsN\nvZ3lxqOoq02DV2XPQGhWYwWmZIJMaW0orlH4B/aMC4Woc3oLKg/qADhkHLw2\nbWg1e3bCmoi3qxppAe0zetpDwFQFhX2IB3Hqipjbs3bUtIkXpU77rDJM6khu\niw4e0TEReN4s71Fb05qDWdhwmspgQV+6ZDJzqWp6BFZ3qk7y70hcVRdgpxuO\nPgpoj9zQR/WMN+uzS6ZPxTeMM0FM3n2JbuvlaGXwlEjhUyHbwQTzyr2hLEgq\n6AvIkdSpbcq6JvOJv9GR56FBvLmxqmohXIPuozvXSl8rdPSuvw2gim0xw2eK\naC6hfXB5fPIq/BH8CDGGO4eTlKtFL3fhya+o+D4RXThjXjBNtArY/YyLM/Zy\njwlmBiuT/CUkR16e/zUrjGaI7Mp0HyCBKhiR/mDdesbKvDfZ0ZkPGkWKEgkj\nzFXGlRgbXJq5TEOZnxu9Wnmkrk3efowdAh9j5t8svO7iREN0d9zfXId59TSP\nvNQ77t9xQNF964o1Po18vNF89aByahdariR/SI/tnkvCb9xkNNgTd2zlxGHo\n2j+o\r\n=gYDN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCxDYOpXAKC9PZNu+qPT4rw0qNuuXQgcH1yk0RKX/mApQIhAKP4QPwIUIc/hOuNhXe1I7xTYF4+PU3eIKjbhgQY8HGq"}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.0.3_1528144651546_0.09151699457175733"},"_hasShrinkwrap":false},"4.0.4":{"name":"get-it","version":"4.0.4","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-sanity":"^2.1.4","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"5fdd9d5fc7e5521d5b01c0c515741fe47fa956ea","_id":"get-it@4.0.4","_npmVersion":"6.1.0","_nodeVersion":"8.9.1","_npmUser":{"name":"rexxars","email":"rexxars@gmail.com"},"dist":{"integrity":"sha512-687ZQbVNQSG9kVKBRaucrHdx8JN7eFtGM26RWzIPtg3q9atVU//q5F/cB9fLAWGL4FyeuGic66cavFuk5XUm7g==","shasum":"60f63fb9f340627fda26d12591ce8aa303bbcc0d","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.0.4.tgz","fileCount":134,"unpackedSize":521841,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbOzeyCRA9TVsSAnZWagAAciwP/REB52vqJFQdvSp7dm0w\nND6UcOC2xos+YSYNFHbpU3pAVFumsug312s7psSA1GE2l4iinxjHXwP/dKz6\nhrSF11N5zR9XMLOhzR9dxiZQl0a5S7gS9TlcRo1GyNaG6e/ozY3oU+mtyV/C\n7utnFNG19z1yOjDvQZsC4qJZrhwnS4gFOp6k8hlES6FZiFMOFKUjLZl+KWD4\nkNxfvSUwOcogAxj9WRxi57Hc5JHskNh1R5kXepsj6PKK23mVqXjR5YaBatyZ\noD0BBXJDfGkV1ReoDdeo6rzyIIfFXeRf7jyB0LVl2jXnWwHeRXF8Wk2/a/Le\nNVU1iPo3BVzj+cnVqVTw3YOkQPBBHQd6kO1h2ciJC+YzuLiS1dAYUSGHPpSE\nAf2BQHsl9BGPh50MrTCWPJtrGZfAGGml6lFufcz/gCW3w6dUixM/KSeYyXZ8\n2ecIum7p8TmbvfIaqHi0b1+bHwPvL/jkncmWPwVwUCZP4OthvM/0zDSd9LcC\n4VBIM9Va0X42RN04qpA7J+SsvqNeYMUmheHD/p065KmzTYLIsi8jFYWUmpn3\nvWuKefj4OR35E5TMFP93fswpXkA/s36QbIcaCsaUAYiqprmSr9L1xlSMFbEQ\nytJC9Ru5/lrMALTyG724ClbuI7ueRK0fP6O3+j6rNjt4xPqzYS3FV7QWQ5kw\nD74q\r\n=AwGf\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGPduaAgKPCoryfD3SfnNzh+a1GaemhK1OqWq7gveCRgAiBJvn9nJBZ06rSSe+HUmOveLFlJwll5jlzzKCBpZvM7WQ=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.0.4_1530607538468_0.703162260274635"},"_hasShrinkwrap":false},"4.1.0":{"name":"get-it","version":"4.1.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"95403d82d97aa661b81204e2f0c229fd06a21da1","_id":"get-it@4.1.0","_shasum":"d014bcf9ff0e14f42fd3513e6cf5c19a903578f3","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.14.4","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"shasum":"d014bcf9ff0e14f42fd3513e6cf5c19a903578f3","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.1.0.tgz","integrity":"sha512-2GN/GsbAk0RlvxolJuSlufRq/4woKuRsaQIdn+7Iepu6+zwyGSWaemsTRWCUnuzYbJddwetNwF0bT7Ws5eQ+qA==","fileCount":140,"unpackedSize":618600,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWW2kCRA9TVsSAnZWagAA8MoP/1Lkd6FK1QNhbqandGoF\nyjQkFWRJAoIXtX84EEMUP0DgzDLMzQbg8GAEHejKVCgXgDeEMoIin4U4TGJG\nHGO9egasBlEZe4IEWs1mRRwuMlnQempSK7c011muZM+8WVXwzxCwKEpQXoU0\n94agdqGbmrie6Q0ms9Cv+akf43jNjeRM+/232ukq9EyF3vQroejigFYH6/zT\nNDIx6tRF05w7t3kvbSr5W9kMP/QW/fLqVxYGtV3n7t+8imSNMKJVJ1BLByzD\np8LLx5wihymTeNSSeQQbe9XgfXSBg6Lf+fcNZspXDEs5LaO1L3sJQlaGx6Ix\n0pvpsjbWPV7Lg98PNrPi6rVHE8oB9qs7EJ1NzYfUWzG7oD5u/gVgSFzAwTL6\nV+ZWgPgSVMEYGk2aXmuxFUu6GjtiDAOtzzKeLRhVTjKc01ure8LHmZMK6nUx\nIoWvl4kFVYTStsLrZijH/ezu2hcDTeKVqjX8LPTr0IeFfVtlJP3dCRFrX178\nGQPOQrFNjpYaK1mgbTyGIsXEmJEE1bRGSttZrHFcQl/AauewDfhyTAP2g637\nP9rxVWKqhI5AC4HD7phb9EFWmXURBahkhCoJdkEbWLedsrIUdK5PNmYevr0y\n5+YungXa7cbxlqpDP5GfFXLwbCMo5LyfCOWq1ueq6lGA5T06cnFHVyans8pN\n6JQX\r\n=Zx75\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG/pYjpdgRUFDJoqvSrwflOvWSzyZOgIOZ6FZdZ2MYURAiA6lNYNy4jpwGDwDgPk6R8uJoe+63ukHZF/cQo0dZcz8w=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.1.0_1549364643760_0.43763384368489233"},"_hasShrinkwrap":false},"4.1.1":{"name":"get-it","version":"4.1.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"1ac901a347a28127df8acb9f8a4d4f7395af6612","_id":"get-it@4.1.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"integrity":"sha512-4nOiIADTnMN70ayZic26nWdES9Gi6ta6Xg/U26el2sOOwIYkuhmNpGj9bOXfRQOQEj9VR0OCNCNuLW6/wJIfug==","shasum":"d214e92929f31e5b16c5689795904507f2213b1a","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.1.1.tgz","fileCount":139,"unpackedSize":620662,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWuWRCRA9TVsSAnZWagAA4L8P/0YMKduBfJMeVrnXGuG/\nz/KOMbTGk2n54uSIoazGqZ6z0WTArLY2UBwJ8lU142whUrxBcBDWDxUGIC4Z\nv4uO5fOZDVkyWVMKXyBuc9kh+0Xsac/4gpQ3Uk/HFHs/kIkT+3gzws9Z7Bt2\n7/gh5h/0sQ1AAa+KlhXm8sDlRbMaewRJevYv0ko0glIWL9KQA+GYFExryIMp\nnpCe8tzBW+U5UM2RX7D5z1iaNb1x5Dj0edd6gd1n6MvoKCTv8pMj6niNyhNJ\nIkZNggMlEqtzh7+KLxbbtL0SWxTXp5gUEs0MdFWqA+A4Q5enV8GP3l64cseX\nJIFrqP+0Ay7baNaOsTcFGNG0MoWVbVje4Z7L+E5VQnddsYH+4XGiNnHkhrzP\np1VhtbQWs/tyRG7AbAbJICOuqdhKO6kJy/OSPTj6ZjuNSsofZeXc9a+kcO/s\nR59bkVPf2Qx2yM98hBM2WA5wjPmukqQng+6WnWB3pAJYryPkGeSV4znuSk+I\nfRPk6Vu1DwnmxDDQvoPjCNfeFvYTlGu2t03ukjuq3Q8ziUlFEsMCQJ44ElNz\nNeEQswF3fzTWThFK/wIKcGrs5I5dg5xV1B32Sp9Ycg2fzMnEQvSFmWqLiA8i\nsrawpHDYkpU1IlHeRMNUt5GK2F0Nq4Xy52PUMRCZsnDmcyw8zYsvgbhP9X4b\nAR6V\r\n=++DH\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9mJf4lF6doW6Ta70d1fEg6QDW6a0mRONY7QZ7B14TmAIgaXhTC3L+hHmJMAZ8rYnCFxQehb1EfkbZQ1Ar+W5m8kc="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.1.1_1549460879695_0.8633542461876051"},"_hasShrinkwrap":false},"4.1.2":{"name":"get-it","version":"4.1.2","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"db33160a4f0ecbf8784658dad0580a821243e42a","_id":"get-it@4.1.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"integrity":"sha512-HXvExZ85ogfDoH3M+g6dwKFvdeprDnmC1qkBaRGuBMBai/rT5LHh53FV1elRbbVQM8UmuYriItX/OhQP5CKqNA==","shasum":"2d2cab085ff3c5b2f8b487d99e7f6cb4e23cd96e","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.1.2.tgz","fileCount":139,"unpackedSize":620662,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWurLCRA9TVsSAnZWagAAqt8P/RrCwVXWxqTJB243DlRx\nKCf7jW+y70xC17ylSM/ZxNoM9HHxjqX5SQvgSSZGDkCuXv+nGLGjJdah3KiI\nCvevVAndprHu/zTjMvCspe24kbsuBGBwVvI48EM1VJ5hKlWNiQIJuHrA1usm\nTCbKpAwe4yjYer+GRegqAi8O22wvHjOBNkWUjv82ohc2ixNrgzATsCyAMx21\ndHQvdAkKzrDHaWAbOfVZ7TNFBdbiKDRrclIcPAIRY3xU6FXxXFYS/Wy4iqgr\n/+uHaP9RIgCLSMxn8rQWRPgIyfJZEb2ar9wm9ee3AayahWdpUX3dW2itOV69\nmZAGT+/rrfQFzOgbqqJOlEMxtMQbYdYkG3fWYBa53VyHFNOFABcH0wZYz2Kp\nh4k0OrMPlhnhXD893opHdFOtl+hAlzq1qFRolkcPbJO7+iMgo8cCOhvzmivp\njyBEst8fMIz0W17FdisZOQQJsPfChAJsVHLP2f3RlC6ChBBON4xvxHLM4XOO\ntmj2bBS7uEh6cWwt8TM4+rp5Vp1EDasN5ApciAdvwHTnLQXl6x3EBJVZ3Fgv\nyN+xgGpR8Any94q0JaONws/ztOu7Vf5v7Ttj9qOgpqQ04Ip7P88BtX1XkD7o\nN4uMrRVjr+3uwlxzUCUp0/QjWYYfvgp2gWPiRwaVu/hoflc9d58QcBGUML8S\nmvs0\r\n=pNaX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICOzzoNqrFBYLSxoTwelpO3WtDmM8ZklOhdHMxAdrZrXAiEA8UO3b8sGRgt5HX/+dGaD1+6ga2AaKtuNvaAe9a/fbrY="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.1.2_1549462218948_0.45802667955378107"},"_hasShrinkwrap":false},"4.1.3":{"name":"get-it","version":"4.1.3","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"fe39481ffe4b6f40242b9d5af0650702ecdb4c9b","_id":"get-it@4.1.3","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"integrity":"sha512-U43cy97RJkBgMi2CByZoQttxg25iTGyTbSVsHRHjEwfs+BWHQa6cM4OX8JWwqlCTsE7t199TQgRS9vBXz1txzQ==","shasum":"4d2ccc2cad05cd390ed9b7ad27e8b1759685f7b0","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.1.3.tgz","fileCount":139,"unpackedSize":620702,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWxepCRA9TVsSAnZWagAAHKMP/jLwXh58QEgUIdfhwyGt\nxw7HqlFEp3rOaCajyMcFcmNQOf7HgaIJIYFs1LeH4P4kI9zqk8Y+KcOQOlQO\nOATJhZaT6l1p3QBYS2ZJycJNGW/RZZ3qgx/NfvEe37/Lsw9+owzyKOk0pVAU\nWPDctESwssh4KsmcpkehoUDJCzeMOd6B7MpmeeEn4KRA8xcXosJTmK3WgB61\nTIRaSVbaOXYvLT6gBQzKbWOIFzUI7ebku07XEnG8W4TCYGaWKS371UgAjIWf\nM3hpMjp8DhJbjf9+9h4si6JRTr3vecxoRJ7ojOyhf0W9vGW45ceBcmZX6sUf\nuTgNS9wauk/l/wqUtOR/E7u2EjB8TFfTCmRcJCKqX1DQV1ByTYor897HQvI4\nDRuL9kHL/+FAUaGJCFkLOI+CUfP7RcS075kHCax29PPEMr7qIcgJ1u7sWc6S\nJElvtZ22sRV8Fv/jNpycSGm9gxq1Pww6ZTPGpsSZys9v1lwNFyh0Fs33qGHX\npFRFslm8j76SlvUT9qcY7ER0mDvnikfzkYCzTELRl7j8k5BhFuE28RBuKZ3V\nG1Ct+g72arUFxh/Gm1GMmLeFJfAvccQzz1WxFn1jyDNW+eNrsSYJL1NUimrK\nsbt6dOD6VGepI4tCl+s/Q3tDXj6+Wy43u+yfVf80W03veqqeN9py9Bz0Ep5F\nAWlS\r\n=Yv9D\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDBSQclwLbt8eAeMuUvyUJCMymqJuFfPHS+zyO/GOqWoAiBRfSU+RNIvBw/y7nowL/2AcVGiwWHhLlre+PYpZ4Sr2w=="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.1.3_1549473705279_0.6880020523285766"},"_hasShrinkwrap":false},"4.1.4":{"name":"get-it","version":"4.1.4","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=4.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"dfec45df9de1e408f150d3cf55b7331e92d36486","_id":"get-it@4.1.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"integrity":"sha512-76AbljqoAhGrOza2Z/1J+SH/ANxJJgvpgCn6xY1hxILou+XNV0OZFAJ6dJBq0G9nPk7U+96bUqttjoSTMvW0Xg==","shasum":"440f837226de99abb5ecfe10e6597ca7cb8947c2","tarball":"https://registry.npmjs.org/get-it/-/get-it-4.1.4.tgz","fileCount":147,"unpackedSize":667499,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXXt1CRA9TVsSAnZWagAAVYIP/2xJ/2y7x9MV+Rv8IFNv\nDmltg1pAy+vMEgC+Y3NbH5DoULCD+kkDBa0I6vfnfXqbnXn7G059rZaGpxv0\n/1r08r9OMdgqbuK96qpvmuCS0DfeAnQF5sLe8RAyueSGiVDWp2i+qNUc4/t0\nRZcF1JJ9SBmUS9VLaEI8pDT6vmt7MjqwsrSHGPlXqJjWX8F5MztfiLCsYqbO\nhjg3yGZpw5UpEpGgTm9/qqGb8HzNpgL+T6yy5HrRKCKpvUERZf0CVsvIfmuK\nrSVRILVN6mxFaH299rfaG+QSz8N6hA0yRNBy0dFecWcoeEF6NivmbuReXL+o\nXiHONJFh/7wKr/t3x8OTRG9bYLus+AqLVFcTKadyXJ/8yrcH8Bp0pa1unJ4i\nVfnb0p3CRzuz6J5PMe5dBMLGxitHQUo6BItUZokz+hzXqVBU4mpK0q1KKAm6\n7J7jUZ2JmaGk7+/uX99irIDk3LUoxcvLBZ4P2ZzhsIHFQtKatSGa9JEKR0wh\nwok0qXQZhOGahpVSrPQwiOxMc0U/kfBCvwVPQSrm2tVIGZrC3R2oNFmFDIsg\n5vpcPSiNvu8BNwfJM/yDWzDtE9/dNpsFZPrQg+6Zy+adt5UiH7oooEWM2f8Z\nMTZ4uKXNXPEaP06R33RRmqh2Bo0CJWMREGmRQaX3X57E103jTjCWnjapoy1G\n4hIl\r\n=mtMr\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCmm+Nf+nf4sm3n7LdFK5/J6+Ftfro9Yuveo5W3uUF7xwIgdQBOALBMJbM0nO2dh79L+HU+S51yLuJccIvvECVfjT8="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_4.1.4_1549630324783_0.44972287859588844"},"_hasShrinkwrap":false},"5.0.0":{"name":"get-it","version":"5.0.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"765ff1e0203e5ad0109e2f959f5c6008b47e8103","_id":"get-it@5.0.0","_npmVersion":"6.5.0","_nodeVersion":"11.9.0","_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"dist":{"integrity":"sha512-0MY3Fhil9kPO9BhPKczhlsA8Et3MgowoyU296O/Z5Q72h9FpIijfWnv6p+lX0tHdHXwvFxA3i9tWX9Xq7gdpQw==","shasum":"d63d93fc95ed11f7f68c035284b8fafcd2467384","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.0.tgz","fileCount":151,"unpackedSize":857364,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJciNswCRA9TVsSAnZWagAAPyIP/02eoZopkEgseeh4bNat\nOfn0RS4Vn2w3A4FejrltwQuuiY6ViVk1FXeVbfCnzkIm9b0B4B7nfMz3PfGX\nKjN43ZafbvqDGTFWY4frwdRWOrc12BfucMaNUEZjMI4N2RmmuYaR7cRkR4fd\nuIyqax8rvHSSd2ZADoDLpbeGd+w51+b3ryBqz3jo3eJyZ4vJqOFXGBvOiG2Y\nNgIzA3MxrYgtINwBCA/CBED36h5mkfsKYhh0mj7vyE/OgdswoExxbMr2BraT\nuql7zLh0QUSzRUrz790J1BrYnxuqkcUzXXakMHHKqDjzb713f4dTRq73M1dL\n0OzG/CTRoMH3djGm1xsJg8h6GHkWJpWjqDKJVdcY9zP7bHmEDhPOvg9TQbKI\nBgM56ldejeW+fEqBjkZ6R3O609IFD8J+qh9Z1iJfY0WtH9NZEK2kV4+bNYn3\nJG9JjC0exuzlzRgU7ybb4zYor2nRYWAyV4mSWixFeeQSLboZVL1UKP6BIc4s\nmcT8zOUmacYAV4xjrpYAbTRXi3DSO+qXnqMAIIw1N8Tpwm5Jxe1EDWU8NsDN\nqme+5fnxxrdFDw6rDigXo8eS17gB94gAKp4m809pWo/f/wG/fXOxnzfL9WDq\nlgdGOAyLFcuQYog9MBXDL9gqYqi8v/6hsTGn5n9i7X4cV+29VzhEhPoYK0S7\nAsEI\r\n=KhQ5\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCO+37BKwIRVvpDxoc21mRtHQPG9aHwfbi6aFa4rlhs/AIgNFOwVNWkd6BMCb32juB8b9zb/jG06OUM09x9PCEn7Qw="}]},"maintainers":[{"name":"rexxars","email":"rexxars@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.0_1552472879804_0.8164377258169839"},"_hasShrinkwrap":false},"5.0.1":{"name":"get-it","version":"5.0.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","timed-out":"^4.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"ba6024491a3822c3ba4dbefdeaaad842297fd3d1","_id":"get-it@5.0.1","_nodeVersion":"10.15.3","_npmVersion":"6.10.0","dist":{"integrity":"sha512-Q0FmNvbr2aLJZesXQ6eBuiB8BJB2qT6tBBaz3IGnZBqBM5wH+6uWVkSb2j81Q+rj0ALHNQLuHMjeCy6OXZGhwA==","shasum":"3b46f178993df688da050ac76a5b40e392cdc673","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.1.tgz","fileCount":150,"unpackedSize":600977,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRDUKCRA9TVsSAnZWagAAHy4QAJEUDIwWQjEWqXi9PE6K\nWbflBpW/hKCf99EcN9SmYVX3jBmeovaAkP36cDLpYVVA68mQlROEbOl/riqO\nu4n+lL7A12rY2/puD8mGF8PNHvgHwiO+qPoOuqJBVRXBJzg7m6Lf4bD4eC0h\n1i6uRh4pxMfKaM4z3/vGZbzFxLU1u7GS5Q/zGm9VZVi7r7ppxh0gyTp6s3YV\nVMIbE7jhUsE+RorApmrn1XIU7P2+6dLvmcaZQ9Td+yYOa4OgsFiIntDFSwe+\nbMmxQNUzDMvgu0pPxxDMtiT6VVOmhTxWZzMlvZWUBJOFy56mOlsvrYaaGZPy\nERMvwmIT/S2Bge3k3I8KFmtS7d4IbwqpEx+h4ZlSVyFv4kETJOgcB9g3+/kr\nO3LV54DFGRpYonwhPi3VrJzhYGt2gJ7gxP3k8v6o0nxWnxtBlZDevn/oJKHn\nFN6MpM2jNFjH5pw3wuWSZQE0+YJAzyD6y7ymtfHv+yhI15U0da1+s5ILpIo0\nC82j37er1Us7r54DDqM9gvRoGz+dD6i/ktl3vzC+/VbVCH6KllyUD5X9I2MD\nbMeNy78b4iGI1wzT7jHJ+xjvObKUvLitbG8oVG/lcbQL+0ClLWTONTZ26cab\nRJ2gCcIc9b/F9q0s/E+dAXyMuLHiZVqFlf8mLDSmPwXKRBQzB0tAa+9KdaCo\nIibA\r\n=Et02\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEDeyKBvF/NXHRk/hDtNUcaWXi3eFyYgzy/uY50EYVzyAiAGcxp2yBKUuDkm41lSp0+ralyjgOlXcl8KWxcHOWb+cg=="}]},"maintainers":[{"email":"bjoerge@gmail.com","name":"bjoerge"},{"email":"espen@hovlandsdal.com","name":"rexxars"},{"email":"developers@sanity.io","name":"sanity-io"},{"email":"simen@bengler.no","name":"simenss"},{"email":"per.kristian.nordnes@gmail.com","name":"skogsmaskin"},{"email":"thomas@sanity.io","name":"thomax"}],"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.1_1564751114117_0.8644792120226652"},"_hasShrinkwrap":false},"5.0.2":{"name":"get-it","version":"5.0.2","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"e07bf63d01752f013248e84812fd15efadfa09a6","_id":"get-it@5.0.2","_nodeVersion":"12.6.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-nEbFn2HvKFWSl8CNmiMZs7prWSwQELCmFak+4NMaTtrB23ePpVKf3/bpjdTjsjWMc/W2a4SrChvmgqwa8fO8UQ==","shasum":"4839e7160d206fbd1353950ebce721b47292eb9c","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.2.tgz","fileCount":151,"unpackedSize":682994,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXysyCRA9TVsSAnZWagAAMmsP/iloLJpR94OpnSSEXNdH\nx+TitE0O8kM/2mfYfROEvK1zk58B2yWK5vov+UzPbiGKGiyVKVfQeup262/t\n6gNkehuL8d5ffoO4/3Tr1RfYKc4kb9vre2MSUEmwjoYFD/vRN9HLNBYke3VT\ndsuaQ0qvqeHB66ZseMye14PVlJvYFb1jhQqqlrMy5tWn5LJsi9x5aES3V4w3\nn1ts4AfIXk/hcArHe7pVp+Q+yrDKHa+UzsMR2RrDtzt+YzE36KCQutp4bdqV\nrxBrfoVw2g2Om8cmkCh67JBw/3O23criEiMyjd2yjoZihiU7Y63e3DHsBz2Z\nt339sr9QQvGXzehqj7tCiJDqKb68mD5SBirw+0hjR7c2ipmoKF/epZyO4x3C\nJ8pNG+yqpfj2CFucsYcO7MosJasPA/OqAqaTgZn7j+k6jFrh/+vWERCi9SaX\nXgH0eXbzD1oZDu5EK2NEjlHRxVF8iX+GhAi/oQHDfxGhPqM1uXtVWwm00gUP\nWNxjLyyzawM7aDAykDA68TGizkst0Le6BHAJhZacBFav5B7o80523YNLeTpY\nYZlkJRFS6Xj6SfOVOp6TR1Qcl72OwuO/b90N9IhC35SNJHaBitCvvCW4a+jZ\ne/OzVGRjgZYnGXj/NVDqjYdkaGL7I4y+VX4N9Ho+fatSdvkGjGd6O0JLx87y\nQsKq\r\n=28/E\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCuXvUH5f9CrvXTRBJQrvJDaN3J44wm1oZOJ97//jBygAIhAJncBY1xFDri8ykxUikXYf9KmmQgbDCzc/+6NA88dGrG"}]},"maintainers":[{"email":"bjoerge@gmail.com","name":"bjoerge"},{"email":"espen@hovlandsdal.com","name":"rexxars"},{"email":"developers@sanity.io","name":"sanity-io"},{"email":"simen@bengler.no","name":"simenss"},{"email":"per.kristian.nordnes@gmail.com","name":"skogsmaskin"},{"email":"thomas@sanity.io","name":"thomax"}],"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.2_1566518066285_0.22717682264438732"},"_hasShrinkwrap":false},"5.0.3":{"name":"get-it","version":"5.0.3","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"29c6e0937193075a16542330064593dbeb8441b0","_id":"get-it@5.0.3","_nodeVersion":"14.0.0","_npmVersion":"6.14.4","dist":{"integrity":"sha512-S/QxA9/P4e0tHPILIdf92FVYrE0vre7ChXXMZoILuU4/keatMqnW1KAzCEOH8toJVbj+hgrOnZdUxd9ruG7lsQ==","shasum":"482a72d91b482ccf64ecf0499b5456952b1ca9d0","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.3.tgz","fileCount":150,"unpackedSize":678028,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJetKluCRA9TVsSAnZWagAAcv4P/0A1Qgtc/ES9GH1L/ezn\nyndJeQ04+6AocnExd52PqqTMyBrWhoCejX77JHbWKrYaASo0l+qH7hW1Fkln\nZ4mdvQD7ydfWzPYjajmxZcocsZwE6NL32P6+Fuvcw+eixEHV6MBSsrJGHCg3\n3BREzZKjocysRmEZjEsc6QFqXpHrOpbS5Z4gZjkHJk3Zub6h+gotjJOfbVM3\nCpze/txjc5QUAWUnkR9BtiJovHz+dOa+Od2bXfNj6SvlfPD//D/HUBy69n0x\nubajveFL0gAVD2U8iv7ih2A+36TNLcwR6dQdWeHYJTL699+dQSKJgGeO/6WK\nG2NfRTTHt/QVszH6P+9TNyfAgnwuKVZK7kR97QI+YPSput1JLvU+GkfuZcWv\n5wfAp5oJ5uRuL2EmDQntKJ1hfp2faQmBCCDO0CxyVhhOcru8HQnvXIl47pnO\nxLYYyvkT36udhN8brzoe4z6IWRLHhn/XBFVxtQOzAliwNgR9Tsr5cvPFG/L7\nu87G/4yXW9pKNo7OqXO6H08swmc5E10eCwfEAUHm8sYBFowNlWyz/hRMocZk\nX2amoBQUV9/Zx2iD/DO4/VTgUr522TDuFF3ttfLnJrZJ9Q2bbTyz2XngifmY\neUdbctQeojTq+/UU51lnnTcieErjNK3qnB7MAmstar7qXhsX4WcIc3zpbJLs\n0Uvi\r\n=MlH1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCmqX9OJRyetKrdBmf5bMA/AG94Kwl1j/chY6w6I0UETgIhAKlXV8mug5OTAwUbeERhDznDFvIHsbPnNvJXTbF6PAeE"}]},"maintainers":[{"email":"bjoerge@gmail.com","name":"bjoerge"},{"email":"espen@hovlandsdal.com","name":"rexxars"},{"email":"developers@sanity.io","name":"sanity-io"},{"email":"simen@bengler.no","name":"simenss"},{"email":"per.kristian.nordnes@gmail.com","name":"skogsmaskin"},{"email":"thomas@sanity.io","name":"thomax"}],"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.3_1588898157010_0.30242845158367815"},"_hasShrinkwrap":false},"6.0.0-0":{"name":"get-it","version":"6.0.0-0","description":"Generic HTTP request library for node and browsers","main":"index.js","umd":"umd/get-it.min.js","sideEffects":false,"engines":{"node":">=10.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' webpack","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' BUNDLE_ALL=1 webpack","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel -s -D -d lib-node/ src/ && BABEL_ENV=browser babel -s -D -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@rexxars/p-ratelimit":"^1.0.1","@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^3.0.0","decompress-response":"^6.0.0","follow-redirects":"^1.13.1","form-urlencoded":"^4.2.1","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.0","nano-pubsub":"^2.0.0","object-assign":"^4.1.1","parse-headers":"^2.0.3","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.12.10","@babel/preset-env":"^7.12.11","babel-loader":"^8.2.2","chai":"^4.2.0","chai-subset":"^1.5.0","check-error":"^1.0.2","es6-promise":"^4.1.1","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-sanity":"^1.150.8","get-uri":"^3.0.2","karma":"^5.2.3","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-mocha":"^2.0.1","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","lodash.once":"^4.1.1","mocha":"^8.2.1","nyc":"^15.1.0","prettier":"^2.2.1","rimraf":"^3.0.2","uglifyify":"^5.0.2","webpack":"^4.0.0","webpack-cli":"^4.3.1","zen-observable":"^0.8.15"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/master.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 10) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n","readmeFilename":"README.md","gitHead":"e6364706027893e8119b456b60c72712f7fdfba8","_id":"get-it@6.0.0-0","_nodeVersion":"14.15.1","_npmVersion":"6.14.10","dist":{"integrity":"sha512-0hvXDqp6H+E4rayxwFbojgK9FilVuNDzIDDkok0DoFEIrNVtYKm8tb6xnNTgxFBivZmSD3GAVxsXixHoZ99glg==","shasum":"ac55bed933756c34e05735a399885839f0c83da0","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.0.0-0.tgz","fileCount":150,"unpackedSize":463412,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf9922CRA9TVsSAnZWagAA6dAP/3FyNhfocT4xvxrW982J\nWgUoyROY2GZXifmNX4ROyzRYmlT0+XHJbnse8wgARxIKvx1J9VicW/uPviQ2\nkbQ32ahT4RoDoM1PQD1UEdGd+agzZUfRgwrFM80Uze7Xs4E8q7p/8Y3HCvCY\nJGN1sRf4pkKVeqM5kWN7fjgXmwbTIfrsT/Lokuvg+nCHLDgz6VdkCSR6bAW1\nrEXHdpwNssWeIPOPrm1pmthJtGJKIr9VaMYWE18Clzrucu5eKdRsmIb9bMrw\nUwNu1bSvVTtLWKPLmCEQ2dXq/dy3pX24uV7bS4Dd0XDetp/ql3R6xfkXFlZ4\nOwr2BzicFa7w4vwadBh9mgl6guCY8dh11+fBAGPgPtbgeNjBS4LKkrakWfiu\nvV1Nb1dBRBV4vx6z7ePcFZ7YUIFkUyjqcdfmX9s8TMw+g640KyfQrU7YiVAS\n4AYvGW/gsy0kU9qUtENUqhpvPkzc8fUUqj1cr3U6Zoi7epzU63ufB+ebZZyC\nDsnRFZCZqyTd80pfwXmwlYIooNCQbbW+Wayhe4jD7jFqO9jq9ZxlqSf3rtRo\nuhAnWB043Axrci7My/tFlhWbz9isQbE3qoCVZvOalCVj96LrKwQt2YFpBP1+\n5eL91TMJmY1RZLOhkCel5If2HD7koEWZhoW6hSpX8ZWJAz26gnLvUrdNh4b+\nLBkC\r\n=Gk8d\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDdfyuOv+gNIRTUelppNJn13wM1kLkqjp0uO+flUQVpfAIhANaM9NnFGUXqyu8OE0tLQRD3BRSj+RBrC3YQlhT5URWy"}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"thomax","email":"thomas@sanity.io"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.0.0-0_1610079670409_0.28034746321115667"},"_hasShrinkwrap":false},"5.0.4":{"name":"get-it","version":"5.0.4","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"2d7013b492813a557bacf46ee81b6e6b6ce6559c","_id":"get-it@5.0.4","_nodeVersion":"12.18.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-gFCtVjKf6NB9uTVRIFsiBVFlEeiRDDs9/sNXFt/f5VYrmRd/1Wja6ZTMoI98rGcf89q1LtECUktRTz6EQ8aQMg==","shasum":"347575a7f30e9af45ef2ffdeb52bc513893929bb","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.4.tgz","fileCount":154,"unpackedSize":686708,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgB0fgCRA9TVsSAnZWagAAw9UP/iXMBbjE+aCtAvVJGa6e\nTa8HmOdwiQFNqpBY/lvSEV+PVQzNaZk5wcVHYqImw+pZ2chzea/snxMOG8T+\nwMk2kzR/j4d+aalB43yyi/1j1c7FzePcFlwXZBP5hFbwhJt7nOW05xB2w0VA\nmSiRMEB6FrJWl40EqJVfhl7Pv3ruYXDbBbX7KT16REKMErvzk34DjhfyxK0l\ndveVl/InaOpQMAM5B5iEJ5a54BaGnU1Iqd3tr5gUca0NgMkRVrfmSPzdCNKw\nG6GkMSyVhpjizrnfzLXeHEXWFyJxfFr6T3JWf++KfX0C9Klm9kA94VYzC47B\nfiRMbX+Yhp8QdbtZ6ccsdD88/w5TP1ouM6MczL5GaJ1FeF4jzkVrMUxuYHR5\nv3qfYVMhY9KktgcMog57vqngcCExqk51UdvdpwNUuiIO7qZU2YND7tulvi7u\n2FbQ/gKxCngXR3G2dCqHVw9A42Gyjnl48b9AlEcf9f2kUKzlHzMMQ/usRMZA\ns77tYb97S0C54NSS4DV9JFE/pKiAaiMtHkKFi+KTN1GojgJNY05/4d+TliMU\nipJn0SoRoi6zY7x1xaVmJnm+FiULdOlT9Wg4fdE/Qj8VAD1lEM5n6O+BDywA\ny0PvitieIq+cYuajgTaCWFnvcQ9CAAxdflvURVMhg0CasYzZkP0Ej2WDXesW\nZnxV\r\n=UXEP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCnpEfMGUPHfPL+WelbTkFYdwOdKpOQ3RE8mdHoazwe4wIgExBmXoK1aq+V5i0boIp3rzBkSeyvQauCBh0dOQrXRh8="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.4_1611089887979_0.8613928407899509"},"_hasShrinkwrap":false},"5.0.5":{"name":"get-it","version":"5.0.5","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"8fd17f5a47bc4d6394b1bd509188a1846985796c","_id":"get-it@5.0.5","_nodeVersion":"14.15.4","_npmVersion":"7.17.0","dist":{"integrity":"sha512-P5McakQI/9611hP0cYqyF0VlhxQj49ok21TvCbNEqBfsVVC/ZnmYPP91bky4N4/Oy1HmXFZ/CMh6CCH8nAgLpQ==","shasum":"580764df70e1ac5bbbbdcda89af5e397e6c70065","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.5.tgz","fileCount":154,"unpackedSize":689310,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEPXOCRA9TVsSAnZWagAAZwUP/3Ol7ak6gg8VBvNs2upS\nvuzvi7aRzeiD2wjA94nirMQLDxqlRIxTSbZjVYVbdRQGh8KUKsHzNz8V0nz1\nTPYA1pXgfS9fGFqw6Dle4IKbk9aunREY036WdVRLW4Q87G7NRfDzI659XqSI\nZiBHLgWkJBypOOq+sOMvsIubwrrrBueVcXo/tTzsGXJKw5DXbxxVwbWg+oAA\nh6WWGbkPqz1hD15vMSNhe0sUgzAfmToNNOqOinNqcGjefeJGkt90ThlEhcRM\notJcpfFnlVnSAY2CtCc/pmsrQ+J70mTx4fker3SDhXT/QBW7SSMrOULI4OBH\ngvpkLU0vLC4VwKryvXxo3yJmiwK5CWGccLqWlT7W7V84V4ZSP9bmHmsEUoxa\n0RC0xb2t9vFJQ2fAjf8fcIPgpaFo2lxsxsZd9sM0t9PGAo4zzWGViNvT1iJf\nv2+77e+bo+CaJT7vH6RkM+Zjer87yH363MPNgCMV142swVZPRezSDPB+b009\njon3zIgjNb4FJdYVUz1v+DZTvmjJt7VD4gfqR1SLfCCBreY2b/Cujhqj/ZwU\nltVV/gEbW0ETwyv3NioGq2E0jtd9bI5i7lUJmwl8mYUP/imjzBNdIKR5sUTw\ncpcsHEwOq4yuFAGgHi1l8giaGRVg2JWDv3B6EiYOtAygN96DU8hdW2+JR4y3\nR7RA\r\n=I6Y1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGwc5TEPv1KRrfV5rb9FNHiNW9HnVYLNPvO1cPisAzB/AiArtSg6Zdp4aCpm422j2OHlKv8Iw99gPlu6n9zCg7ZwmQ=="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.5_1628501454013_0.6959809615160593"},"_hasShrinkwrap":false},"5.0.6-fetch.0":{"name":"get-it","version":"5.0.6-fetch.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 8) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n","readmeFilename":"README.md","gitHead":"f57c1d1ba06aeda3a4565a010622418ad9534062","_id":"get-it@5.0.6-fetch.0","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-dLAcx+MU67MIKbllw8nqlTXnkuTdiIjOwNta+s0VdfjAtGNakeHUlggh6Tw8AG4kXmZhXJLjEcx2y9j0zwaZvQ==","shasum":"94f0553f43a9dd15505dc0037fc3a4d63ff907eb","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.0.6-fetch.0.tgz","fileCount":154,"unpackedSize":691673,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhrqZkCRA9TVsSAnZWagAAuW8P/38EUUAf1HwoLDRYwhiv\nfZu8Tegk5DbZaqhsmGrG/oOf8zs7zkGY2BHmCWMu0MobJOGjDPQBZQte2NAg\nL82KVovSW6xWc3Y8P3bmDlWnhiy90aE86UlKlnpyuyjbS78M5FvYc2sf+Fa3\nSDhXUlnl2zDAEA9ElXZTeQwQflI3yrVUKzBM1h8jyJdrNqGeNXkK9UF62bos\nyUtdgvZSu4M8wVjWSTNqfKgylVnvlpxuq2+WHjTmOTHd8r99Ma/mrzmaS4EQ\nw7784wJthSSRQd9fgC7fW7HSb6pU6YzRRBlMMnbG/amqiTUxvh9zA2Z8jWRp\nL7409UL/cw+4D25OtK45gp1sAwrJYzzLiUmbWuPA6nR89T1T3UpxyE2aZ5ru\n+dJiROE22nJyWEhuRDdlhsGNuUc0BkMCr6qjRO8oCC7jBn2KfruHSsY/leSg\nvoz15vgSRHY5OyttxgHUpvwmLYlmUiyOHVrIQVf9k38cY+NxPMX5S/oTtgA1\nEAt2fvC2fAJx0jJalGsZPhZbyH6y5fDPU9Gwr/HXYC7Igw3l2TUmPPkJebh8\nG1ZmsBJV7a62J/XHtKWYRIAuTYG2LLuWQYF3tp6nZ8BT0yEnhfQzvcQHRmN5\nYsDwK43a+oO8qjsT9U7x+a7Y2bLDIu0x+RzXwauXCrZqbVn49GAPX3XX+RJt\nR6kZ\r\n=UkoG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAHbb6EvX2At4TR7b+pd5eDHAGwWMHWtobUxEuJjhRybAiAymmZ9o+zl7oG7YkeHDVMzo8QSvjjIL0O1DgS14kDyfw=="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.0.6-fetch.0_1638835812195_0.15082596778429913"},"_hasShrinkwrap":false},"5.1.0-fetch":{"name":"get-it","version":"5.1.0-fetch","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 8) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n","readmeFilename":"README.md","gitHead":"b4a6c955a6b73d9f0e172baea69e9c0ad6417173","_id":"get-it@5.1.0-fetch","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-dExuB7NJZcJS2PeKTrF14hR3VrcVcgxIuxq2J26upupcxzK8lmAjkMMUzxvw3O3Ih+IXxj10ZAjv8yV5rQkAFQ==","shasum":"64d2fa93b80b18b35f3edcb8a10cc7c9071faf9a","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.1.0-fetch.tgz","fileCount":154,"unpackedSize":699913,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhrq5cCRA9TVsSAnZWagAARkUP/jhM6vCn0XB4r53eQkEy\nOfkyNYHVtCrwIN6pkiATND9pMHVXwmzgQoFlqSqW+Mqm4jwS4htB827QD36N\njB+8Qe12SkEAFbKntphpuwPqeOlL+3B/3V/Y5FOX1FHbLQcbMUYkZEPYzQ0A\nS/INs2yk1VFH/EZ4oHaq/M15elXfipzMVPtCi4HeNWbUpKoN47loEr59HK56\nWYFXHxW656o2FAST54mLcG/HIizmJVDlpVQTKlJxY1d7WFerkzrbljFzst1f\nbKS41V9yNGaxAuKbRGtHczLxycu75J1eKUsnNDQxGMmVilK3CLVXbdBo5Wj2\n8bbU1ZfDFMAOPmlZ4LIdJPcd09V9hqXYfWeYHwNVDlG3kkRqud6xqB2W1HfI\nMDUJwF5XL8y4RI0+Pq/wkdJMkilWsJwbjXQMrMLv2XQeSKxj7XC7jibN7MHH\nL+zyZJJgOz0eHcl8JIawSdV1gZRFPRL1c2e5S6sxtITuqN6zTBl1z0a7vNTl\naE5NGGz7bSlP2kLcfno6xO1sm6huIUj0StIqarTb2gVwLdHHXp9kGNNeLBQZ\ntJoxmAMPYnwMjfp9v6D34JEeuRhQX0x9kEUtkNSmH1l+qq58LgMjJOtkBd0u\nYS0ys6bKl7hhs/XbcuYLPm8CVW/ZL+seE3fdO+7MB6yG46vHhLg+UJqkEpZl\nFzrP\r\n=baLv\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGKOmmZLz0PRHEohhOdF6z6b8ODJljSQQNUcxjPsg9lEAiEAv6m6/1+e8qiJ/ZZZyDI+vquvtCl2A3YEm3+M2J1AaSo="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.1.0-fetch_1638837852312_0.5430921264410467"},"_hasShrinkwrap":false},"5.1.1-fetch":{"name":"get-it","version":"5.1.1-fetch","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","node-fetch":"^2.0.0","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 8) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n","readmeFilename":"README.md","gitHead":"b788f503c1ebda1f6c21d69e0248e055296ecf49","_id":"get-it@5.1.1-fetch","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-lF6WGQYGPFHzce0Gp5GS7oOjhQWbV1PTg0gk5rAXeiUcvp48eCbLBAJLYXA32/O2iLRCs1qXO2mYNT7ChCa0Fw==","shasum":"4f76fd7e7b0ae3eb79c0ac607eb8552d4f199885","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.1.1-fetch.tgz","fileCount":154,"unpackedSize":699941,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhrrgmCRA9TVsSAnZWagAAtpkP/14KiUSM5Ylp9Yw8PPzB\nU59DXYRdA0GGr4203Vx8NsFq/37wcPpktfUClOvFMvWSlTf8dbNvWzzl4lO7\nXolPeO9T/xFWvv2u4sq5zSQOD7dbptKoOEwbze3JJmU/P26tKHKK9qiiaCuq\nz7fPJlY/VeUYo0FdI4phtE/T2p2RnXDAVbijH0wRpPvbkMcV7LqTAMwtRav3\nNCLuFuefrT1IQq8ZLEMQ1wGA0Cj7tbgMnNZO8y6G9V/27rUHHk3uwal6P/Mh\nn5HenjB1E+oSdRdrExHpyamitpnUGmIu4u9rQpwboXfMVq++JkQwJZHf42LO\nUBxipG92NxKOci/tM+g/luLLghlIlWF5axdKSHlTDdn27zLCuWf40KxTSjK2\nvOzXW6CEWRcW2QfzR29P1wHuZdNYhB1GxCyu228LgvCD58hA5pK0amHeDDGE\nOyYlDQcNx/TkFe+5EXzGT8khzAJpS8z5Q+5jJ+PfzhtbqRuDEfAhSZVN8HtK\n5598D3ERI4l/3YK859q7aB0C1mjhAml7t2z1PuQOy5yHjMrUdeypPXQUUWTn\nM5eX32MZGfw3JunCMQsslVcFAkGKMcZO0iYRDQYAjB/Cq85K7uIKXpg+vTb6\nEwFj9EAEKo7x9rZlB//sDCONu4blqSaWm+QnA9O1a5WEnKr4/v/O9irRo3jN\n4hm9\r\n=/IuP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCyFF3qrTH2B0cH25ia+bNdAUyXniyRarCbb1SQ70cGDgIhAMiFXe3x03cjqw18Eeifkdvj8BL5mbl+jtCXInYhGGRv"}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.1.1-fetch_1638840357928_0.6631298652057269"},"_hasShrinkwrap":false},"5.1.0":{"name":"get-it","version":"5.1.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","node-fetch":"^2.0.0","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"5c13d1f947748a88b4bbc23e162a3eb13f0f1a52","_id":"get-it@5.1.0","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-4ACbkTGVGxEDIvSRFkvZW9Ovhwyj+0Gid3yLGGag9dJzBLA4ba5sr0hNdwZV9AvjnZ6nGuU5j2keIL/ovS5z8A==","shasum":"09b6d2bc2887c3019d4a9bf5db219c4d6b796c7c","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.1.0.tgz","fileCount":154,"unpackedSize":700074,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhr2pCCRA9TVsSAnZWagAALnwP/0+fPSUP5JeWuufSds8r\nG9JH/LMTifTWDPimxLOHgRtWk0cjXDCpVKye+B3BAS8OGdia3mxAgzHO9KcW\nbBqeTDTVveRTfEy6Ldbo+5mdVfNJfVK4yOxkQEjYqsvkqoFnmsWCWKGw1Ajf\n+O3HXgj2QB15X5C3MYUvctppU9h48Imt+CBMzWRDtspXWF3kSf5AToaBwC3O\nLvm/mri/DumNOGPa6N3I6QYs2OP3jGIrVTKZmpvt/Stp4L07if4oLrpjL0U0\n2h8hhGW6Vn7u+WoECu8bDvnjO3i4hyOcXU9l31TF6Ftl+C145WOJ2SqQG+7K\n7cEESkhOrD5QYnLKzHJKCEMvZg6l9qN0DeFdCgF74Ns7bjQYddHCVNMyypfs\nRQGP/EQB893LWu4hjw+W+Xr2kJwnI2R0gzeeehzLmzQmDLCn7hdZcU34aYim\nG5Ph7itu0/22pObrEullgooHouCw5BArpbKkrdnLtDg4oIAZp3g5ncSWzyVP\nqPbYNRI+C7wbSTfCmIGCruaXAqqiunWrwGH86alvhnw8KOHR54d9bb1FCQe/\nPSwYyQOODngAuLwDAQEpVCUywl2LrzYtuVA9bxfPaxzJLlvq/fxOcK8Rkj0e\np6GqZ2+F9O96fOjBt64UrNxKHTEn5n+CnFWF6rYIFkLF9wo4HMHhaGIsOM86\nYI38\r\n=hxy6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCWN1Iy7nGBBl/twGLVemxAEIqtNdUmoDW2zjXoIIpnYAIgaQMTdT5EobmX1MD+dHOdVzw5cKwYvZBpKtoh1Qr1b6Q="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.1.0_1638885954407_0.005687649592115873"},"_hasShrinkwrap":false},"5.2.0":{"name":"get-it","version":"5.2.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublish":"in-publish && npm run build && npm test || not-in-publish","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","in-publish":"^2.0.0","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","node-fetch":"^2.0.0","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"5cae2fd4cbeeceff6316dbd3294b2f8b83de1915","_id":"get-it@5.2.0","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-EY6MRuszlZtOFBZRZ9kvMDAP23FrD1FwdMbTArQTDj3P8GoURS5wkOOMWx1XX66z5hrCDTqJ8QkK7RFHGoSN1g==","shasum":"618a32add68b7065c3391d8219e58afdbc9d42d2","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.2.0.tgz","fileCount":154,"unpackedSize":700074,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsnBWCRA9TVsSAnZWagAAQ3gP/Am8nYCzKAYvMLiFTQvD\nuQlWaCFKCu5Bv+d68UTMKqroR81fLyeE94BMLMEpg0YFEm5/MLi80EtND0RY\nCBMygsgSC5Xbc5kf6qqhqlwz3Al4ifSb9nH94gCWdvA7mkvtnxxj93cOa3aj\neRF0RuiZymWoejt9RB5qdUIGzgKho0Jw/X1xzeC1ZQOHPN/1n4V/0RcrOfZ/\nPWHQqzSGfhkazbC9ZScwvJqiuax2NYQ3SGImlkxi4ZR7WFRoUNcz/qoPUfVw\nVCDopCZo/YUHGaxw8mqJUjQ3CpG3qrgRV2AAgjGLIZXwW+B0pqx6AEAjkneA\nrHd4hOfN8NbDVcnDOGn5CXrh7ByDxXsz2IdfgYnFtchyxlv7zjQ7cu4OfTNC\npdnOJ2JwSHKJCRWsIosgJnzr2M/3QTeNv4YQYoXjVicmsqgkNyBB83985szV\nob3/hAp44OnZcQ2YqSEqRPzqPf+/AsifpCeCFGC+bW9XfolLa/Czv05yJ3+9\nPhRrX+yg22dvo2yKkAJFFL8c+9K1RfcYBtiKJmglEomWsJg65ueXcGiwniIL\neXPpnKWZhoOfmsNRhq+ibgjPYMhtmTDL8nCf1oWQ6GCZ0VIjvVxVfMhlYGJi\nkFOp80qYdt5tKLtu8GQmiaD5/E8JI7DRUEQCLVA9ouRuTMq4JQ9+iJl34eKu\nfyuJ\r\n=UL14\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDdyvJknOlAZIhp9sP0KjSks+YJoVgD9ykqKiPnWvJ1tAIhAJMrtXt5wzP8Lk1aal/kpifiPVVQiAABSUPjcfi4mWWs"}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.2.0_1639084118275_0.9882490159234198"},"_hasShrinkwrap":false},"5.2.1":{"name":"get-it","version":"5.2.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=8.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all && npm run bundle:size","bundle:analyze":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/index.js | discify --open","bundle:analyze:all":"npm run compile && NODE_ENV=production DEBUG='' browserify --full-paths -t envify -g uglifyify lib/bundle-all.js | discify --open","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","bundle:size":"node -r babel-register src/scripts/print-bundle-size","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run karma && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","karma":"karma start","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^3.3.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.1","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"babel-cli":"^6.24.1","babel-loader":"^7.1.1","babel-preset-env":"^1.6.0","babel-register":"^6.24.1","boxen":"^1.2.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","chalk":"^2.0.1","disc":"^1.3.2","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^4.3.0","eslint-config-prettier":"^3.3.0","eslint-config-sanity":"^0.140.0","get-uri":"^2.0.1","gzip-size":"^3.0.0","karma":"^1.7.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.0.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.4","karma-sourcemap-loader":"^0.3.7","karma-virtualboxany-launcher":"^0.1.3","karma-webpack":"^2.0.4","lodash.once":"^4.1.1","mocha":"^3.4.2","node-fetch":"^2.0.0","nyc":"^11.0.3","prettier":"^1.15.2","pretty-bytes":"^4.0.2","rimraf":"^2.6.1","uglify-js":"^3.0.26","uglifyify":"^4.0.3","webpack":"^2.0.0","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"3d526e878c17ae9374687a49f904e3643f56e9dd","_id":"get-it@5.2.1","_nodeVersion":"16.13.0","_npmVersion":"8.1.3","dist":{"integrity":"sha512-KDR5lTKmxKd/XyP3egZ8ieIdKLxKrQPKUFxk86MSoytGjxX4STigaFuwtFGmGx/lBPc1YSpi9wyuQJ5uP8WcRA==","shasum":"89cd98d73afd787aa4f2c89409f5893d17991e0c","tarball":"https://registry.npmjs.org/get-it/-/get-it-5.2.1.tgz","fileCount":154,"unpackedSize":700878,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsnTbCRA9TVsSAnZWagAAdC4P/jTY0f3FFm/bUrbuXMWU\nVgTtBmJFqlWCrHVZQNNd3Zblb5ISJPsnB0qMv67mjsD9se0V32p0g4kq1dxy\nG/HmZnRzE+55J8yIH1Gskh2ioGoJ7t3ErkEjCLkUFzln+xSdUs84E7Zu0nXv\nTaKVNo8cs7TvR5dZ2HDQ46u2/2qwjchDbqTnrbRnodNB6Y8nrwlqizUhzNJa\nR9BkXu+7MydAWEcIOimYvP7lB/Ab6dwMiccOpwcTu1kJb43kB0KvC0gN5NRp\nl8If69KIm8NUAp2lj26IKogwMIP2VnoyZvvSMYRWfSPrS3S6nh48MUEB9VVP\ngtg1qNfjn8lzu9ZvEmnCDylREAiYV8n3KEShexyaoSTfLeplkCLrf8aXfOXc\nVEDflpRA/VqhTd+1xMV8CMMhccynKDtRsdiF2O8Lh1cwz1gzu6H5MvfE0r9J\nwvXnRm6fugbieMJHuuaywXdTCQ7UkE59g8uV6tnOMNAljVFvRMoS6sIgp1fe\nMb7Li7cOnAFkp8Ppt9sMhTGloYEJ1zi4fdtdL5Z8GZ7+uzivQHWlLBIPm0+c\nJYh6G6MoepZDrTY0HpGc47Ab/M9eryysueoG3MOmwVag+j/UHFN/r/UGvNEE\nZ9xRTopCkdds24Y+DNRVQ335jsMEi9hxQBwkMmjW/CrtaIg8/C6fqIvNJAHJ\nDlpu\r\n=i+XU\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCZOsWjVW+nB1cZE+cJUVHpOMtO7gtRyxa2TmBujSc5PQIgaXB83cETEU9IY4SvHaF5rBVrwPB91WOLc11Sf+PD9Wc="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_5.2.1_1639085275073_0.41222935583969367"},"_hasShrinkwrap":false},"6.0.0":{"name":"get-it","version":"6.0.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.0.0","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n","readmeFilename":"README.md","gitHead":"97aedada6033d78c7cd0f7dd2ccd96675a836c9a","_id":"get-it@6.0.0","_nodeVersion":"16.13.0","_npmVersion":"8.3.0","dist":{"integrity":"sha512-yh3ZpfsGNS1AOGf07y9BVpwQIGPHM0ymWluGRZYq44zlXlTkhTElZghV+4HVdTFTOIMeUzfGM7cNhnR20GMnUA==","shasum":"c2f07e5021da126cb6b552cac406d88d561951ae","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.0.0.tgz","fileCount":154,"unpackedSize":642837,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh+YfsCRA9TVsSAnZWagAAQgYP/jcHpyfrz3xTwt2GcA5U\nC3lkvAYV51a0+GqbSIz9ppVGKv5Vns8Bv3aj21P/+267z7UvZU38yjYL04b4\nVZ326DbZ+TpTlNLoX1LORDrukm6F+5MMJLEV//12NL0V2uCEG3BZ4fe6gAMQ\nSkgp9AfuOfG0xOkoqmwBYDdcHJIArG5az6AjWvUg29ARFsk7Pd769pBcQr32\nZfdXJJfyFgo/7lcdjF+4u9d3Hb/5QbLqaJIZqSU5WyglEe9T6Fbno9ebw4b/\nK3yxdvFK4dSpG9+H6oBFwj+NM1/sm55d1GMm8YeT0QBWCqh1XzphHQFu4cNK\nQL5CfYgcHm59Aiijv2RNHUYfk+epVMwExDbXmlDGv8oCrzgtqk2+5/hhPFiX\n6Ampp9Rbky+9p5/F7LbD0tLz7OX5eEsUvo0Ujohd+gsu6/VsqMcRjT63Ntoj\n8ySUzFWVYycxIdVA/87xDm2N2lf9GJwP56nqQrnM0QO6JklYeds+mnC2lYgm\nZqp4h1e1zNbplVfHuz9apP/ogTmsJnIky5HcteS9+HagTy5UW+dCDgczy336\n3ExTOYOaBVXhFZVYlABCs48XJrZxsgpI5dL0wFUCCQMOsJv2mOEbVt4JaZVu\nJKuRW+jjov8vWD8PQwDLbYQ/9JYfXx+lqjWSo/Q148PHvGXYK186AEhhwDa0\nN2Ta\r\n=wrDu\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDiBi5VguRJU6Xx1ofPhNfWXBkEXRt3MstkOEMgjl6uIAIgIda32PRJJX7AXmN42WDvhLZkzstoDTJZma90yW2q/Rg="}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.0.0_1643743211891_0.20563552081637315"},"_hasShrinkwrap":false},"6.0.1":{"name":"get-it","version":"6.0.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.0.0","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"0ea45291b66fd5d72d0e9016013fc948260c07fd","_id":"get-it@6.0.1","_nodeVersion":"16.13.0","_npmVersion":"8.3.0","dist":{"integrity":"sha512-tZMsIu4VatXy2RT3M1sStmqn5U0JI6JratUi5kNV/SKpF14+2hssT9J+C51HVO8BPc34fuYVO9W9OzqhbZyQ4A==","shasum":"5fd4276c9bb0f61990688a22a2a4d2f700132148","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.0.1.tgz","fileCount":154,"unpackedSize":643674,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAv6TCRA9TVsSAnZWagAAEpAP/i0Y+tabHmyK6xZebmlC\n+oGwOeB7iGXYNT7sbHc2YQkMkz4Ax0xF6SjJUt5f/vAUYZr0HBjH75Lr2bV/\nngZV0UkHeo6+CVKJtu0xd0JxJjwnzXh0TfDoLa7wZ/c0HMUDgeKxbv9O4I9i\ns76ECgOTyL+kD/Z2yxOCcoKEp0p8rifuXqshpYTvHeXfW0ttDniQYTlPRegG\nQa/43l5AgkgF74Hjur+wCTUscjTFvpxN321kCKQmGfLRQuZ5QJ2RDns+aqXC\nCNHL+kUgrm3my0q7LiIBKv0YEH/LWjHaZvOSCox4w5FVT4bB7tLqEfRNaFWg\n1hMEk1y+6iVA1G4sLL8VjVG9j9QAXi9pl4S/tCVOZ8lqFQR1+uQ3JUaH6ez3\nHpbt6wdMA0qBDH/Ee3rOI8STpmLNJ0AjXBbBaoCOxpupBMc6CuPQ/E0GEFJl\nL5B46XD5n40MDJ1VeKCE+NIUjg/rO2aQv/wyln4bt+dUIT9Wte/kdyh87oRx\ndJsMxUDG0KaIBHyhpRRc/E10ZOIGby6e8ymFSa7DYHPC32WIXtd53pHQIMJs\nfP4KohHL4RDgTgTQVtofDec5wrA5o+GCPOFCavMnYT0tus09RE263UtzsGNz\n7VPm+RcnJw6AF2ftr/F8Gae3mHbM+ZiGZ8GcQXuA2JMs74/w/+1FpGhsoKIY\n/yU9\r\n=NkGJ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCvzgsnil0Q9vb+z4oPjch+uGRXCmUxAUsDclR8Xs8o4AIhAMuYs1fJFAUf5xrdLhq9BgeXxr+38zsIXSem8ZUL9AD4"}]},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"sanity-io","email":"developers@sanity.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.0.1_1644363411022_0.15638117668747564"},"_hasShrinkwrap":false},"6.1.0":{"name":"get-it","version":"6.1.0","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.0.0","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"ff0ff51b898426c38f3a47b75cf0959bee2dea4c","_id":"get-it@6.1.0","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-hvk2h2hiOHji57MpBQ/o9CnJT7hpNII7Jio3AyY41I7AmkUVvnYrpQAPIQGc3j7R5QNYnhwyXmok+DSSdBLWbg==","shasum":"7b5fe88a00fcda477efdfe8a3a530e9f5cc763c6","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.0.tgz","fileCount":154,"unpackedSize":633910,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAJtUWpzJjFrIQEZWjc57qbWrCFOjwYokzHaccUcVC7bAiEAhCbQsdJKHOSxqUEII4sJmpKT5Pv4R33nrIMvRSnYLF0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRZpYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrS0RAAlWKD0yio6rSnQbTLrZkuXPeafiKAF9KEe/BkHJxEugkhTJtf\r\nIHrpy39W+9YTfcwC3YpQ2+FYNkfL5Ipc9SxKRI1xoR/z7B8NxxyjeMZbE+mC\r\n+2rmw1BSCaYiAePspciz9OD9ywKNDTLZ8hhN/HJQEgmgp2Jb10hj+0byFGpe\r\nRaKJbSo/6PYm00yHh4TzIovW5iuPTSn2kLTubJwVJSVHK7+boftZFexKnq+c\r\nNhjQW0S6SOWVTynn44b2x7G7FYn77Lop9tmWad98md6ZfehE0t//9rs/xIUc\r\nLf6i5DHZZkgWbYgriScEJemIxf3IOCub3oxCNQWBUY2PMFjhR/e1pptjJkpI\r\nzUTpB4a9ROAt8JBGe9PeqGNgEYQaU4HbbCj+r1gn8q6IADHQ/2AIden0K7CI\r\nmzMvqM+2fAgW3Y0AEOxqoFPst6mKWE04DzhV8vgylVZPvKNFyIwjszC/Bsw9\r\ned2ecea5AYWYGC7rcO+0XipIBGXLkgQ/8VcQ18zm4jPolcDa2SU8yfKBUA71\r\nWvVGIxf/tRgFCONNtG5pquzb0JhSUBO//JoPre1IA9z+Q/vVTCanE/AJR9p2\r\nHPqdFZpPTmj+3Lp7DNO9L5gEOyRxh8SDDElU/rAnawCby+zkTwKW3nMoxx51\r\nL+AB4VqObcH9Zj0o2UHqNre3gjb+cVMujw8=\r\n=nXRe\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sgulseth","email":"sgulseth@gmail.com"},"directories":{},"maintainers":[{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"dkhuntrods","email":"daniellehuntrods@gmail.com"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"ricokahler","email":"ricokahler@me.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"hdoro","email":"opensource@hdoro.dev"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.0_1648728663786_0.10945277027218592"},"_hasShrinkwrap":false},"6.1.1":{"name":"get-it","version":"6.1.1","description":"Generic HTTP request library for node and browsers","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","ci":"npm run coverage && npm run lint","clean":"rimraf lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm test","test":"BABEL_ENV=node mocha"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","envify":"^4.1.0","es6-promise":"^4.1.1","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.0.0","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"7873e3fb4f38c21fe91f727f65acca250bc6c5f0","_id":"get-it@6.1.1","_nodeVersion":"16.14.0","_npmVersion":"8.12.1","dist":{"integrity":"sha512-2835L9lb4NAgjAbFOMMOm2XDSgj+lWmmCQv40A5rE7zZoIdM2+yk7Ie+sBD3T5lHW/Dw5IFFHyx16oQGpAo4hQ==","shasum":"793100756a800808abc8f0d981ca5c7b90fe343d","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1.tgz","fileCount":162,"unpackedSize":658701,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAWH0ab4lFz0kXvASfZV/7sJy6/PmYM/wlVK9qEMAVZqAiEA9d6UTEbXKR9C/lF7l76EPhvm1DYwxw402Hb2+B21nkc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyHrCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr05g//dC3UecErDh0pT0k9PvajiZA6CM/iWOSjxpRoN7YZnU6+vy84\r\nYTRFGHlAG6owp01jSdLnl/Rh2Bud/tdDAszRUJM6rRyHTciloWENVS5oQVR6\r\nvn6kp22y1kMfWR8LAVf5EREhq42co66j7fx//RHrI4RK+vWeDeC/ztCtWGAn\r\nJWjHSvhFfiK4HJwF42/sTSUqKfi2iqKGoZf4KhIXevg/hYqDd7hB45Aqej2i\r\n95U3Zl8D1hroUNdao+KVK+aCDD/RESiYdn5INUdW7oPHuGFLMUX9ibs0Rfzb\r\n7ODHtv4LimbBGtbGDbs7vQKHUPvol60s1Hzac+gCvvwZYSNljdOEDjXRom0e\r\nSd9FYw4axyotTRZljYt5xhFPqRP7bCEE56Gfhk18AGrxGs4g9qszPCLT6jGk\r\nn9LbYoOWsEcASjeuARKQDsT5CxO1x6rn+EZDXUT14bqp+74K6K8Dh2wdvjxl\r\n2ly0wiVLRbo9fcUexsZpbvtwB809jBVulQ0mFPB5n35rWO3Cb5tzaR2f2PKE\r\nJm4yqSZc6/lFgDB8Zln1mWvQp2Fwytp+maAy1DxrUszT1YK/YUvkWq1M7HbI\r\nCsieulVV1jLlJvErev25UcB13Dg3hoyq/boqY2NAyvooQ1DuMglK9heehK8T\r\nl5xLjZGjqJFlGJczo8ICgMMnpOC687x5kQs=\r\n=gDoO\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"rexxars","email":"espen@hovlandsdal.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1_1657305794508_0.5007793203535744"},"_hasShrinkwrap":false},"6.1.1-esm.0":{"name":"get-it","version":"6.1.1-esm.0","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware.js":"./middleware.js","./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser":"./lib/request/browser/index.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node":"./lib/request/node/index.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser":"./lib-node/request/browser/index.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node":"./lib-node/request/node/index.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"52f7af1525d5f2c4e64d85a6b19b1c2d295c8e84","_id":"get-it@6.1.1-esm.0","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-pEDYBZxVBS+r+3wQEwL440Tmq4JIF8E4G/m707hYPE2vz/gBWeg61hIrCjgr+sFn7cb20XD+NSq0zrJsJ4EKOg==","shasum":"b53706d0579b197eb83f9654b9b28a3138c9fc63","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.0.tgz","fileCount":218,"unpackedSize":842897,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCyA3RXJPyeipC4/JnyJCvcXvSGtKFC8Pi2TtMqvvaphwIgSU6SVjUX5QlhgV7QHfs6Mr52OcX0Tp3KIRU+XMc9gik="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCBoqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoeuRAAjI2u8rnJryqglp0rpqyAEAD5Dv39Lt2Q6GvDQ5/zt37hENk6\r\nnMj/kFkm5BGPkF8r6d1pueHspUcfm8THzeyFEqZQN/qRY4cFHXtjd4BLjGQ3\r\n02tbGoblc25DUn+T9qxMwUoUxQxCSKA+KRCxH3h5PK1jTVom90HilFdDHJEq\r\nsbdZdkN6hckDhH/vH7ZgHDRCj/+9LnKdkT3gQFJd6s0wch5l4+AedWGZ5fG7\r\n8LGu1VfMAcyzgz+XqGWhA246NlDlsIc67nt7P+7uV6wKEOFl3JAQlKE4Fk+H\r\nNJHF0Ig23ZFh/cmL3hGkZkAyQz7uGiXT9bUuw1tf5klYvjQGJPex4AW90JBs\r\nRWyNzkNqtfUkkUMYLY8Ky79Av/8xbOOpKx/r0VzdGyBIwRLM2MtQsXGjIAso\r\naDbbl8RW45QTEnrsXzYMHtJN3qDtO3Ej/p50WTtnHVvYqNHmet4O+Uu1KIw7\r\nZNZdgDW6zFKgKRRREGfb7r95/DPT6AUdRcPi5fBz+y2yuuEEWMAA0Rr4aj0s\r\nPTExoT9xVwLFNEsiudoBBxD35NypVvCr/BMC+Iyice9WRkjKwyaEMvVaBGmX\r\nA5ij7dn5r2pTU/5vfCDeuZLsCgIxNENl+jOIzYumBOXvB0NUjIw82wVJKSyg\r\n4vkj3Y3a0chuWIH7Ec3fG6dRhY0NIh2bLcE=\r\n=Iluc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.0_1661475370347_0.8911934245999349"},"_hasShrinkwrap":false},"6.1.1-esm.1":{"name":"get-it","version":"6.1.1-esm.1","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware.js":"./middleware.js","./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"d0cdd489bbb843d95c6d9f0c7c786bc39da7d1aa","_id":"get-it@6.1.1-esm.1","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-IXxuDBJqZIs8S5GJlrrL4lQ9z4hJzICYsaU7zPwOatF8k8w55IjIl39y2YLC15IuXZeMnqrXwnb2X7bzusbhVA==","shasum":"50af0577caab6479962c5c76d50096f6b074963b","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.1.tgz","fileCount":218,"unpackedSize":842637,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHQl67VCMF5DVgcPqL1UwCkAjLKpvzTDE1uD8WRTymaqAiEA1x+elHxk2Z3oPKSwgBhfwG3IEliP5+Sd8ZNLr03UOts="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCCFqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq7BQ/9EhwHO+2IWnoT3SSwZu2cbgJYpemUYgCBzkLYptyGQ6jmc2hB\r\nHXrkZd33Ivp81KfbN8ILH7mIgAhSo6QmKvZBX/2Ql2ThSPYsH3zIpS8yEPGi\r\noWMFAr6H8QP19SgWJQKeo8rs60tjIAC+nbe1M13/sz6TeP1bzdvzwZ8pJo3k\r\nU6u5I++tB7JkUcZAmpuMPosDxi0IgwzJKYtsS+8oEGXdn1/4q8olLg+0A45B\r\ngGKhtB3+nNGOVCcPYq7eJtTGk5l4eJoTIW4Q88FnqEeTrrrjOzALqvi1794W\r\nztv+xAHdtgypOPYeg0yEC8XRDdW1Q+NMDzEejTPPssQ7AV93QG+BKJUSGXZx\r\nbXs2j4t/rJBY8LA5te1z8CmMqkyQHsOhwxdaqvJY/pPxLM4U5Lg1aFCqhzkz\r\nzE5Cy9KjMu0cbpHbsGwlzD9Zl9K8AdmPqi+JxzYZQkDr0yDVfyAE/ku/bdG2\r\nol/X4B01nyM2Fx7y8cd+79WyVCdLXhFAhx5bJgelrd24fPMGZx3B5NejjTMj\r\nZdiMc+cbR4nR8cNsvgvxPoj70i60NBiQdfRSjmrmaztXIzVqWQ9qhjhPz58i\r\nCGpA20SXGhgNWaF1hMjtXhvW12hTy04e3Asko2Dp8WYx3eo8eHLM3Mynrqot\r\nTcaJPwtO6JiajKSkKsUgjSip20aNCf/TGO4=\r\n=PrMr\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.1_1661477226091_0.31477182291904215"},"_hasShrinkwrap":false},"6.1.1-esm.2":{"name":"get-it","version":"6.1.1-esm.2","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./middleware.js":"./middleware.js","./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"b9b4e526de617f59d612eaade9b8ffd05ec783bb","_id":"get-it@6.1.1-esm.2","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-/FH9I9Cnlb3q0p46sQ6SstMIBWqAAHgiBS2GW780oT27sYoRzydYXiot7dwDp4UCbXDPmAjSQF3mLcUghhkToA==","shasum":"9be3d1036e66fe0b4f9f915c72007852afc5416e","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.2.tgz","fileCount":218,"unpackedSize":842846,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDJxafhUKilcj853uVylYTVS9NfSabgehzfiLBn4etQ5QIhAJlgaNKbS9ettpI1qZolpkS592oQOEu3p9Q1+tY6wktZ"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCCPDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmorxw/7Bj9IByfXt1SuBI9WP68zZCK3Uin6yNxyUZioczQHht0tyAm8\r\ngEryXeLGyQp4qZnHvAlG940jNCSwKmr61Kc//1CR1rmS+346fgZKJ9B9hL5r\r\nXfclEOSgqfqePBGkswjDqYBDbmN2ONVQm8/49yC9TCLP1BokxyZ/lr87h+1Z\r\niqoaeqrZgrxMTMYGApajwy8peapKOwZmKqXPROwxmWMx0JQrhpuVTBMoNcrU\r\nIjLQF2M+GjAMQVezIHn374vmrOSbnU5zT1R8SyINU22GLNZ/q7t5pnyGc0Mj\r\ny1spJgfwxWdnzWgGezKiqsH9s3NExpjx1aVF0kheuOxTP9UakOIOTY4/nfQu\r\na3+SiB0VIuYB7AI+X8Tb4raHZA1D1w30zFTqxWEKoov2lvPXXOzTlc8nphSK\r\nnBDx7uo1GrfrNfEC1xITMCh3284ZV7BdyahaFjwhkYbxFIvzlFmNEQqDs/Zo\r\ntE8Dg/1ZgX5tITF4BPCOG8uFQYvLThhrNsfZKSNUJk68P/b1o/uG7riNLcpL\r\n+zw2Rj17jgttDhxnxejwFpK+pXwsYpp3m0k0FaD5aiXph/+cM+Ai/z2V+qag\r\ncz+TvF7Qxqqe3hUQDaYXpXjf0IKruxD+H5hA+61Y7xPtRuZZPwYguFR4OTvD\r\nuDgFywuegil/FQZjxApF0Ok4NUD9VZofD08=\r\n=HKF1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.2_1661477826919_0.8083397662087346"},"_hasShrinkwrap":false},"6.1.1-esm.3":{"name":"get-it","version":"6.1.1-esm.3","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./middleware.js":"./middleware.js","./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"aa27d7177626a2f74c90e44078c234ed37967573","_id":"get-it@6.1.1-esm.3","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-M1fwcp7/c/LHCe7szppeyAED0Q9Zw9em/08cniscudwLgKS8HT+5KrVrTOCSFjbZHQzpJEeUj0vDSv0OAA4gaA==","shasum":"e3ae4e8193b26de72c61acac1cb82b37a763850b","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.3.tgz","fileCount":218,"unpackedSize":842819,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD6fKhU+nunjUd7LMdrwnFRY2FZTB+beSlMq0rMUrJupwIgZJGp9apphS1vghUzSx2b2LnimEvgCbpZg3+qb9Y3Pfs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCCkmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmodhA/+K6B2Md+5SSRJMqhsb4rN7mG9m1J5NDJVJdDdw5vzdu7ak3ca\r\nKQUJ6EByeTuP6Z2aPEGhEsfjkiC6TdPBuNMYKoEFDla0Ojwxrgp5Vk0rtDhc\r\nZ9CVeHnzqLiQ0pEwxj9f33CH/BxsS2cpcu/VAPPNt3kUKB19DhfTcF9iLf4G\r\nlByn/NL3LFYdQizTgEMQFqjjsSTpAD9YOu2JGv9xlJ0zUd/ALYnGY1TmyGAO\r\nawui02PkmoQXNJp2N1vAk1GVQhtSTRZrDT6BeeO1eEIlcnx3eWP046QNUo9B\r\nej21zyyC825LH1kOKj0gNpVbEWklZzUhlCOJatSA3vne/wP3WYG5zyJyyHvL\r\nL3UWPs7gAKiLjb21tyXYPCTFf/AzhXBLzjMTRF6jvKdtMgJB3ZxIzuEmLwWa\r\n5WWQXSyi4VMKGOWuieGqKeqAro/6ymuk5z58tMUiH4u6ZYRM+wEYTHWj0IT/\r\nHZCfl99xS32tU8PHZ877oW7/PJc9jgBHTNacFbMPAAGblRA6Zg5m5CzAXmTs\r\nNWrnRBwk03jXuLhRtugB9CyFzEjvxaC+Rqt2VG1zXvTlNrvBYE/T8vZ2tqul\r\niaCKPUBJZtp6K/QESWJuYv61B1Zt2MJY/IvT6OxfFbTEVETmFu+8FBLP8NqE\r\n/ODZa74zhhxeV9wFk6uhK4o3sgn54QNoojM=\r\n=tV7W\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.3_1661479205994_0.7807643629505971"},"_hasShrinkwrap":false},"6.1.1-esm.4":{"name":"get-it","version":"6.1.1-esm.4","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^2.6.8","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^2.0.4","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","object-assign":"^4.1.1","parse-headers":"^2.0.4","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"1c1329f0c70d4d9b92bf2665c35bee1a7e198593","_id":"get-it@6.1.1-esm.4","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-cbTIJyJWINtll2DPI5Rff+xKcmER9bqb3C9L1SJTcXR+6D6+JgpUcBaqa0vIoXIJiaQTEgHii34xv7+cNjyDGA==","shasum":"a9d57496d7d1353721d98b105c450d3b2f6fe033","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.4.tgz","fileCount":218,"unpackedSize":662944,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCSyZ7DUl7lGBaPRQIARsoSL20lXnXtdkOWYwDSZyB0LwIgEzkzMDTZlf22xe2Z45ngD7/3MFTLn2jnT1Cx7aYvSu0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCC0PACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpP7w//SRunnfIBBeOh/QFPobhnKmWqDGyMKFUrFgeq4xZ1bhb7+4gy\r\nTk1/bKGuxL4BSP3gaf9K41UweYeMtnPFvTQ5gEteHG3QJuZva9gFamvaYfS4\r\nhM7/RA2SvcslaadrOsEBQVj8zy1+IA+NAnnda0qSlpJD9fXJz9uKvqRC/ClL\r\n5SFKFog32GeJUPfe/v3xHXebVwR8jt3wkw5ZTr2kCsqJ1uxF6+/KkL0ernKH\r\napNzmfRDWwVfIpd739DhT4mgltL2hVZRCSGY7rE+LYDaXQRwAvU9uNXYbMsD\r\nlCBu7xpoOiOlMrgnl1u/ihdwVrDuRJ7TSVtXHM32gKoLnldi+4foQapbAgR3\r\n65xOk6t87BMr9hHumUqloOvD9PgtNjflttG2eagYbiUPBLk3UtWCaR2KNM0S\r\nk/jsGQG1N3MkwQb3zEjttDP1h50ysnpb3wuGhflPyWUkqYS7vIIvO47fcuYA\r\nUSUfepA0VpOVY9lkA/Anhxk/YUXjKNTAAZMao27Hwf7esO9KPzVD2pMcTyPF\r\n/IAxqscc2wRwJT5m6JpeGxGGZot5jzbTUcp/UMVdvROlP2svxAKvyyVWeJPo\r\njoWUVEPy45nqgAJShNYSdl96MH+/obb2PH5c5KIloW6BBSLhFNW7EU24JBuM\r\neEuI3LjwMdZyYnKNIWcIiLRDbp/nlELvvEk=\r\n=DgPv\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.4_1661480207004_0.8579227550695967"},"_hasShrinkwrap":false},"6.1.1-esm.5":{"name":"get-it","version":"6.1.1-esm.5","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@sanity/semantic-release-preset":"^2.0.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"681f71b6055d96a5600b140b393571dfe8085093","_id":"get-it@6.1.1-esm.5","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-bZMTgUudzkz7Uo1mlymTe5wjoptifBqNowTIViGQrQMmHOqro0TbGRsKl+5/xRbdYM6hMJeLBZIXiJGcf7a3Tw==","shasum":"705979c6e985cf9d10e3b087a5a6e5742465e6d9","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.5.tgz","fileCount":214,"unpackedSize":568803,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDnmNxjD72iFAowhj7p08uFQjetd2J3wEMykabeVl8DcQIhANx51BrQcmV6f6mlW/1k33JE7rDbHZI7on/KW4fFw1ZJ"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCGn6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoKMQ/+ImVWpJSR12Iy0mN7IgeIR3jmu+93IvC8HtHPidl7ONgPgoFz\r\nmT/gTGPFs6oC5ZflFk0CE0dSs8lOyDCfmQtoo7mh495UAqGtul9oSgXdoBcb\r\ndLLVOmkm5ye8tNH7aVgAfUZlZZv3dn++qxNMd8XYg6HHsiH1vRIzrTEcfmio\r\nzXu/CytrzTrw2KKR6zPhElOVpgMEN8dCWBZVJedPcq9ptZ2pMrOynhdQqt35\r\n3IegPRX2JlZa1ZEfB8+ZkJCnuHurWFa/jB3TXtJtpOnFYx+usQeIJgO/UJj+\r\ntuKTEXnINonPNoi82EjxSi0U4OyFGioMZGIR2kzfdra3qeCCC9MhL0iQjn/B\r\nBMhuCr43psEhtzW7aJcJ9JlmMWd+D0CyPQyyVqXN9c8ol4PNXrTbBdmJTuFd\r\n8YGu/7jkZpHxYcfQmBv0FLJpQyrawSwswKikLndAKSgnzU+lZZZ1FQr9XQM2\r\nyRQF1mhXV/RCRHsOVb95YbeNLjwnR3/Y3B1AYOGnPLguFUwjtCWjeAtXZYOm\r\nAzqC+i4C9Fl9zYjKQFuMCX8ebfNRHgrrPLPcosNz240Xg6lt19ZvLq4TKool\r\n+17VCmXWnOiPqrmnLRZFdmXrIkaZN5b9IH7S7Wz+folftoeaY0DTxcj8x30c\r\n1h/VZSEhY2olWnDUr7j2EHuFYHVpLZJuiCc=\r\n=sYAN\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.5_1661495802319_0.7933954987213565"},"_hasShrinkwrap":false},"6.1.1-esm.6":{"name":"get-it","version":"6.1.1-esm.6","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./src/index.js":"./lib/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware.mjs","deno":"./dist/esm/middleware.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":"./lib/middleware/*.js","./lib/middleware/cancel/*":"./lib/middleware/cancel/*.js","./lib/middleware/cancel/*.js":"./lib/middleware/cancel/*.js","./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress.mjs","deno":"./dist/esm/middleware/progress.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":"./lib/middleware/progress/*.js","./lib/middleware/progress/*.js":"./lib/middleware/progress/*.js","./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src-esm-exports/*.mjs src-esm-exports/middleware/*.mjs","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^1.0.2","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.1.9"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"cbc57e770b48a9674cdf57609d2bde655e844e01","_id":"get-it@6.1.1-esm.6","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-s5Ii/8KyK4RFAjV1D1DayLf021P2SJ4o0MGPMP6weNXubI4Ooua+qordM+Yb5/aFU6VxLeBw6m9TxKJlD+4tPA==","shasum":"9d228db18f7861e5ecb748367d2f4ae108e94ba2","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.6.tgz","fileCount":214,"unpackedSize":568913,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCPMQJRPstgEiFL1KBCIx8J6tH/rq+RTc1U20mnlXtXCAIgEcljfrTCmvNCl1nd4W4BC0tKUDH3a9tNPkQGynGBSt4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCGyWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpuPA/8DMWp4puJSAuUZCZAknnJsNxp3LcgvMGLYbyDBnDDhHMJ4wjM\r\na6xPOffoJUc5SB+m9CETYScH3TFLpIiBLvxWGjKnfLFg6Yw+wCiymQpmbukQ\r\nQBEXcuq/arMbIyAg7E63Q+bFOgfv4SztAy9vMecPTGixkLSjFUc5UO8998OP\r\netWnpDnzR0yQPYyEq3AjERN8mNZvqdiNFXbwCuO7MBxjvBazMey7UnVyBs6t\r\n0XEb7tlGMUG5tOSwuq31QG2pznziFK+Xa597BcG51oadc0a+Bf9NRvM2jCHC\r\nC+wri4yI9zuH5uNxhUPY+eps2ln+KvD74UNN74ftJtK0lEEEhDSxYbTgC5NW\r\nh4owYUzfAFh0BcHxIebNyEyzlQehjZgMUEe6kefl+j7iKtvZQBVjWVwlZiI4\r\nfA06Y7gP8drk+9F1v/gufxIX0FJsUGjbd94jaQBySjz1FqR+KzLXNwNjVpBu\r\nzf6isj8P4SBArQIKpNjGqtIXodz93OCOQ8YIzsYkbtKbik1GI7V7IAhh6lNv\r\n2/eFmJnTlyoVGPiwJhB/4T0Yf0FqYBhUeO0GuZfhslRwTZZU4m7YYcjPCvmm\r\n7OUtf1NRge9RS78sc72lIk8hcssiyMOQdUX08JU/559Ps/+BjHh4B2XO+m6r\r\nsl9K7RlxLZxUoZSzLMCiIET91hngYGHHSD8=\r\n=TzO7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.6_1661496470487_0.9415028762347573"},"_hasShrinkwrap":false},"6.1.1-esm.7":{"name":"get-it","version":"6.1.1-esm.7","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./middleware.js":"./lib/middleware/index.js","./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"bfb3476f4bc008d32a5ec9f0887c66d7adf88314","_id":"get-it@6.1.1-esm.7","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-oarPteeq9r7qhXO498fBxyzn80+lHH58awoKgTFGI8XzpLfQrUIsN5cBb6GwPY5wrIFIxzc+BGnk08XPqRSjkA==","shasum":"114e77bd1ed03ab782c72ff2d216d7033ea4eed4","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.7.tgz","fileCount":226,"unpackedSize":580808,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEnBU+nr+zP9OTrCpFJVWunwB20EsNqURlp32y7pcD0cAiEA8V5JXB7ODTNplUN8lyI+ygG+i4A5xHUkbT1BOddXANQ="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCJPOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr2kg//YhlA0j0P9+e4bEobC3Y5VwZ9ogp5pu4drD0/vzGm/Iu3aO8N\r\nwZ5M/9mJtccoZTWOtXi7MwSFxvMcZqhBTv4usjYIjmGwvRvWUqSN3TzFgGTa\r\n9H1BV/vby7uJWp+F92OaJ8jgXQuCwrvCwVjwzZwOHcNAAZB0iKtLOREW1RI7\r\n6d4P2lkJ3RQff+DgdxFwPJNJtkMj0zXz9aRNgasWsy+RsnvFMgigUtdDQGC8\r\nC0avjEaemDj2JimYzhopvw/R9BkY7JBxXDt8oSFmiRQKFZM69ZoApIFR1g36\r\nYilCwrzy48TLfcDTkYt4x4yOrb+F+iEx6ZQnwsGkqd7eLQn1nCsc5cnDIR8m\r\nhm3d0JXGmRH5KuaSW9f/SlpH6j6Mpc4dX/5I/VOnJxFbFqLUIYx3NisDghLx\r\nLzDU1xGnwiJ6nxiKRv77PRjk3buj+lu1D/dw2K8JCkWesgzynlDP1FFxXAAt\r\n+RWiVl7epEciZVoOfsP7W06RVEI9irznzq2GM8MqpeKCqgg3UuPgKuhCEQ8o\r\nf9ciGSvJiOT/Ob5to17DGWcD79Z/IAjpuULn/g8AOc+O8/pa2H4Qy9dN3BAs\r\nMSZlja492lDKSIttyttotwoGnWYxYYkaIiV2q0vSIVHIZHzcRhd/ywHWZWxb\r\nnJnG+NxHXmifune9C6Oe/sv+GJv6v5xrvW0=\r\n=3+V+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.7_1661506510325_0.4614945476343213"},"_hasShrinkwrap":false},"6.1.1-esm.8":{"name":"get-it","version":"6.1.1-esm.8","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"461fdf01111890969dfa3e6ecb796a7e9ed63895","_id":"get-it@6.1.1-esm.8","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-CQ0TjaSwQ03Of4uSec/eXIs46QydbJaelaj4O/UIosdn+jsB5vD6jYw2GFYJ+zijCKy56dCTAVk9ujwYQKpNrw==","shasum":"02025c1ba0ab113fdf483ae867416e702e96ab43","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.8.tgz","fileCount":232,"unpackedSize":577938,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCRbTT6rsk3eYZTwuKs7ooM02n82jj36ofnYxBl1DZRHAIhAJcBd7e3OcxcInVRj3YOUcgalL4sc/fOrwumio0f4Bft"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCJnLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp5uw//TC9oUWOWszSt7EwX6MquRaW5Ro+brwrixHpOAN2c62RzPDQ5\r\nqRvK1SDAHTdaA90QrRAEQagWSxoklGbFCVsYfEZH1L9YX2iHUPBkHIIE2CGm\r\ns14kJKQ1qxEecMuXr4fPgSz6H00PR45xcldeUyTvlQLYdVgNcsZ0WqCMt1Ep\r\nGikCDzRYuR7O+Fh67kwxkGR0w4ACNF0IAtTswwvwzUjfCDtuXkFsOHp+UXVX\r\nU2aDgF9MKj0YgRTiv1oNrsyt1kD1DyehhV7dqgxyL9zsvpjESst2VDpGwDLN\r\nFkNroaKCalApSqKinm5wIg0zmT45i2Y+DXq+A/anjg2nYIGp4GIGPwWSlshk\r\nSpl+5wFgQOsoMts/R7P5TUdQxUKIEgEdXfanLKPEgK0cXzrTrmXsf08O6lDt\r\nPeW3JmAUnrW+VjapfKwtOZUTTUGX8hQz0bzcY8ARV/aIW5Qb+uIlQuWt9XLl\r\nxZdTURDmVfBJSmXXAPzYDAAxnI4rf7w6yeCI1t3X3zcEVqWA4dysMr76SrYE\r\ns3pwgMJHTyycu3MAJJwSVeu/Do5dAw1vbetdr16+IFkh8o4McFVs5C4S/FJc\r\nEidEInQkeMrHbqspnJhFHWn2sjijmErEJQzdlnwg0XivYw2WZWiWpn5clIuN\r\nS08lY6hdyUW92ne9DRCTVK7+UQIQ8m0bSEw=\r\n=cc7V\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.8_1661508043585_0.5537967599187499"},"_hasShrinkwrap":false},"6.1.1-esm.9":{"name":"get-it","version":"6.1.1-esm.9","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"461fdf01111890969dfa3e6ecb796a7e9ed63895","_id":"get-it@6.1.1-esm.9","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-rZX/CMLAINBr5a5OeX/n36mhYfUpMvDEQsMv+LPNFlACodmT9jxNdAmmwb6UbqxKxwbDQeyGBVp7K7m9Wb/ejA==","shasum":"d2cc6f4aeb2fa02ea4b54adb40ac6ed4a53b02c7","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.9.tgz","fileCount":232,"unpackedSize":579028,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDUDUfL2hgK/6o/ye8Efj2Ezoie+mvvQeHlZnuJaiGE+gIhAMMcyDZhBNKds+ckW0qFlxjWewxYrYi4FKWGxZGx+tQv"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCL7mACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrGfRAAh+hYdn5V+kpkqTTDcZW3ArzIY4VnzhJ0+2BNf1dTQxSYJv/Z\r\nsKp6MTZjWZo4hEvEd5slxFKnFgZZjtcPesR5LrzvUj/hri4qeWXl5oVuoE2+\r\n4PFQRJc2tUadvM28d+vCPSRvepLvH3c0kCzu/HwYdMfQKOclglsB1tkf9RrJ\r\nZjbZZpu4DMA6em77Ye2Jzdn1tJBFcw0/KV65agS1gLjPd8j1RAt8SDsQ18M0\r\nR+94lcgQkvCcmyrP9ZEb1iwXFTpxdlJ/+6EHcBbJwd+XsaGiL8L1ObMaiOno\r\nim9DC04tsmFeoLfasFUrXvLmceuZwL5MGDEXGNwwjpjPUfhxKKjUKWEe4uj5\r\nk6P4eChsPX8bfmT7O7nWrABBQ8XfqGKszC1Ur1UL/Xqn+J5nQIkxmb38MiXa\r\nhivsjGG72KpDgeJfXkHmFn193PwTK9CJSfTVECdf1iN2pcdg23bbZTYJoAaX\r\npKeVqQoSdBkhSHQv0+IN9MvHx8Z0BOJoyXKX54WJ+aYlIsZS7brXSw9pFPL7\r\nTgmqm4SeiQEUwXOV5KTZCpNY1soUxQ/oL1IIUeKuucZIyEl669X/Agpf5onF\r\nM1EWNrtLtkICgswhi+AazaT1rAX0x7deeKy+llp5TAMKef0qTWBNuDmfTO8P\r\nrngA138XrTIkK1eAXbrzKzE7b9txI5Hi66Y=\r\n=8w7A\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.9_1661517542598_0.8180706833634519"},"_hasShrinkwrap":false},"6.1.1-esm.10":{"name":"get-it","version":"6.1.1-esm.10","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"56ab3ef94d2aac41b7598ff3381825ee9bf594d7","_id":"get-it@6.1.1-esm.10","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-p4dpCbHN0fPSWNCn+u0mOEnGkU5yGgSDNxuy7MhawmCFhlX0JXzqg71eiUVLVt5Hln/799n2O4QaIvh85L95ow==","shasum":"83607749a2a53b3d82344a3e2512b71109201392","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.10.tgz","fileCount":248,"unpackedSize":709768,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDtP5ZxgrLGHKmhitf4kWf67V2WSstGOKvj3FeC8ehNTgIhANp286Pkq9cOm4AfixsVJ9zmIj+0rqOlI2tQbf7urWnX"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCMXYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrNUw/+NDuoghtswwnv+qjZsq3xTViM+OyaMRx8hDHPk/d5phNxmBI6\r\n1rVpQUf3UeZxsyjBWrUrXFM5KIZWc4mU0RdLZwLJHOV8dva6BIOyGVblgqTA\r\ndJGi11M9Wk2Cty9Kx3BhK49IcXpY98rFuv2WKDxzr5JflxlEhgQqRCwHSVg0\r\n+xRjUlKyAvYxrLQVfv2dZoeYEDyk1TcEfWc6BiBv1AhsPBS9en70dt7HcjuD\r\ng0h+0voP97y+xUf1TqZn7ozMYte38lwfG4IhilOAPma9hEtK5SqKPsLAlCn0\r\ncQ3AMy2EukHmKyErqAP+Dr91tZi39pBTEJYyTFROcbV/k/lzNDct7tgbbh0y\r\nfKx+Zr+HL/jHtaVkXiMYm20gEexuLEDRrKTj4r7OFbv5eHdPEkxNee+lwJd6\r\nXTHUdTxSgPYDR5TPWBIqFb03j5wjDkuR2Og5yFLh2w6GBPsHy+haDA2WlYKC\r\nMLLFr4YWMmAuyZFczgtebeu2iLSE5hTuNj+LThwoWeEQ17wFW/3ZfIR+vlTG\r\nX6/yutifPGCNeiIk/+BTOXbSzAc+ZyBhrfeBemtADn/4VWKLdLoTXl3ecx2A\r\nsjwVXedLMqRM4w0M2tiziq704nFaXiXD528NF2ODE6eYj/LeU+ks5hmv7SMJ\r\nH5QJcsYWsUEcIWKEGkn8wpDr6R9olvNFwak=\r\n=Ik2r\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.10_1661519320682_0.963971783276685"},"_hasShrinkwrap":false},"6.1.1-esm.11":{"name":"get-it","version":"6.1.1-esm.11","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","default":"./index.js"},"./index":"./index.js","./index.js":"./index.js","./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./middleware.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"56ab3ef94d2aac41b7598ff3381825ee9bf594d7","_id":"get-it@6.1.1-esm.11","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-2crS5Yy9WCEHUOknSPXG233g8J4dw7brGQvwvpVz/pGvKK8MM56ziWrAJ83lylFXMw2gAkvXUWD43E5PEiChTg==","shasum":"b41e61b67cb1e3e455997a3fc6794e745b3cb033","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.11.tgz","fileCount":248,"unpackedSize":710481,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDHR3Os2AsBd//9/aWz1AZriKIpxwcGw2cbhBFz7SC0xwIgC2TtmEZ0c7XAOd0mzvnbh4wZZ4kGR3CCw2FQvbmsBOY="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCRfVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrtYA//QBzVo1W6d5wAUkvQfNKnveYHXtK7a3QuAWKhpGCHNkh4qjwd\r\nThp4+BzriJsHw4PgT1Az81OkXU6a/j45Vheu7k41+5rRn5ag/P3KOTZz8W/b\r\nhjcPP6V8GJX4suoKmpLpwVAOFtI5RENZet8EfKq0jkZs/IRsjR0jPc7AyHMT\r\neNq99TXmS2StaVt3Af608dYNmQbH6viUBTKI9ZVgi88l4odK5MSqjhDapt4G\r\nqbrxUnO3atEdEBXoS1GrAfhwEOPcEpe0v52MJM1po/cNAIK27MyNtObReD+m\r\nmg8dKZQUJBXRo64/Xmc6nCek4jJK7yZdYYzeoh9ULzF4auvF5dyHEMF81/Pi\r\nWRQsOJpoF9wtDMbGcSEyyLXKvtzou3h2qJDOkAqXs00r3kLzrCHfaG0jnuES\r\nOvCSHTyngPOiiMCbGq4jGt97V0RkAJcoss4Hml6XM7NqaqJE2qR7+4o1o8/0\r\nY5g9+5u2BFmHnplhxUZlJe3WK8YU/p6D8VeeAmAWF2RJ+GocEu/XzACUGN0E\r\nwnUxjQH44jJFf4mwF0fJ0d8YXZxjFmKtrdc67gYlhjGu+fJY1MgFLRGTq6NJ\r\nKdbqtak5rjnsS6Tu87SG69ZB4Z7tayJ5U7cn1C/XHf1+pCzLQvpGKO6zUwIt\r\nuzFHozOubGs3Ck9zqhagjY961M6DClSPcbg=\r\n=0Us3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.11_1661540302634_0.8238237641762498"},"_hasShrinkwrap":false},"6.1.1-esm.12":{"name":"get-it","version":"6.1.1-esm.12","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"22eb36c1cd0ebc567fda6c4ee08ec179d9fd6e3a","_id":"get-it@6.1.1-esm.12","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-gRF0xEgZrR0Hcj+daKY06mj/1C6VIRw2DhKNhHm9CeXjsCPi64nnd5buukgm76fo9I8HiyjJWC3rAH7ldOFKSQ==","shasum":"10b7e1fbd770f05136d5424e0cbb0c0aff9d7abb","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.12.tgz","fileCount":248,"unpackedSize":711329,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAYouDzz0bnp1b22VQeLjFy/bi0WP1jZ5anHLin7m/oSAiEA972mQ0JagfDrdxiYqkYb1m9PwF52War3KNDIPoWnqAA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCRvVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqP8A//etCa7FOn1RJJ4TZhZ5zR+qQ4iSuJc0f7U51fOrQUwWbTEVQr\r\nXavYPb7wxzDSFm9+rIMinApu1/omUUlCr0VZn8DnwjIJXK0nmP/49t2j8IeU\r\nIRcF6BqATDsK+KeVQjoih9sHwcLmMc3poBLuBHtojc8gnfZeRuQJ/ZMQNu5x\r\nfG5wj/Qh54vVkppMMIOAv9VgulxMlJo9XZBNIWvRFcCcCgqnqL4XPBtwmiU9\r\nYI/PWQnun6XNVgXG6YlmK819xAtCWxHEDaf+pwRkV/2in3RHdnVE/u5DkRcz\r\nSSI8QRh0XrKIr0i6okAQlgsjHrBdE90yoGjOrc3IP1oynzXtJfQJHOoee8bh\r\nEBMepBkqQYF3WLJvRXbs+gy9L5c14xVCvpXYb2xdrmaxJMP4xlqX3ipfQuLp\r\nwUj8nmZExihNUK324/2F0vTIryVF9973wFTI5TPdV0u3o+CR3OB3dWCCS96o\r\nLgOCzRVtNGUqnsn0yH6M19LaNG2v3xqJfIgRf7F9iW7Pe+XLIhsbXLHrIE2u\r\noKkQPDQy4ZCQIz5Dvy9xZZqOeitXhNeDMqgwz4iRWlzDG7HKTvWg+x5g9xU4\r\nCSyuBdJ+WmWYlnY/EC6kTEPJarURqa2o13nm3KPgiZ4QQ1SiWcS9+f9faNtB\r\nHVMp3lTP2CvvrUKdOx/+OtROpM0ERyNwr9M=\r\n=2NGR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.12_1661541333619_0.6717358644366651"},"_hasShrinkwrap":false},"6.1.1-esm.13":{"name":"get-it","version":"6.1.1-esm.13","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","module":"index.module.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"4335768af915df0b0a4056b80b7c92b0e8314f25","_id":"get-it@6.1.1-esm.13","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-TUrMIVbuLHT6wPyWe3iAIKViz5tb59uBv9DrejlkfjwWeIiynTEFNTiq7Rm4KNMUbRL/oPiMj3jwyRcPJUJijA==","shasum":"47cb29461551221d1db01b3215965e756bb380b9","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.13.tgz","fileCount":248,"unpackedSize":710233,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFtekB7z61csEuxIY6yjMmSHf4jLidUiyvArN1DEjIhvAiEA5nNCwlShj5HNhV0jSdZetRRt0EwdjCPMGrV7aiTJIwI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCScGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNwhAAkBG2jiHKQZ54k9d16Kkr5k+9yHWBTFyGcoYEjMYaX01t3rKF\r\nC9qnUHX+RRM/igJzQKTQUinleMyBP1zJdVGPnrhFElPIfi+DF8XVY1Mt9gAi\r\nGVFh70LqZq5XiximhDzhL1V8z+wUJIFlwela9KI725LW1PpWv3PFgyIJqFjO\r\nNb2KIeXkT07YJBc/B0gSpo+di/S/GbL2u59Zg81TnOxsy6cHXJhk6MhZblPg\r\n7xwyvyoZXoJR/SCECOP+RAIL1Ie0Xw3nb8bVEGwqIqnF0yqQLnyOZ2tXh0D+\r\n1eMVm75/ICo0WINjK9Hse26KLUBZVHSQq0harvDrdlNEBIlbChwlScMbJk4O\r\nN7sfRGzm2VHtiMGBYE/UZFI7/hexdqY0Yth4j0soSma5D1Bg4ZwuA15pB4Vp\r\nVasH5vZ58mNLbFxcweJWR/Oae8WibK85mN/NZl00AoJudDHZFfMp3DbiWJ0U\r\nIZvw01O0uuHO7ZywVQ/GlKaBxVLiTlPa9fLCHeOPqKBOwsiWpDEDdRtNdd5V\r\nypoW85U/A39GAwp8UomRqKboGOQLLiCRZFNs2dV9i8GCfOiSWVbZSt28y7oq\r\nEYdorqLTMlgpdxoq4Je/tBg+3665R6evHUnGkhJwBiWo0zMutHrp+WqM6zz5\r\nZ4Ilh18EkZfbeBPMc5bXqSWKvcCKycHjEFY=\r\n=G5e+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.13_1661544198334_0.837454576611675"},"_hasShrinkwrap":false},"6.1.1-esm.14":{"name":"get-it","version":"6.1.1-esm.14","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"4335768af915df0b0a4056b80b7c92b0e8314f25","_id":"get-it@6.1.1-esm.14","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-YY3yYhYLFBgYChLSmYDDgdiY0xvt4v6f8gjm1mQAirwlX69eIWrORtVHwHWRc3mijBWgSpUxj/TR0dICr0QjoA==","shasum":"f8eb3be4cdb3812609675231a245453392df3749","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.14.tgz","fileCount":248,"unpackedSize":710473,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFbVYJne6HvwBJ9DkaCHxnFJdb/pKygWUcOixCevqdBkAiEAkyMMnhQoNGmgZdLxHN/oDijiW5vJnN/eFX8rGSfq0SQ="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCVXPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5VQ//QcXc7ridNc2mUgKSmIIhUGUyGymk+aNq6ycQZjUqpaBXDI45\r\ncMbPme/BHw8F/zj25xqsgjdJubfqKXDMc0VFjepIGpEHyZ7KSmhT2B/aQL6h\r\ndWUtK+JfxQtSyLTGR6QeBV51cwcHMG9tK6y/oBBFSAKeWBvptcolWjL4002Y\r\njLOII06VFuRQmgxat37UKir2/ux1+GUs/CIFso+1neAzS/2pqUKwukLqrGkQ\r\nkgGbXSiMAXKpW7P4avo6qBsIf5AyympQOHi9UrDUasynekR/I6Xqu0vTlupK\r\nqCCxP+dW1syq9Fxy0TT0p6NFVix8JQf9EwOmNqDgWb+GutbzKGAu9ur4W5vD\r\nwQNwNcjaTZHPBVXIutWFnIrVkGFRJhiVX+sEkIqH25/6Iu4VAxmV9KmRV0s0\r\nS+CxZgz9PO30uct4Pv2dkqkBIV5KUK6tx7cYcmSM6i9eaBALuaF81XgXvxa7\r\nDQmf179AVleFyQ+oKa5bBCgS/pP8pQBFDaBmxUgTzXC7pmszNoyF9JGEXLzW\r\nrruwpo+0WeramjBL7i7cY16AQnUYeJsiWpLXTOHKcyaK3JkYhUbl8UClBtYU\r\neL9WFxzA2fpZWajYHf9i02KMcyJmmALGXo43HgUvCbyYWZNGOBukahtQGKjN\r\nFF7baX0/c2VfdplTVRosjHI5OiJKxps16Eo=\r\n=0X6Y\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.14_1661556175410_0.38615761904822277"},"_hasShrinkwrap":false},"6.1.1-esm.15":{"name":"get-it","version":"6.1.1-esm.15","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm && npm test","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Require the core get-it package, which is used to generate a requester\nconst getIt = require('get-it')\n\n// And require whatever middleware you want to use\nconst base = require('get-it/lib/middleware/base')\nconst jsonResponse = require('get-it/lib/middleware/jsonResponse')\nconst promise = require('get-it/lib/middleware/promise')\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then(response => console.log(response.body))\n  .catch(err => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nconst getIt = require('get-it')\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then(projects => console.log(projects))\n  .catch(err => console.error(err))\n```\n\nIf you are targetting older browsers that do not have a global Promise implementation, you must register one globally using a polyfill such as [es6-promise](https://github.com/stefanpenner/es6-promise):\n\n```js\nrequire('es6-promise/auto')\n\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst promise = require('get-it/lib/middleware/promise')\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token\n  })\n  .catch(err => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nconst getIt = require('get-it')\nconst observable = require('get-it/lib/middleware/observable')\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: require('zen-observable')\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter(ev => ev.type === 'response')\n  .subscribe({\n    next: res => console.log(res.body),\n    error: err => console.error(err)\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"4335768af915df0b0a4056b80b7c92b0e8314f25","_id":"get-it@6.1.1-esm.15","_nodeVersion":"16.17.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-4vPobLezFH2ZaIa4LbWnIJfplNsrw6YG7Sj6bV3FOB/XlDE1+KeVMQ0DUlY+AZUSdtKWhXeBYmf5Qmr74XDPkg==","shasum":"fabed047bc2d7ead0534f1f0fc979171036b4d37","tarball":"https://registry.npmjs.org/get-it/-/get-it-6.1.1-esm.15.tgz","fileCount":248,"unpackedSize":710755,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDwhWxTVmuQTeLbce07o8Nj+eaERyZCKPvkQ1/M8D3+lAIhAPy1S6sOBoq5QX8EgEKFdWGpjQXYidN9jnWOmaoZidVo"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCVxhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr8ExAAlBSfjO5sjays+A3vSFQmnk/8fuW+frhI2pC+gMVuv9Zd9tjI\r\n/JMYhGk9GWxpeZnzgFQhttDE10zAMaSTXZIcF772CT78yLa9bm42YTOFVWVm\r\nXfKIOVTFgc8YdVgeRsBt/LWHROCBH0F/SMqMiMSGPYVNu4GcmZjnSXIIUTYk\r\nLeNoGuEBezrPdi7bw21ciEBUhWLXZ2/e/trlfWG7DpDb6shC5Cuehizvn6vq\r\nPsVWn557k/Ba/nM3NhxocYeAlrayvXsTSPFIbQfm8GIiU12TU1y16QdYEjIv\r\n9rNz3TcsHcOoRy1aBUcdJYPEJyUMMmbMKL0YMpU1nY2O6vwbmqcmadFI2+1h\r\n6oQ2ZnBU0oxK+/66SeBEU+h6hpKTwNJSj8wyXLDN3wLm2PDf9A8CLc3MgE8U\r\nwcceBRqYp+aR3hAE7y+VttqwjRec22QtRx+alLaP1a0PL3nghhb2gIKEDJwo\r\nHJvhaC7kVNJJVLohm8RSK+9SfqY3QhySeqX5gyXcnYIMOjI87mrNSFpkrb1Z\r\nznduyphhlahcjX5f7SwrbCfnhGcocoTqA7THKlrmYBbu3E6pkYJ094yNSlQO\r\n+Jzzx0wIWXTDTqWTkEP3TWVisgr5iqPVJqZulDEi1AdYL4pAYlIqDh60iBVK\r\nUjNRgHtG5kWCtuDejniC2oWFoFeMqMiefZ0=\r\n=0yVg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_6.1.1-esm.15_1661557857035_0.6223065415916269"},"_hasShrinkwrap":false},"7.0.0":{"name":"get-it","version":"7.0.0","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.2.4","form-urlencoded":"^2.0.7","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.1.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.16.8","@babel/plugin-transform-object-assign":"^7.16.7","@babel/preset-env":"^7.16.11","@babel/register":"^7.16.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.4.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.5.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.1.1","esbuild":"^0.15.5","eslint":"^8.8.0","eslint-config-prettier":"^8.3.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.1","lodash.once":"^4.1.1","mocha":"^9.2.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.15.2","rimraf":"^3.0.2","uglify-js":"^3.15.0","uglifyify":"^5.0.2","zen-observable":"^0.4.0"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"98d1b244084222614aaa51b34a194636893b7fd9","_id":"get-it@7.0.0","_nodeVersion":"18.9.0","_npmVersion":"8.18.0","dist":{"integrity":"sha512-bGwWZ5qN+aea4L4BWVfbxM/mlbF2BcO79TULe6RSZGlazv/p9GtJFZq/XVHKs1oFhXa63l4pqQyHhsFxLFk6oQ==","shasum":"1ba84871710ca321be3ede239bfdff6d47a8520f","tarball":"https://registry.npmjs.org/get-it/-/get-it-7.0.0.tgz","fileCount":248,"unpackedSize":710737,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID6rUnh+cyVxdhCfO3BAzUinjLBfZqr39QQpT2W9voNdAiBzvg0e3wBhwQpIaprCMRPxpsKEsQx6dcjU3kerYpglUQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjInjoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoHag/+IrjgGNxnpvkVAzfTXhUgKMYI0VfM/QD7Vff9Qc9vPqjLLqJp\r\noD4ZzLUxXYZVb8VK0isKT+aQC9flMk/HCCIpg4AOCXYz6EyOoVoXgz3QPxzO\r\n4T9OxW2W2FM53Jg3zMKNqDQ9XuG4ZWHjXiWFlZNbeq6aszExQkX70zVwT/+K\r\njDGIRO1RsCdOptKR0mBiY/Y59p1HRE3+49X0BQBvGM/FOtKlYXUKLsOBrggJ\r\nS4nnYlyvfTqz3uFbhRvWzbm4gzLVMqNAC6piTjG6490ioFF7txgVU886xWgJ\r\nrB275+Cq4WLkO0ouR9yXNgU8uTtZWIrx7PfI1Rw1kdNWVEgbXp739zq3zxs3\r\nsgmDj4fLHS+LEBsjh8aJcM3nMwuVc1t/714/Q7m7MSkY3kPrMhrQkPo/H9U8\r\niksgbzdsgiCmOAZm+g07dpD1YrrXuD5iGp7knzqifnNUSAOTigwOZik+eXo7\r\nmFzti7N+jvw1sVhIDjOZwDEDcqnEgTrXo/sv0kWW4Wct+M2zrmWIDhnI9nb1\r\n/28KkH3cEgGqjXpq8AR9CfT8sjTpiK3b/wolv38uaMaKgZgd5eAaQMF4qC8p\r\nScXAFMeyZ3/ARY+jAtvfBh3ehbXRDZjD7t0Gy7ci43KhWHXcKE7/ECKvxER2\r\nic9yUALguI+DFHOjLMAF1zJCkVJnSYTKYoU=\r\n=SuBn\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_7.0.0_1663203559926_0.7564967770128657"},"_hasShrinkwrap":false},"7.0.1":{"name":"get-it","version":"7.0.1","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^2.0.9","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.2.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.18.10","@babel/plugin-transform-object-assign":"^7.18.6","@babel/preset-env":"^7.19.1","@babel/register":"^7.18.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.5.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","chai-subset":"^1.6.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.2.8","esbuild":"^0.15.7","eslint":"^8.23.1","eslint-config-prettier":"^8.5.0","eslint-config-sanity":"^5.1.0","faucet":"^0.0.1","get-uri":"^2.0.4","lodash.once":"^4.1.1","mocha":"^9.2.2","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^1.19.1","rimraf":"^3.0.2","uglify-js":"^3.17.0","uglifyify":"^5.0.2","zen-observable":"^0.8.15"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"8a986ca0f2b6d7ba4a68f7966253c6e8a00fb38a","_id":"get-it@7.0.1","_nodeVersion":"16.17.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-fp0fXrZqddRm4YGBUu38GIdjrTb9jaxIxDyf6F8pT7+4nZNxKMSbyWjTLJ1ge50e/fiD/w+r7SvzjA2QGSRGbQ==","shasum":"abe0525a707d6eb11193c24dfb712b5b52cc0f2c","tarball":"https://registry.npmjs.org/get-it/-/get-it-7.0.1.tgz","fileCount":234,"unpackedSize":681484,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCTCtsMF1KY19Oc/waBFt+6QBhKGkxzTzib1jP7wpxikAIgOlUUGEeGaxxmPcCdGAWCUd14Prt+TZP/7j7fvwmhKsE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIoQNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoBGBAAj1PK/NG3cZywjEbeTyNj7A8Rv9seT5FDv9HJhigbV6Hl8zLd\r\nYvjKlFLW7ejqMrRDuJxi+M37i/oJJbkMQhs+7PNfA9EbeJQgRrBfl24y/VNr\r\nVlWSW6YoUPCxaqAo93dxXWGA/xhIj39RpARyWevAH9lElY5OeZWo2mfSlnqO\r\nuRFMel0C0ZUX2wpKkc5p8cudrqoKBZ+IC2MmSqmLQZJp6C18c54HzyHap4zk\r\nOHlk4YrtChNnbvQyTNybETz58Asl/0Iu+7SXh00UWPQyVePGjCl01ZEU5gMk\r\nYqlCeyzh76D/Rz5fq2Qu+SEyWTLmq7yDLcrTn3z1kp0wLfSgsQbc7auj9/Jx\r\nXyEh3FqgAWbO9HaW9xLxT6rjgXYREdqmBt3EaCgHjIERuHVo3jNG4ish7bVQ\r\nCQiqO5HWByGofFon7UBGqDnjuvaPM1wWFueOpueBPPfDGaJbbjXDewtBJ4+o\r\n8NNSR4lQsAgG3iymTj5y/icxGR5vwS/vGSV2f24rVIWs3gozJsU903et6uBr\r\nWMdhJuzLaTS/7GSZhJmwePBJjyQhd22TmCGj5WwjgNbP+KL2WFFG1HPyPZKu\r\nlgQY8NHbksYny8xCgG6Vq+1CfPAhTbRTmlqFuiDt8x9pXSQrcpp2FK2jLQYV\r\n3/nCRr+JhGCqPsEdjcignQnMSSlL8/op83w=\r\n=5nHt\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_7.0.1_1663206412697_0.593926165182711"},"_hasShrinkwrap":false},"7.0.2":{"name":"get-it","version":"7.0.2","description":"Generic HTTP request library for node, browsers and workers","type":"commonjs","main":"index.js","engines":{"node":">=12.0.0"},"browser":{"./lib-node":"./lib","./lib-node/index.js":"./lib/index.js","./src/request/node-request.js":"./src/request/browser-request.js","./lib/request/node-request.js":"./lib/request/browser-request.js","./src/middleware/progress/node-progress.js":"./src/middleware/progress/browser-progress.js","./lib/middleware/progress/node-progress.js":"./lib/middleware/progress/browser-progress.js","./src/middleware/keepAlive.js":"./src/middleware/keepAlive-browser.js","./lib/middleware/keepAlive.js":"./lib/middleware/keepAlive-browser.js","./src/util/node-shouldRetry.js":"./src/util/browser-shouldRetry.js","./lib/util/node-shouldRetry.js":"./lib/util/browser-shouldRetry.js","@sanity/timed-out":"./test/helpers/noop.js","decompress-response":"./test/helpers/noop.js","follow-redirects":"./test/helpers/noop.js","fs":"./test/helpers/noop.js","get-uri":"./test/helpers/noop.js","http":"./test/helpers/noop.js","https":"./test/helpers/noop.js","into-stream":"./test/helpers/noop.js","is-retry-allowed":"./test/helpers/noop.js","progress-stream":"./test/helpers/noop.js","simple-concat":"./test/helpers/noop.js","tunnel-agent":"./test/helpers/noop.js"},"exports":{".":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./index.js":{"browser":"./dist/esm/index.mjs","deno":"./dist/esm/index.mjs","node":"./lib-node/index.js","default":"./index.js"},"./middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware.js":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","node":"./lib-node/middleware/index.js","default":"./lib/middleware/index.js"},"./middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","node":"./lib-node/middleware/*.js","default":"./lib/middleware/*.js"},"./lib":"./lib/index.js","./lib/*":"./lib/*.js","./lib/*.js":"./lib/*.js","./lib/middleware":{"browser":"./dist/esm/middleware/index.mjs","deno":"./dist/esm/middleware/index.mjs","default":"./lib/middleware.js"},"./lib/middleware/*":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/*.js":{"browser":"./dist/esm/middleware/*.mjs","deno":"./dist/esm/middleware/*.mjs","default":"./lib/middleware/*.js"},"./lib/middleware/cancel/*":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/cancel/*.js":{"browser":"./dist/esm/middleware/cancel/*.mjs","deno":"./dist/esm/middleware/cancel/*.mjs","default":"./lib/middleware/cancel/*.js"},"./lib/middleware/progress":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/index.js"},"./lib/middleware/progress/*":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/middleware/progress/*.js":{"browser":"./dist/esm/middleware/progress/index.mjs","deno":"./dist/esm/middleware/progress/index.mjs","default":"./lib/middleware/progress/*.js"},"./lib/request":"./lib/request/index.js","./lib/request/*":"./lib/request/*.js","./lib/request/*.js":"./lib/request/*.js","./lib/request/browser/*":"./lib/request/browser/*.js","./lib/request/browser/*.js":"./lib/request/browser/*.js","./lib/request/node/*":"./lib/request/node/*.js","./lib/request/node/*.js":"./lib/request/node/*.js","./lib/util/*":"./lib/util/*.js","./lib/util/*.js":"./lib/util/*.js","./lib-node":"./lib-node/index.js","./lib-node/*":"./lib-node/*.js","./lib-node/*.js":"./lib-node/*.js","./lib-node/middleware":"./lib-node/middleware/index.js","./lib-node/middleware/*":"./lib-node/middleware/*.js","./lib-node/middleware/*.js":"./lib-node/middleware/*.js","./lib-node/middleware/cancel/*":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/cancel/*.js":"./lib-node/middleware/cancel/*.js","./lib-node/middleware/progress":"./lib-node/middleware/progress/index.js","./lib-node/middleware/progress/*":"./lib-node/middleware/progress/*.js","./lib-node/middleware/progress/*.js":"./lib-node/middleware/progress/*.js","./lib-node/request":"./lib-node/request/index.js","./lib-node/request/*":"./lib-node/request/*.js","./lib-node/request/*.js":"./lib-node/request/*.js","./lib-node/request/browser/*":"./lib-node/request/browser/*.js","./lib-node/request/browser/*.js":"./lib-node/request/browser/*.js","./lib-node/request/node/*":"./lib-node/request/node/*.js","./lib-node/request/node/*.js":"./lib-node/request/node/*.js","./lib-node/util/*":"./lib-node/util/*.js","./lib-node/util/*.js":"./lib-node/util/*.js","./umd/*":"./umd/*.js","./umd/*.js":"./umd/*.js","./package.json":"./package.json"},"scripts":{"bundle":"npm run bundle:build && npm run bundle:build:all && npm run bundle:minify && npm run bundle:minify:all","bundle:build":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/get-it.js --standalone=getIt","bundle:build:all":"npm run compile && cross-env NODE_ENV=production DEBUG='' browserify -t envify -g uglifyify lib/bundle-all.js -o umd/get-it-all.js --standalone=getIt","bundle:minify":"uglifyjs -c -m -- umd/get-it.js > umd/get-it.min.js","bundle:minify:all":"uglifyjs -c -m -- umd/get-it-all.js > umd/get-it-all.min.js","build":"npm run compile && npm run bundle","build:esm":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined src/index.js src/middleware/*.js src/middleware/progress/index.js","build:esm-when-upstream-deps-works-in-deno-cloudflare-and-vercel":"esbuild --platform=browser --outdir=dist/esm --format=esm --splitting --bundle --out-extension:.js=.mjs --sourcemap --define:process.env.DEBUG=false --define:process=undefined --external:create-error-class --external:debug --external:form-urlencoded --external:is-plain-object --external:is-stream --external:nano-pubsub --external:parse-headers --external:same-origin --external:url-parse src/index.js src/middleware/*.js src/middleware/progress/index.js","ci":"npm run coverage && npm run lint","clean":"rimraf dist lib-node lib .nyc_output coverage npm-debug.log yarn-debug.log umd/*.js","compile":"cross-env BABEL_ENV=node babel --source-maps --copy-files -d lib-node/ src/ && cross-env BABEL_ENV=browser babel --source-maps --copy-files -d lib/ src/","coverage":"cross-env BABEL_ENV=test nyc --reporter=html --reporter=lcov --reporter=text _mocha","lint":"eslint .","posttest":"npm run lint","prepublishOnly":"npm run build && npm run build:esm","test":"cross-env BABEL_ENV=test mocha --require @babel/register","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-net --unstable --compat --allow-read --allow-env test-esm/test.ts"},"keywords":["request","http","fetch"],"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","dependencies":{"@sanity/timed-out":"^4.0.2","create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^6.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^2.0.9","into-stream":"^3.1.0","is-plain-object":"^5.0.0","is-retry-allowed":"^1.2.0","is-stream":"^1.1.0","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","simple-concat":"^1.0.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@babel/cli":"^7.19.3","@babel/plugin-transform-object-assign":"^7.18.6","@babel/preset-env":"^7.19.3","@babel/register":"^7.18.9","@istanbuljs/nyc-config-babel":"^3.0.0","@sanity/semantic-release-preset":"^2.0.1","babel-plugin-add-module-exports":"^1.0.4","babel-plugin-istanbul":"^6.1.1","browserify":"^14.5.0","chai":"^3.5.0","chai-as-promised":"^7.1.1","chai-subset":"^1.6.0","cross-env":"^7.0.3","envify":"^4.1.0","es6-promise":"^4.2.8","esbuild":"^0.15.9","eslint":"^8.24.0","eslint-config-prettier":"^8.5.0","eslint-config-sanity":"^6.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","lodash.once":"^4.1.1","mocha":"^10.0.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^2.7.1","rimraf":"^3.0.2","uglify-js":"^3.17.2","uglifyify":"^5.0.2","zen-observable":"^0.8.15"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"homepage":"https://github.com/sanity-io/get-it#readme","gitHead":"b526c51fe58c1fead66792f63a3d59b3398b252e","_id":"get-it@7.0.2","_nodeVersion":"16.17.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-q4d+ssYtpWzC4/qJ4aJDZ5yWl94BIGmRER7PEvYpiKCBoCoDnl1YygEvNHQ2tHbD3GVZaq3QonKGi6Puh1Hzkw==","shasum":"67d1f5871838a40dfe31ea0a2b7e6cd69b70fb4b","tarball":"https://registry.npmjs.org/get-it/-/get-it-7.0.2.tgz","fileCount":234,"unpackedSize":681747,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDQFkuJmwG91hWTfh4kUiC1kj3vFJ06DAtDQCmJKPpkgQIhAKLlB3VKDNRmLlwNUF+Lzo2YklswnqIVR7CjekL1ZHbm"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjM15xACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr8IBAAjP0FTqrUW6K9J1dAU+ehl4SNTRC/YkVegHXrC9Kd0Wx5xUGe\r\np3xEwEV4qvty725gq3jdZXvWEKRot681WW/XWgvIjswDUTc3cutmqv4kW8h/\r\nfv+4kUK/+/vvTi+f+/tO3SeYuc0rHXwK4idzh2z1LImgC7b87ztI6tkHfRxb\r\nbqJqFwFQZiKdf+zKHX8Dfqd+mvVq3lMxdRMIJF9pwnoXy+afWA12euEOJKF9\r\nPE+vlN1svdM+pddeFb/aU34XKresmSRNQFxsbYiQb3x9Ug917ZyHDnFHdent\r\ngDIMI6Sjj46bdl1TYKYl8B39nXo4P5HaJlUh670aRQVcwIeWEQUMj7t9wn//\r\npO4X0bWHz1S9a3WTQ7k8gRIWIOJ55lLR4bQexBv49RtjML3AKl6NgaFbPVJV\r\nLybXdGJgn0a/6XDUBTHY+6WUZhhQ9Es4e9Ra0uaT28YaqgQmwklMSzLzIlca\r\nvGasW6wNO0Fg7N2QaQU4N/cRSJtY9XV4gWUf0Auw0zP+TxLiWTp2dVrwGfVW\r\nOEebcoiONvj19DH4CFsSxHPljNT7gGC7ZLvGgWRGvQgF5LpRg5T3g7CPhF2T\r\n2bPpHCKVM6FRxYdY/wLPrcUy0JTuIl15kpfPWjazr9vZbwVRmr/3ebwseL6y\r\njglpLt3TCuXV1EgTsE9/Lv4RSG9/cAp0OXM=\r\n=TnHn\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_7.0.2_1664310897362_0.48080363839552565"},"_hasShrinkwrap":false},"8.0.0-esm.0":{"name":"get-it","version":"8.0.0-esm.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./node/index.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"extra":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","ci":"npm run coverage && npm run lint","clean":"npx rimraf dist","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --quiet","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.0","@sanity/semantic-release-preset":"^2.0.5","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.47.1","@typescript-eslint/parser":"^5.47.1","@vitest/coverage-c8":"^0.26.3","eslint":"^8.31.0","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","nyc":"^15.1.0","pinkie-promise":"^2.0.1","prettier":"^2.8.1","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","simple-concat":"^1.0.1","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.26.3","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport getIt from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport getIt from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport getIt from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"8c5d29cfb84fad0c95e434f874cff062faa00f21","_id":"get-it@8.0.0-esm.0","_nodeVersion":"18.12.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-3M/DI11W84KFU8wbikAwWO/fk32tfEdwN4VjuUS3FBwhrqXZTEIHZDne5KWnkCULw7zfI/Jwf/rrtpYQF9j5FA==","shasum":"66b18e4c6812c53a6316fa23c961a05f8b469851","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.0-esm.0.tgz","fileCount":65,"unpackedSize":482812,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDisWXKPwrVZg+dInsErt86OVeqwe1vhbc1PztdxxSOBAIhALfRrRg38s1aq1+pATZppna2FjHfy8zUIIUGQMcok+Gn"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtMvwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo0gQ/+MSbj2tzATy29jbLTnOjpCBKeltmj8zLj+Qoa8hxenI+//ntx\r\nMX5eR6WZORNhXRY1oElNSjRSMmhY7okOJEkTcR+DHQud83mJaDxtBd9VPZmu\r\nZxe2L20IYjx6aE3asr4Rk66/RdT1wS24vxyFZWXTs0wyChzPHbAf5rHA8oVm\r\nQDBOY5NlpehQmWfdxfQ/yU7qp8Qc3HQh8oJLn/6kqHO+0neGCF/xFfkEbtPp\r\nIXu7mhOTT6sK0d9QgEfmnNsthm311RlDYSnTJmrgN9CBqsK0T4+SvQdkiNUX\r\nYi0RmnQs3YLmR4UOKMzuSaGgGRhATwsrYfLrztLNUcdKNypoyx9FrNtSifR5\r\nZrpajqFDrVCQSdORGlm96iaUxUy/7gprC30teD1R3aF9HSVGDfZTPVKPEesq\r\nFqv5WouMnkmItaTRBqsB1U/4uTJlWiAMpmiqg2hNzuKizhfXYaLCeAVQtKrP\r\nv3O1n0I11CPhpSftAYKgEq0k+Lktpi1gekTM1w/3mETiUBLypJg0xZ7Y8AJv\r\nVDYTDAzjaVqHtK0Cg+PJrHr4jkSHRVFCM3Kq1TqV3Gkug9UlCDnzK7Ggztdl\r\nr/c5+U/dF+e5JsCzKqiabskYoo7ptYeo+xSibhowrgFwhI+yYticiYOoIIfh\r\n8c42+wfXTu88SqIsqGEM02gyChP+f8Na5So=\r\n=XRlr\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.0-esm.0_1672793072087_0.567389935425963"},"_hasShrinkwrap":false},"8.0.0-esm.1":{"name":"get-it","version":"8.0.0-esm.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./node/index.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"extra":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","ci":"npm run coverage && npm run lint","clean":"npx rimraf dist","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --quiet","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.0","@sanity/semantic-release-preset":"^2.0.5","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.26.3","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.1","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.26.3","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)[![Build Status](http://img.shields.io/travis/sanity-io/get-it/main.svg?style=flat-square)](https://travis-ci.org/sanity-io/get-it)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport getIt from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport getIt from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport getIt from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"273a2af282da6693179deeeaa7edad858fd94572","_id":"get-it@8.0.0-esm.1","_nodeVersion":"18.12.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-Qle9Ap4ugiQRTln5sC21exWWUWPY00M0S0llG3rSSHV6m6G+ScBhADgt8F/0wiP/MqtKIAo4TskOGp9Oay7w+A==","shasum":"3be5c3d0934492170c059c93bdbddad8db22a720","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.0-esm.1.tgz","fileCount":65,"unpackedSize":483460,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBSziH6QFQ8NMWlUknQc4K0iPMqr38XLIpUVRN/80NwoAiB0ZM+S6BmA7jeizaAN+w5pQ3Z+JshTy+vpZiVzZL955Q=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtN7qACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrsJA//U1+xL0FI8tENK8sVJ2eh2SGqyrI9s88WfWQqUASA/4HOwe9J\r\nGw3xuQbsOk81pR1UBAEt4xnuXaVCO+xqj6C3jO0/mzwGBVHbk+jR2KdSSOmE\r\nByA1uk3Qx/TRrRpEdNEJGwtY8n3knercHIn8c7YLVmo/YUpcZVrB6YrGRC9R\r\nJR0XGUkbpBWkE+3EnOVKQfVCBLxptgimzO5qirCWJGj2Y2999ZH0bSgfjS3m\r\nLSXrbjjqXrF9F+bD0a91lGL4YVXHWM4dLz6Df51VVy+Ndq6Kt5AgtWAsIOuF\r\npNzQh8VcOvO5Zi6zuLXDTfXQdHTmPvi9Th9Evyl8tLvjglnuJkJ7JSj4+wYe\r\nk04gGNwN1lWlptHBPInJ4X+F+S1B9K7X8Y1Q4BVJ3RnLgfW08HN1af+ExvIL\r\nRnw623u+EREFxVyUml6Fk/NiCqSTTJAE8HG6UozYiPrGAlsbxNF1l03kL281\r\nVYifTpiP77voNlArdk53kDwbST7sQA6SvhgX2/SltQFbwgERt9CHw3mB2tZF\r\ng1Yq9Kwlch313KtPOVs/QFVejMs+WLdsSkyo+eWAmQwSx7NQcY1y6msS+q+6\r\n1/FNX9UVm54WY+gdtm1oMT0tyDkImRAUTfjNTQBFT/8psVn55rtr0mXzcDJ/\r\nNkeDboXFt11+0rDzLZTJk6FeZ6NCkuD4Q20=\r\n=tsHH\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.0-esm.1_1672797929874_0.4969178664497089"},"_hasShrinkwrap":false},"8.0.0":{"name":"get-it","version":"8.0.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"extra":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.0","@sanity/semantic-release-preset":"^2.0.5","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.26.3","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.1","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.26.3","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"6aff1d6b4412311d4e5e6c86829d0bff75a7f121","_id":"get-it@8.0.0","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-FTWS7w8jWVoyFh0g1+mXxJ+EeFuQiNK7JHxJdNOjyBrSugvrPVxc7HGvdnPdb/f33GPnwn3xSPqMITWOXOjPJQ==","shasum":"1b3bc438b811e5e6c6522cdfe455469da30d8995","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.0.tgz","fileCount":65,"unpackedSize":483623,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID+DmV2ypP47PmT0nm7aWLDXlaHm1P/PBTm20TDG2n4hAiAp0nuUBKpEKmuB2g/NUuA7iS6F5UOBrOYmlzfUCcmCtQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtXuzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpx/w//aBs8s9LTIV7z5WunKc1M1nFFnvuiReDsHINKSzQbaGzGRXFt\r\nsOGQfJv3fsFVAe2COMOmxkoafL1LrWxIvx1uvUqxte6uvQjwV8QlXBIaK+5q\r\nF5qEGtU92IVjr9V/OYZYUGd2sC34Igy8rR00kifqV5CW0YzGRL5c3NQhiA9k\r\ne02qXqH0FqJtNkY75pvLG9kZH+b1ysmdfBxYouYWwlrYO3XYUwC3EJCnWsPp\r\n5AU8H43mm40cJiaKrhNEy58IuWERAwoKpse2wLI8AJbZ90pjbbOEi61g02+U\r\nhRGdUxpJ9SSvWoAuTjJMdBkvasRQ9MttEqVdZtYzxwr0rAm5bcBsp7CeQRL5\r\njEjy88BfYK5oGMMY0X/+cIW3op+hsUfvjIfHL8qBJw4HiQdfJGlBm0eNoRnf\r\nq8ARdaIa3Idua9G+R6+/6BbI9ha4mD1YzOvMpBERfz/MNFxYcAv/A/M4QI2w\r\nrYhbrReKjhsr3bhB+VWMQSrwuFwm7aZbXxC/5TwH4UAw+SLLipPCP10z9ojL\r\nFFJ+wzY22LUsVJ+XtblFaH8VzL7M9ttjUeK4IqraPXMyzy5FHlpHbrOCICG6\r\npqP1YguFYw2JdrSYvm0xHktDqbjhX+L59woRxMIWn0Y8KAgMa6TwgAuICogA\r\nvaL2I5+6YxQk3q5ZaIixIsaUP1NXC0BXsTM=\r\n=sWgR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.0_1672838066754_0.09707207602780543"},"_hasShrinkwrap":false},"8.0.1":{"name":"get-it","version":"8.0.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.0","@sanity/semantic-release-preset":"^2.0.5","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.26.3","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.1","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.26.3","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"c0d8b1b2282844155c40e0b3e372f5e3401d5c6e","_id":"get-it@8.0.1","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-dqXQnMF1py5Y4LqWkkBS/HrWSoLR2w70YX6iPZqCzxIEThYpVG9BtBzIX45lSJ8NUrOZXKF1CIQr3mFzm3hybQ==","shasum":"f5dca8ee30c61a604ad2c57814fb4a0ab3fa646d","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.1.tgz","fileCount":65,"unpackedSize":483637,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB+5htjuE1PrxgYSa1onuGbzBGjRqsQGoDxzmEGuEh8HAiBvOQx2WM+dJ3w3dNX79vDvPVNiSDNHeiXenr9QwR2hpA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtbU2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqxkQ//eVUhMPaqY/3u7htVS1gFjsJQytAZRbyIsbmNuV841XMfQ/Xw\r\n/xFTsrcdFw+Xa7cQzaNvgiZdoIrHVuDLjm2s8ZQYoGyojvDngBiibm1QFof0\r\nAFH8itEkXXDh+wLb2nGR7XjUBU3YxJG4kYU1iHnlfmE9phkRYyOUEhKafwRs\r\nYhgDbGJqbFHrAyGI9Hw7SoMEy0JlgpU0DiGq4nD7tPmppqQf5sddETso8JlD\r\nnIkHSyjq4I+I2sF0nKX/84F6/9LzK3zEIoGfFtxYADL7l/wdPqTPAXg8FHRp\r\ncNtYDv4B+/5yr1LQxSTODMT6yeB/8iu/GkoPKgC6VVGI/zaXvp2ey5LiRj7l\r\nvO5ZDeFguwwIV0zv+vZrpRKwj2AlXlGXVor2TDggfz7B6/8+HwecucpiOvN7\r\nZ+iMa18SBZ6JF9Sk4/dlAo2oIoM4oej7sio20XrQptE4cth/k0JGvpy3z0bf\r\nk7yDdcxVWLFtnZQv2MIOo+Oe7Y5nZhP4thGQf+qirNYjbVTTmv+SZ3NYqZmj\r\nzH8gJ3F3YkaQk1eICioT08xYmTeBc9j/hKOjymOspJ7+c/q6iVvR9DnXPat4\r\nfyVdEOg8QBVCP4Zd4hiEiJdRFa4iuDciS0mAq8BQ39j3EljSUJmByapg6A5a\r\no2/blNPy6y4KQW4MR9pEpC9KvQeS0XjCU6o=\r\n=5a5G\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.1_1672852790026_0.6003037060210019"},"_hasShrinkwrap":false},"8.0.2":{"name":"get-it","version":"8.0.2","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^2.0.5","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.26.3","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.1","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.26.3","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"e90d9fa3cdfa3e71fa678ef7e4e3c9c6640ad989","_id":"get-it@8.0.2","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-ArjCm0n+pZlrIunPjAekoRdB4K41hW0iFXgF3mCLLAhKWiBb2Q8vTKtV5zigYnLi0gjejU+FbByL06s9fltHGg==","shasum":"8009ded13b8093dd8b5db3d9bb2aeb2d4dcfe104","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.2.tgz","fileCount":65,"unpackedSize":476626,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDVULP8bsBIpCYyPkIsO05PALv/umy85qrBTaNObNqoqwIhAKjMPOORSGqVF43tJIyPmcojV0xtujPkz86cInv5Nrby"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjuH+oACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqTfxAAijXANMVY2V0/G2e56Od4F9SkvAnMJTKSG5DQoY3Re17DD+f7\r\nyWlIWJGAwIyPMa1K61blqC8umNrLsuz8U0glo+Mk9MqeLYwl7wS7metcqa1C\r\nJFBeRgKX49VxwhtvIaz6kmQB8rnmd03l1S7sbgkCPOLorkkZtjujlOgT1Ame\r\nUYgowRLaveUKXh06uHfkSxeCJ6cDKCGExilcUwXcCLqQ4J6SVB3AhBEeFxSK\r\nuqS5ehq217oSXQg2Er4UAurceuCnK2iyi1UQIxTvLWgaugdEe7xwVP/I86g6\r\nt88kxnwtnZSUL8H3mdNBa6fxk7VamNpx/NXqNhXbUyPADbTImSY9lEU64inp\r\n8Csc4MNvWf9ECm0Hy5CG4PGS/ODg+cCyu2OcMC8c6u4FVlV45n7BV4SSFJa1\r\nS7s84FAjTP8RWCiLItVONNair38mrYa700JZKX2AGNO5vVcFwatBbHVM/r70\r\nWzj4xs3AGeEV8ePH2eEsUmYGdTpD3JNuhMxyGz6tySHsiQAo74cRs7pGoNu5\r\ncHB3mZe3Q8cuC5D5fPAyRQxGOxSJz3wQ0G4ItHlC/zWu968+OIeVpDebL+qg\r\nsiRHELM5qcWMo+p6fuE1cMsB+36FFYD4wB9O6Ug1rx9/QyfuQCWvXGWaCPU0\r\npLJvY4IoopMaxIkyoL1idZlU/pdkyus4z4g=\r\n=Zyr1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.2_1673035688673_0.3386037946599749"},"_hasShrinkwrap":false},"8.0.3-esm.0":{"name":"get-it","version":"8.0.3-esm.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg)](https://www.npmjs.com/package/get-it) [![CI & Release](https://github.com/sanity-io/get-it/actions/workflows/ci.yml/badge.svg)](https://github.com/sanity-io/get-it/actions/workflows/ci.yml)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"0b829241511e9b23cf6964feeca2d1cb3842c4ec","_id":"get-it@8.0.3-esm.0","_nodeVersion":"18.12.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-RS6BKUugL44rAdoZ7UfP7m+2ZP6EdO+EWFXyK1LfJePcR6LHYny40eHOQo6cUcYGPSFQm1K2kbvNR/KLlPOVbg==","shasum":"bc4ef89ffbd7ebb9cc4094cf3facf162b7120844","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.3-esm.0.tgz","fileCount":65,"unpackedSize":477220,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICbj98kBlcRY/xDthulUe0rxMUZnETM7SWtOIyuGkc+fAiEAmsKQoPGB2miMwnB5BBgnuL1w/YEiSHbOY0xM0sgnIMk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvDdTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmod2w/+NmRGsfoAgSBYMnxWnF7pCNdTO7i9x8Jb01La2wGsmq8KTqtX\r\n9L9C2V7cSS4GhDFExGHCCVs1y1OhYnQPXGLTO7ULtogkAfNaN6fBYK17PQ0X\r\n8tEKvXFRGOd/GFRKfiVX/wAJ78td4xk3Ahj6gNQeq0RNzOmMVmaYh9saJ88K\r\nv83bVme7xAWMuT0oirrtFUyUXJfnIvAI+GhMK55Y3DByV+cBXCigS4xNjFwp\r\nqGyBiMiuFjNZQxqLBaI9S12she8N9+k1kcX8ui4XDxdVV2PnsrPIcVOxbi/y\r\ntO8A2ymciftagW8PLIY8hR2hmsKj2vNhJ/KQSXFKT3ctvbV/WO2Yqke/EurE\r\nME+0WjNuO18y8CvH9ZeJr8Gy/nXu/UDrx/SqAyaCywv+sNLcS43v+x9fUkTk\r\nBRlnV6JrQw5RQo8Zoq0DkEnon0Yqu3oJA1mBEDxl2qd/nko0B8LNCFNoAuFI\r\nc8pHjtlz8hqiIugYVcnhMCw0su+0t664mQF8f6c3wIB0oKvyZeA3e/fH4W3m\r\n+c0HglTvS7WOe6WBkR2BySnNapLeIzBGaIhbNLm7ScFP1fLQ7EYvqDSHmIpn\r\nxxMbekI+G4mEAODaxnPNM2y2s2vAppDibSacc/8uXrYwy6rKqSDRzqsUOYAj\r\nK6KsVfZY9ZO7SQ8LhXFy9XB03z3ornbOCTg=\r\n=h2Yk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.3-esm.0_1673279315021_0.015296836386938129"},"_hasShrinkwrap":false},"8.0.3":{"name":"get-it","version":"8.0.3","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest run","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-esm/import_map.json test-esm/test.ts"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","nano-pubsub":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.0","@typescript-eslint/parser":"^5.48.0","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"16b2decd66c9ffbae379d080d2cf75f3b1fe7d0d","_id":"get-it@8.0.3","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-RaxOIR8rdK4MWSglp2hWNMmm9re/1cgj0gBzwfFPWbEZKVQpBa3TbekQQYvuY1fZcMo3cdZBUBKxi6EWnzXKfw==","shasum":"f6b39ea21e4da1136617e850c720a005a028cd6e","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.3.tgz","fileCount":65,"unpackedSize":477214,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCxSvOAdE2BTHoocnLGEGXuunhf/+xoZcYQVQH20KNXKQIhAOa4jzaCYbwJF3tLmwuCVb94GgrIp1IEKgERI3YGHLhQ"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvDjuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrSbBAAlZNLaB1NF4cTBngSjkQDLxcJ2teb6V8WI3496dF7kfiJSzlj\r\nicm+eRcxCPb5feV37COFHnn+wRnHYbDK6XrntQaDaPsVS6nHylLvqE4lWcCP\r\nRVRnktHYWFs0XeFcwmF68hgqlAnx72y+QNtXvb52hlQGBpO6iJATJICQE+/C\r\nnbVA9H7l4Rxic130eGbrpurZkncZYOza8Mi4aIC+wI2rH/CnZZhywbDjSARI\r\noSiMsVE/3LddU4/SqetlVsb6jGxwNO013bk/FQRd0V8ZHD2ZTRHxRM9hl0tJ\r\n+7lNtCwJR6ktSaop1uIm1ysNPak6oS6nKBCQtPqsfhc5+TbOlP0VDn5dfeM3\r\nzZ0/nc5jR2nX9A/dnWYsZmo9T59K8lc66NnQUaGFrOlUfdCFPMei/HDwHKFs\r\nU0nISRJvWgauSzYhpXasa0uRMJvgXm9s08cusbW3E9+Sk3RQywyfj8f5Upg9\r\nqbPZkC0K3aQ+43OAi3+DLBCsKynNqKqp7DutUjIeq+4gI+n/LNLcH6il4F0B\r\nmMn3k96XPCog/CX56YOenuQz+dPZaeFTnXlpSYbVW0ISDpFBfzxtKjPA8Ie5\r\n1JSVbwhR4xjKYuSX8pighm1SiaAGCORsCcBxaYow229C/uNnwSyZPa0MgEP+\r\nYTm8tKvYQcrhQV/T7pgGbxb8mqEDyMN/uz8=\r\n=b4Xp\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.3_1673279726681_0.9983282334327375"},"_hasShrinkwrap":false},"8.0.4-esm.0":{"name":"get-it","version":"8.0.4-esm.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","same-origin":"^0.1.1","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg)](https://www.npmjs.com/package/get-it) [![CI & Release](https://github.com/sanity-io/get-it/actions/workflows/ci.yml/badge.svg)](https://github.com/sanity-io/get-it/actions/workflows/ci.yml)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"f740021a111a8f8a28d85de27f461d137c36e4fe","_id":"get-it@8.0.4-esm.0","_nodeVersion":"18.12.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-iousCc45hUGU8aXPbCiqO/v5/vik8mkcAyhUBzN6HDMUUS9+e0vMYBeHmnBC2KT6BzPJ9DNpUDT96ixT3rwIAg==","shasum":"7ae7262e890d16fb5f977342acec07ff4277455b","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.4-esm.0.tgz","fileCount":66,"unpackedSize":484925,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBxi+y5xL/nf4zPktUBov81Mx2CQEj2WFHvJjbAncbB3AiEA3QRKwMSBBraP0AzTVXVvSizWRdL2bnnZuGaNLVPdRfc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvPoPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqmCQ//USuVSNIAO578IdPfOvZ9HOySPD7gjs+F6xxD45KOfbwWFBmc\r\n2stQA856XWAHhBEWoiM6d+bGwK3Z/G8VxbJRRwN1Lj7ZEwfmhdTYASDXIGG+\r\n0H5VTeGpIYhkzV07EXYQ/ecxWFt2m2rl5TxseWxV9bBLVQnh14xNBdhPAh6v\r\nP8+GGv755F5UfzpCcPDsQMpsQrjcquEzqD9ubusTRIABKz3oEcIAl77Ld1/8\r\nOQGCFnp6MYqiTbI0ysBOqCZ+ijt5n5UCKxa/UFu+5gBNFn/mr3qwoywaOhj5\r\nH0HII/2HBkKApBsJh1k4JiwpQiHrx5EsPY4X/IFGHpP1lW3TCfdBw7PwQ7WA\r\n/9lx4beAqn/b9w/M7QqPGv42+g2eWHPieG9U5DoZy/WJm6EQNc5mZRp9ZFxS\r\nhDBAeW+G5X42ky9dcmnv4B5mxgunxNU1L5vW94xop4EjxCGDzNzk1V9/dqlm\r\nDk6QVF785WZmwkWFwHLPWZLPfN2I8xbhIYr1ibo6TukMCHMDHzJmxiK0DJLB\r\n8S54Q6JMMjNdMgdA/MEUQuhLk1w/8vn1Aghej4vxnBipd9Fs02aDasClEpPN\r\nliS4ZyJwJqie8QWu9VRHujhIbZNGHEhX5acH6BcLKckZrhIoW9m98EY6YYF7\r\nFujBXCdPX7q5k1OL2Gm8DXzaRy00mZ3HarY=\r\n=Ek9N\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.4-esm.0_1673329167687_0.1318021813147381"},"_hasShrinkwrap":false},"8.0.4-fetch.0":{"name":"get-it","version":"8.0.4-fetch.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm version](http://img.shields.io/npm/v/get-it.svg)](https://www.npmjs.com/package/get-it) [![CI & Release](https://github.com/sanity-io/get-it/actions/workflows/ci.yml/badge.svg)](https://github.com/sanity-io/get-it/actions/workflows/ci.yml)\n\nGeneric HTTP request library for node.js (>= 12) and browsers (IE9 and newer)\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n","readmeFilename":"README.md","gitHead":"f740021a111a8f8a28d85de27f461d137c36e4fe","_id":"get-it@8.0.4-fetch.0","_nodeVersion":"18.12.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-L+C+YKbFbNmjDu+W2D99fAvVxzaiwwzIhx6kxHx+P1DxFwEMEiphlXOqnmyhvYY4aQ+o3orN5lA0eqCoKhrWMQ==","shasum":"8f8edb6d475e33e7ffbf4ab99a15deeabcedfe7b","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.4-fetch.0.tgz","fileCount":66,"unpackedSize":482925,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCwXjJDaOXH1xBh4us1y4vYN1FQpx/bBMlrY2cOd1jbBgIhAKODGb+bGR588wsaVabaYXn+L5OnL4yViUxhofat14HT"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvQocACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpnqA//UNUDd+53gwxtIwbifGJERhkd4GM+NBBTR1rMngDnEerBoSoY\r\nDS96XEwh8QZK84QJB0wAkYK3PQeOKD7pfb19tr1cjFe7a2TLU+drRGAQIG8i\r\nCqADTdG/3l/MMlzi4y6xln65TTHAabz+osLIS7f5RcDH5eY+4n/RjNFsOlC5\r\nFpFTAdXveTGIshDg9abmMvSiiTZ2NIO9pziTkeymd/okwRS1bEFrEOSjfeqN\r\ns6I6CnWicbPC3NEqeya07FIVdzylVCRR/PA1Izy7WFL4m75KYw01O+fmHFCc\r\nsP8DdzxmUkznDDe9VtVWRc9EI4K+VmnHvhluKQl2aNMWI/oMpkETh3vIw8zq\r\nVvBlZLvIrut6JPFZQXdYqQrv8ZasxxVRntNrirRUxNK2XyaiXIRXYY68qxcO\r\nn4g3WfS7iGhDByGbi42HAxeLjX+POExIQ++w6IuNVmS7/c7Pgc1KhW7aL6zF\r\nR2WZJHD412jGAfNeUExoxaTGZckXBed5vo1+vGN1ZBMkoXxGBIJSY9AhNXp0\r\nxtPN9+blo0hF6kse8ohShaMu0cgHt8nRHgBDjsAw2Y2oAtuBSIGyFM8PvAEs\r\nmpjCg8mZfeeWS96gyTxlevv1dvFIXRTYVz196bdeDfiYi/jI0V9eL/FCcRn4\r\n9aVes4epCmupw8voevCfIBEBSVJqwUTYE3o=\r\n=FFFb\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.4-fetch.0_1673333275847_0.7609580186016129"},"_hasShrinkwrap":false},"8.0.4":{"name":"get-it","version":"8.0.4","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0","url-parse":"^1.5.10"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@types/url-parse":"^1.4.8","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"6ca7887d4cf0e25b1a0055d13c5ecfa319f2caf8","_id":"get-it@8.0.4","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-F4Aq9Y0DhUNwt84KumRbSPEag7utHJH3Fef26gk/qaA2LINA0SBvm1stAkq1S4zKaJlk2Y3iJSh38p7cRQA38g==","shasum":"6d242016925ac00c3c127cb7216c601988b550f4","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.4.tgz","fileCount":66,"unpackedSize":482917,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHJ3hSlfhdaFEvsTCviYGi4C7PaMCzU6iUQDwv//hcIDAiEA2xmq/hEVnYBX2Y9ipQ41VYMkP35SqtI0N+JsD2pq5/E="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvRDnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr8vhAAhn4KI/SmHsAtJLb8gHFjP78w/ergFXYlOR5m0yAr60tKvC7e\r\nxtdFbNrv49Gtyj10BB+yj5wwpj1GvgelpuUBkhp/45mvyR7AeuSb9qVWGLOU\r\n/yiZM3BcR06bnjX9amU7M45tuIO5C6C+IaZSC5Cc9iQgeLv/4SURMzaklI+c\r\nKIRV0sxbnwx3VfFSeRru45SwWw5Ll+VC+azjf5zur7dfTDeAnOlxYjWXPUBg\r\nWhiIMIKVtrQ84YxxfqYHo5p3XVAkXeZOoZQv0w+HFYQo2Z/8V7xJL/X2+u6I\r\nMs+4a0H+GSyk08tpNG0DGeGCMxws1wX0pxsPeEZsyDX7QxHEGVVZTIqCF+0u\r\nuPBWHRw9cifYQk6RTunkD+qBrgytW9u5WNXddgpGZbCfz+kX24rcXVXZ+zc2\r\n71j4yz8XwGkII0uq6Q1jKv65zgF9aBTcG/TuueSdpkjZMmfNvIIFBLZt3a2m\r\nKyXxXYfyhtpATHHV988+fbia5i6oN81nm7zCF9IAEbcgq7d8mxZijvK/OyK3\r\nE4sujgpFb65xRQtjtT3AtK7TGrRgofAIJsGzamG1BhoqsjUR7ebjwhFBl6uH\r\nkOGUwrXaCc0VDmF63DxoH5EmoBGXRMz7pHV16RzXGdYTgX2xdu8ajj67kHPI\r\nSV/f1TE2HQylep1J3EkaSbvheaeoxuAy5HY=\r\n=rghn\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.4_1673335014722_0.1893851666464066"},"_hasShrinkwrap":false},"8.0.5":{"name":"get-it","version":"8.0.5","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.1.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","@vitest/coverage-c8":"^0.27.0","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","ls-engines":"^0.8.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.2","prettier-plugin-packagejson":"^2.3.0","rimraf":"^3.0.2","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.0","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"112fede1a9dbf4ae4ea66c9329db0b73ced8e0de","_id":"get-it@8.0.5","_nodeVersion":"18.12.1","_npmVersion":"8.19.3","dist":{"integrity":"sha512-EbPrjN4FaBT2K8dS+oNNAMJBBGTRLYaxQKaUVcjp8zr0zgyD+uMheET6Uw3zjoiaI1aKTv2tuxna7+o9vTcSDg==","shasum":"f04065496305e39e808aec4cf51362e82b9438ae","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.5.tgz","fileCount":66,"unpackedSize":479817,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBX4O3fx1FP306poVCNHd+y7k0qWrXoFNMyfFEAul2R/AiEAinLHhR8V1fSfz8u+TFZZOUeefqygWedR0GRmajjDzDo="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvhpTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrIzg//cT8W0MijnMAl+KFz1HGWylVVvPL4l5K5hhJvKx/b4Hx9mV0u\r\nD2ciQzvobM9rlgAexpBW2U0oIb1OGAln5hme81iiR2VuhmipkGUYr+pah7Fn\r\nKaNYE0AfqMc4/AZbRFIRKd9K5jhmUe5CF+jKgd3GofDlo0m1FDPmOtOszGn/\r\nEZ2lHSF99Ab0GA5cIPbQRhLgoNfgebCdvLpbmt9BRmvaTAGNLZILxiOQ5H87\r\nRmCXMJcyPvhzbw0vvynQzyH9Lk059WqWWqadqdCid4vu+U0wXXRmXMG4ZaUK\r\nj8rNtrR/7ehsY9p8xDixuL99dGi2UEwItso4djGTwA0hl4GsJ0gROnoiEvTg\r\n30uLlAJ8m0PpXrAKeQSGDSC/I3vJ8hGViI7LbPrPRATwl+Hhkn556aGTTKI4\r\n30ToC69uZDr7Ji1Ora5sYF/SVdPUrT2wnZKLoI0wTspHqr+dR0YAYqPRw5V/\r\ns2rkrFLrT0az7Asjv6Al+BvRCPqzC2JwxNFntH/MtehTrhvAHi5erNwX5HOx\r\n+EBt6WgpePLNbDLNELNRfy+k2PilDrsYCDeKUFo9vLL8CbibRtYtuI4YQvxM\r\nV9kdT/jhWWKSe42RdI8utTEkpcCe27XIQrdYecI+Glfpy1OwiGUiXBuBqYKr\r\najYWpWJv8FurxBMzY76STbVWJV5dp/nQA/o=\r\n=xUcB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.5_1673402963716_0.023601785570015688"},"_hasShrinkwrap":false},"8.0.6":{"name":"get-it","version":"8.0.6","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"create-error-class":"^3.0.2","debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","form-urlencoded":"^6.1.0","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.2.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.48.1","@typescript-eslint/parser":"^5.48.1","@vitest/coverage-c8":"^0.27.1","eslint":"^8.31.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^8.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","ls-engines":"^0.8.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.3","prettier-plugin-packagejson":"^2.3.0","rimraf":"^4.0.4","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.1","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"ba07d52cb74cdf5a2e619c2b765c5fc62da39bf1","_id":"get-it@8.0.6","_nodeVersion":"18.13.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-rLo6pZN2wOnRkfCxXfQE8fKW1pntU7DsO2LiD6dtRMm9PkeDTXPdQsBMam0ncCwFwONklo6hfgr11Dpc1JO7og==","shasum":"8c85d905b8b2007875cb5aeb25fad96b653ef1f7","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.6.tgz","fileCount":66,"unpackedSize":479875,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDKUiYNpPWqS3r+5bVPQJ4PpKsLlfuQidDG/+ou76ihUAIgJQFkPlWOpyfZYfHR0g9rNCdfwm8lCi7MYuD6Xt79kMM="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjwoKxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpEPBAAk8EqXwje27D7ufL89jtaLlWp8PzChCtzSlHVEgt9X+RM/00U\r\nZsptPpXj+o/w0mg5YSjKdZDG0ridwUg7iJU/jCaleMhuzfiLgsWrySho+XAL\r\nNKuoXFhYvX3iztsstR2VCm6FJxHMAPi7FvmbcVD9o1xfFvv3vTyb7KzeESQt\r\n0+hjZ5h05bYbBD7Tvxf1LDr1Qx8SCtBMI4RVe+Ivzf7fO4lSQiaLRaYPRxhq\r\n8AHM+HTYi9vjijeLNXqXuTr8L/sZjQfc7BcKNX5aw603iKeDkHRYfDVT64wL\r\nqwV+bdrIYnA6JxKvBCAgJP7jOcDXKcdaawKkLQu2La/WpaTJvsw/hte+/4NT\r\nbfmea0HK4PNh05lRih77yBsA0PsFiixHd+QCjNUe+w/A3GXXbk17qhLOacqo\r\n4qtgVgrjv97nf5nl/jNeN3UBoPZiu0ZquUbZUieLLdPFKxRUGSLbjkLFgMHt\r\nuI7x7tgwcGp8TcuEgc16pwR4ojypBDpEiu68BiavKTSIniXqOEoZXU0rHnjK\r\ng5jPlQe4f+B/5bQBr+vZRJvJy0XmRERF4nDf2sw6tnfTeAQjnZZmHQ75sSek\r\nanK6iWvSf7wYQNpDFfAsAzXSva3/M2J0hS8bre43L19b6Fjg7HbP3w1GDm7z\r\n/iKHcQjZs/WKCIPaNVLTSYKdORIKb26DLlg=\r\n=DMHs\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.6_1673691825624_0.7643217511449194"},"_hasShrinkwrap":false},"8.0.7":{"name":"get-it","version":"8.0.7","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.0.2","@sanity/pkg-utils":"^2.2.1","@sanity/semantic-release-preset":"^3.0.2","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.48.2","@typescript-eslint/parser":"^5.48.2","@vitest/coverage-c8":"^0.27.2","eslint":"^8.32.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^9.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","ls-engines":"^0.8.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.3","prettier-plugin-packagejson":"^2.4.0","rimraf":"^4.1.1","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.27.2","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"e75fe11c8e3058871adde4efaac639434af0ede4","_id":"get-it@8.0.7","_nodeVersion":"18.13.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-KJfk/fca616DupUJcpGXypyuaEarolI+u3aXWmf9fyt54p6ltv9vjOvQ42gQLZmZcaJxd3W8kFJ4J71vMgpcRw==","shasum":"8c5e905a5ba268d4adccfa59448ad7032610ca4d","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.7.tgz","fileCount":67,"unpackedSize":488062,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiVuInIx/FKeJjha0+FeuNVpmaSTxFEtFA018Lmipq8AIgCxB0GokvGjOedxXtb13XgFuhZFWTCLMYfv4oRuZCB5c="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjx82UACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp1TxAAk4PoSHE04N0HH8u8kiBfIWRIwvOpUkGYgSXhg8lMoTm2kp6g\r\nxUISPgRhSWdCqK7qrIcqVVxPmsnc4W/Bc6uxQ0O9wrWKjJIhy1ZlkprtLF8d\r\n2NQ3b26Vn5YSZxWxQCxElNiBYYYbeGwN64i29qFAiGKAobPS1qxxGZZzAmDb\r\nv4I0dTasFJbVkDY8XBhUNoDC+qG26Va+x5g8jivfVIBvI+MGG/ctOYGsK8DF\r\noZd/w8nBUNpEiVzmupRQuY7Gg2s3a2xvYxdfF4fOsGOowSV95Bf411DHCcHS\r\n2TEUBpSZ9ywy2NMbyfI2yiamlsLmqs7cTE2/b7tJYsLWQF9r3ODBbV/TkQIf\r\npBNuULS9y5WKQMtcqB89cCvL9YZt2J90Tr72YzvGUXL+DNTKRiFTjBQkb87a\r\nb+xcFbUCHx0XbWStPq7puqWHK4Y946HREiBBSFRJ3tMYJU9SBZVzTyyupY1l\r\nFdu/2tNAjvnFc/tznP1bl9/a0ZFxZkL2xQdZO4TCbBesStkZFpac8ZGUckSL\r\n19BsV1olxX83zCFLxfgEpn1NNyGupLS0PwEUtYrjwPUjrYkADtIac0Vs27b8\r\nK8xbPaSRPa9GD6TyBPZBymuLw96SI4XY/2cV0rJlrvwa5kQhlrlbgJ5Njg/Q\r\njLhux2e2asyQuXx/luDMBg0eAMqUOwFj+uA=\r\n=j2se\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.7_1674038675924_0.1247807873519644"},"_hasShrinkwrap":false},"8.0.8":{"name":"get-it","version":"8.0.8","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.0.3","@sanity/pkg-utils":"^2.2.3","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.48.2","@typescript-eslint/parser":"^5.48.2","@vitest/coverage-c8":"^0.28.1","eslint":"^8.32.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^9.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","ls-engines":"^0.8.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.3","prettier-plugin-packagejson":"^2.4.0","rimraf":"^4.1.1","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.28.1","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"206a12ee5e5afedfb56a91d761a29e6eac5e234c","_id":"get-it@8.0.8","_nodeVersion":"18.13.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-JZvILmwaCdgNC8S5H++yL7Wm3KLcyke76G+4bQeQZ+Il9A40EpD/d+0UREyc7Dvksq2w4Yj3XT9bDf9TqPghLA==","shasum":"ef397b759fd0a33af8a80e201bc504ce1606e350","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.8.tgz","fileCount":68,"unpackedSize":488237,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEjVUcGICaeSZIblGifkqProeBQ0oQiVJmCqCf3dOmksAiEAv5+7cKi0CG5n9VbggiLMMyb+FtHenn9nUn95GdP5584="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjzpgFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoR7BAAh3a5pWQMJKuz8WlFF9PwCoCjd3tpTk3jLK7o3gkFHAV1VarD\r\ntR3M9ywovv0ct0DCVDsRw7+RGw/BdQ/+ZQDP6o8wZQ74LCAD9T6ueG6TFRno\r\nmE6e7UEyHZKBEZXbXT8ovPchjL4U+5pZI/xwH9twnzAkdBh62SIpyFFj/0eJ\r\nRvZZj9CXUIY7S5/VfUL1uYL8EO4Ks6j1zkwUgwF3FuDbQhGw3l2cl8cwZqyB\r\nJHf1e11iTZ1D8KYo7jvSIWAtYgrBM7WNw6PxZSQRnz4TTFR2zt8dt7K5bzFI\r\nH16vgDypf1Eaf1G8eJQlEYua+Api4k+3OAJk3wNNUl6MfUfD2cobwLOw86Tk\r\nipwlQdKkzH2huvhpM9A66nph3e+7+44ayLzOv9xsRdtX0is9x9R32henLf4K\r\ngZ+7/TbALhd/mqp5efxNb8tsvMfOi0z7wCmHYeK1IEERzofCvQog8691iu4L\r\nLoFLHRBlOropy9luJzak7ar1HKutIIykI2RWC86+ph4jxfV1vksKF7mTr1Fi\r\nsG3nXrpi4BN91LXIVUeQgmmH2YMqqOmc4ojyrf+7cmrdTPLxtWfx0FEAknPy\r\nT64wqzVcpU/vYamlscP5fzYQRGqZj9sqz9iMOjosg2MXaP5z3+hoqj40hz53\r\nT8Qi+yZonAGi+csEQhRsGxgU6+6hcpJkvt4=\r\n=GFYR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.8_1674483717149_0.5974648481495788"},"_hasShrinkwrap":false},"8.0.9":{"name":"get-it","version":"8.0.9","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.0.3","@sanity/pkg-utils":"^2.2.3","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.11.18","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.48.2","@typescript-eslint/parser":"^5.48.2","@vitest/coverage-c8":"^0.28.1","eslint":"^8.32.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^9.0.0","faucet":"^0.0.3","get-uri":"^4.0.0","ls-engines":"^0.8.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.3","prettier-plugin-packagejson":"^2.4.0","rimraf":"^4.1.1","typescript":"^4.9.4","vite":"^4.0.4","vitest":"^0.28.1","vitest-github-actions-reporter":"^0.9.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"311932d67461c221aca653989e9fa9ed29e5855d","_id":"get-it@8.0.9","_nodeVersion":"18.13.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-Nm54soj8MEXTmkzAR0iWGP/TCAfsueOOWzBTvTB9ch0ubUE/5FbV7tAptbmsYzpk9QzA6zhcadqTCwP3prRfHw==","shasum":"e48c1c826e6c72074907efb08094215d92ad470c","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.9.tgz","fileCount":68,"unpackedSize":488253,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDcQ543JJZe+Jrh+cRoAzZgfYXwkZm1I3dcJ6CRwpMzYAIhAIyd0ThZqhOHm5ONJA7OYLBAPLLXxsHm3lOOmjrByyc6"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0bP1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp7xg//cNSgVY+ANuhuOLa/F9LdiKEGxFc54IoWZmZ7irE+yGj29bXR\r\nOUVuLz5l2eOyIx9yiujbMPHLURv0nBKlE2laqbs9NUXQcWQ7Ij1scEWf/9HM\r\nL68kTMbGcx5v8e7QbbFscoZCZJStSnP0OfADkzNBE+1HC31q/1oTct23WajG\r\nPPHJfqYin6yngbX+nGDfSBmf98eIPQsEG3C2Ri1IDYPu09Cpb4I4EBx8XrsC\r\nqbqFuEvsOEi5eA6XSc9ezXD5nc2DXxk/4kFKxpfPvn4orau0ndDQ2efCdRzv\r\ngS52QR4r/+zVmcjB4IEnq72y3geuIWPCJ4NYO9O1TBYhBzWDpc3LJmVqXcB6\r\nlzFviowBJ7je9QmZQAaPEfl/v+vMA5uGfCsbxLSdrvzCayb+w8TC4FSeuVdu\r\nsfKaIwzPBfmO0LqhgYyE73laRAUGBzXsutxCJWWuv9ZJqlGvQU2/Laxs0ZhY\r\neZaBk2JNRzJhglgz5CLP9yVsLUPXVnFUntVMk7sAvuELpsVvmmba6R6AfEmJ\r\n6wBKL5Z7fIUm70bcOP3n37Jn5mdCK3tmwdiaDg+VZ8cMxuIs9DuWbYjaG8KW\r\nbmZVbiwz43nFPcmmQMchykY9Jy/9C0wyvcW3GLJKslvLnfmsdlgUtU21qBSS\r\nb+b++qti7dyHFcdI8oZsyqdeCAiuWY6Tsf0=\r\n=oix1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.9_1674687477307_0.879036472067728"},"_hasShrinkwrap":false},"8.0.10":{"name":"get-it","version":"8.0.10","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.8","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.14.6","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.54.0","@typescript-eslint/parser":"^5.54.0","@vitest/coverage-c8":"^0.29.2","eslint":"^8.35.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^4.0.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^4.3.0","typescript":"^4.9.5","vite":"^4.1.4","vitest":"^0.29.2","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"d550454d79391203c15ad56f5d7b5243c6b42135","_id":"get-it@8.0.10","_nodeVersion":"18.14.2","_npmVersion":"8.19.3","dist":{"integrity":"sha512-eCxOpTaMB0Ziei6Ra8huJ9FHF6ezBbq8fCbpnJ24//ZpLpLVRPruKx57USAoogecW0cBwJDFHHEUl292SxelxQ==","shasum":"115cb6239ef74614578a929ff0cf33782afdeb7c","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.10.tgz","fileCount":68,"unpackedSize":493310,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDh79ciqOQcB8tuzi6tjRNRAOooo1tut2+xGRZgeV0TmAiAROG8RKjnWp8EhFkyNRAfS9UUgLOfXuz43XMUumJKIwA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkBeaIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoutw//RBJLxBTGJ6yjTdZVtfzwCT1mcVYZ8AEigfVnZ0xveufq0Fd9\r\n+x43gEf0NhHhflEJyCCzyW4xb2zHYvy1kuD9DGwfzkSY4AQvfPzmyXKpxvkW\r\n4fHauVhJJI7OTf/NcVfsAYjOTkNfOLWDHmN+8aeAa0Us5uw1M9SFWhJ43Cg8\r\nkX/KgoBYIW/pQEAymM/FDLTtu2pUqM+4xXttgQP6sUEXSvFf6ndJ3yEgqgFU\r\nP03RPmphcNRoiP+qjNwsBveCIJLtkTYVNs2nnscQZbFCsgZAXF3mdwkj0oYN\r\n4goCkcm8JB+EPfSYoNdgk1bqcpEjHGAJ9Ph1nBzW5JOAckw/mMEWkesdU7DZ\r\nzyWC6kxJ3NdBuTDBa7IQYkiFdrB4s1qX8okNCsIbtVTAHRwTx2ukbvg3ETcd\r\nPR3chvLus6TZjnY/oLW3E00Xv7g/r/msmnVzP2SvHSpuCm1oRfMMQFm43S3M\r\n3Kqo/AsGNv5uD0Img6DCjHL4lTB9Sd0aAcYdw8LfjvNDElQyVqxicvPex001\r\nJux4RbD7eOYIluYkoYgUANM6zVJTjchBlPr9WK89fJScJ/uLu8OZu5yRwgn2\r\nrFoEL6ldHWlVFd+uLGhU2YaGPbAb2Hcz8x7nyHDpmTt2YWfGrUb/GogmMxqf\r\n+Mw07m/v/NnGsC/Uolnd/a+5ONm5sTIJeqM=\r\n=Vkl7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.10_1678108296632_0.6056762310621822"},"_hasShrinkwrap":false},"8.0.11":{"name":"get-it","version":"8.0.11","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:edge-runtime":"npm test -- --environment edge-runtime","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.10","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@typescript-eslint/eslint-plugin":"^5.54.1","@typescript-eslint/parser":"^5.54.1","@vitest/coverage-c8":"^0.29.2","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^4.0.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","pinkie-promise":"^2.0.1","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^4.4.0","typescript":"^4.9.5","vite":"^4.1.4","vitest":"^0.29.2","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"ac2c84301e21c5ad137d6cc5d5819ad1170a510a","_id":"get-it@8.0.11","_nodeVersion":"18.14.2","_npmVersion":"8.19.3","dist":{"integrity":"sha512-x7AlRWAWJKDve52Sk9Nkki1Ne9TwH2cZ4KknCswya88nM6IGoK/kDKv+FKAzBZ1QzhZGqTaqb+qzrectzYdTHw==","shasum":"c489c46eba3e7b94e411e4e831ae34696662086c","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.0.11.tgz","fileCount":68,"unpackedSize":493311,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID434srhE9B7+zdvO18JZW/PZvUpCLKJ5mEgTa99Opl+AiBMOs0KGN03rw2RIJT5Kevu7own4EZbcnBfawGZ0avOXA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEDpLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQcw//cZj6ZltPK1JMq4qC5xznKcIoV/ZPrVkWunRq3jweNLq4b0yD\r\nPYpi1iM/nD01BYQtz/poq3PV8emM8WVaeCuECUt9jaCSSbGCZyDzy/S4F51i\r\n0LS7RZN6YRbBU7G7vxmt2fTB8iv6oJAZXlbgpNDzDYqzDbnTKDhqOCQJs3IJ\r\nP+4Tb8kInaz/M9X8G7b8+7o0Ec7VJp322R4sn5h6dke5nernQPEk8f/IHVg9\r\nqUO4Iec9Kct/nLn/InOBOtef8KwxP0I6J8UbKS4/86ddUcvEao5xgaMmKX0g\r\nHBYBZrb4TEztYR9/aPAqwh8HTng9ZrOHvyvr5BrjlfQ1wbb68WgwLzzQ6SWL\r\nLLZtzVaasW/1gPlS7t8MefV+OI9+5vD6T3WfdBua1yKph2qnkm0iwT3Fw7z2\r\nddBb9jG2Ae0s8Q7XwjZZE6qCRaZoTALu1OUrcS+4rh1VT5NtMMfONaiJ0790\r\nPQV2h9HnhcLocdx38ayBEW//A8QkE67XzSysaI2MPPsNyDMrLQGy/ltBf2f2\r\nIoJMkPsdJRyQH3mYbYdZO48Q497kLqOzlscd6iYu/2vizPdyF7/NjMh6fy/5\r\nNBHS4gXabOURcZ9cvOovV34Tb/C55kAG1b7i8bo0A2cctSFcP+KIj5kdL1pt\r\noQD+E7jcuuZQv7z26Vx1jlFM4vRW38fO7DM=\r\n=k45M\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"simenss","email":"simen@bengler.no"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"jorn_georg","email":"jorn@sanity.io"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.0.11_1678785099590_0.29220182183219623"},"_hasShrinkwrap":false},"8.1.0":{"name":"get-it","version":"8.1.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.13","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.54.1","@typescript-eslint/parser":"^5.54.1","@vitest/coverage-c8":"^0.29.2","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^4.0.0","happy-dom":"^8.9.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^4.4.0","typescript":"^5.0.2","vite":"^4.2.1","vitest":"^0.29.2","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"f55235c8a406e779b7287bda0863e83371192d4b","_id":"get-it@8.1.0","_nodeVersion":"18.15.0","_npmVersion":"8.19.4","dist":{"integrity":"sha512-YKf4CbR0VQhRvAlTG7KdOhvEaKzArRmPliq3qV9iB2vOaGbp4hNUGrBhRG/IBT7LgNaNEuGIj5S+TPixxf6afw==","shasum":"c3c3ae91bfceba7dcccffec09d933fd571515102","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.1.0.tgz","fileCount":68,"unpackedSize":502383,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDHI/SISUbRUe8BsyI1LAGACu3yN+ArEoKL5840afBFPwIgcMP7x1jFc/fK8cbDCs34AKb7FlRPcRPrTkZzfh0L/jg="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkG/2eACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqzdw//Zf8x6DT080pX7rIooIyaE41f/LX9AO3TNdhEke7Y6IShQPAE\r\noq3+9skktzvifOXhYSUvm78zyiwKuk6c8uCBjChBotazeOefjQk4Fw0FpBf6\r\nD4bVLd/L6gxLT1aOgXcTjXej28yblYMmZxcDim2tYxE1uYuiRb/enMBTX6xj\r\nrha9WEb8JNxcZW4zv71kx1b0z2wBmpxr+uLhvpVACP0PtJxhlxceeUni+tAi\r\n9DI7sM2wCqtBDKhl+wFWsChPk3VzV2MVaaHSxdAhseHVurE4rCr2G+VdI+cX\r\nx8yrx1bn/aGe3pfSXpTP+8XMbHyEyB2WsRY/lUw+YddMVumdltQgeQhVyNDG\r\nLDjo3ucFkdoM+lS9ygH/yzkeflgPd8wlqgSckc0yKNBJAZlaD1JVPIDhFz0v\r\nCOpuApiGVkf9bKY2Y1Nq3objPPVTtkVK2x7YWT/+y52GCG+CV4rDaItmrkeQ\r\ndNnfjM+mZbF/zZ+Cgbdaa4CFMWQcEExEEw4bKMH7VVQ/MBYTcrNIiUcFj5XR\r\nbMRqL6byH3ZO5NFacmtizNZmH3NDKA241/t/5lTwLy/cfzj1tcZzCjTiPk+s\r\nVFqcm20bdxhWTQcOy647dsaiwSYyZv4fUgbWOiBKF2OyssZYrzADwzOpgg9Z\r\niEGIMjIyqZEQSl2CDXceASXixt6RCN4n1os=\r\n=I8Xk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.1.0_1679555998349_0.8089584175456002"},"_hasShrinkwrap":false},"8.1.1":{"name":"get-it","version":"8.1.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.13","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.54.1","@typescript-eslint/parser":"^5.54.1","@vitest/coverage-c8":"^0.29.2","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^4.0.0","happy-dom":"^8.9.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^4.4.0","typescript":"^5.0.2","vite":"^4.2.1","vitest":"^0.29.2","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"4b4ade54e9471d09370ad4acf75def9a818c76c0","_id":"get-it@8.1.1","_nodeVersion":"18.15.0","_npmVersion":"8.19.4","dist":{"integrity":"sha512-83P2+3V/3E+KSdlHnGlOr4vCrlV8wDsT580AyJkMtkK/8LtZc0TOCI9bjQXH1sgYnmQTzCoPoPaOAE+a8JZqLQ==","shasum":"6522df2b0726a0596d8087f23063ec7f5e35ea1c","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.1.1.tgz","fileCount":68,"unpackedSize":502648,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGvCsoDKnhSp4SVGNvuGO98ymgJXUpO2f22AXfd+xUzEAiAk1JFjyprgxs+/gN50t9Y6ys+01w93UIZ+xJx10yr8xw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkHdv0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrjVA/+M+86tSg2SkElUq5qYnPG2vbYcI4ZuvYAq2LTfi713huq7QCt\r\nAgTEEJ9Qt2AYTol2PQo8Z9oI5JWoEstyBjo93HBVULUaHwD3So5/3xWgb3qZ\r\nomLl5hpHwwyitp2Y0mEsunB2sdmqsxLBojs8TJKz5U387RhU+2HeHXEjYPL1\r\nWoGlBAXb+U0CveIK9InDotPuCzcGSjHgx093Hcru1bxOolZt6Zduvy3XoNWp\r\neJYML751kmNk36kcWu59h1xPdMpEGecG00/j7TSKhkDApoxOaK//Ow0VF2+g\r\neCwcCEyYG4FkFCc5vl/ruS8Q200/YdmSiFCMA4q+21UW4FsnVR1DXC3b5+bs\r\ndw5t8TgfVTKEZswnFhnwI9/TKL1z9FXVJNiftFqF8s8ZpplfYVUlDzI5Hn6W\r\nGiXA2MMdNdp5yP+uP+IucDOQ4s/GTDfS+8xjFi6UhV8Wpgy+gxwvSEFGEeOE\r\nvmH1DS/XfdDuv9JgltlnzkYOjyVa3wmmRBmxyy1PJV/1ySJEm2WHK2HIM8UC\r\npjtUTSwPq/8UbYgALPGyco6EK1JHc9VuxPMeaiVh7p6DbhgKYXVx+aLm+rUv\r\nLrpfnrRxbz9DQOXbzve6Cf0kgLb+nNc4IUxbCseUj5pgTWJeioG13q5FDj92\r\nRWpzYIjDu6p/ktThe5pWrHXeANFZO5WR16U=\r\n=fbBo\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.1.1_1679678452485_0.7150758868549476"},"_hasShrinkwrap":false},"8.1.2":{"name":"get-it","version":"8.1.2","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.13","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.54.1","@typescript-eslint/parser":"^5.54.1","@vitest/coverage-c8":"^0.31.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^5.0.0","happy-dom":"^9.0.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.0","typescript":"^5.0.2","vite":"^4.2.1","vitest":"^0.31.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"f4b7c74d18835b53cbe988704bf892740221c588","_id":"get-it@8.1.2","_nodeVersion":"18.16.0","_npmVersion":"9.6.6","dist":{"integrity":"sha512-B8aUYegP6PX8uqmPmPWagxaNZexkTmcegrIMytAE00PldhLem3d18WZzD+h2oB8lBbxZYnZi+zQ4luZtXkFRRw==","shasum":"db3da7c9358f96c1e47993574ffa0563ba5c37ad","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.1.2.tgz","fileCount":68,"unpackedSize":506996,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC+f1d0p8oNz7BVUKTA6c6YOj1C2tCHgOlJszvS9vvxuAIgLo2QcoX/BVzuAp1/XNS0IwxFEVqdRapC6AYBsMVoRCI="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.1.2_1683815363196_0.5301758458887873"},"_hasShrinkwrap":false},"8.1.3":{"name":"get-it","version":"8.1.3","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^2.1.2","@sanity/pkg-utils":"^2.2.13","@sanity/semantic-release-preset":"^4.0.0","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.54.1","@typescript-eslint/parser":"^5.54.1","@vitest/coverage-c8":"^0.31.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.0.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.4","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.0","typescript":"^5.0.2","vite":"^4.2.1","vitest":"^0.31.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"2a802f03a5bf0f43ada2736679c0f3b4832342da","_id":"get-it@8.1.3","_nodeVersion":"18.16.0","_npmVersion":"9.6.6","dist":{"integrity":"sha512-cbyYSla0qAQrwirBNHM4CERo8H32eUWNxhsby4AcKiRW3jIwMPDhgLnR0Ok/UmZO68vsccjRCFbZFEeB3BXvLg==","shasum":"9991e5232c8525a93af0ee596d00224ddb475ca0","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.1.3.tgz","fileCount":68,"unpackedSize":506623,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDzyz3sqey8Ddfb8EmmUGY1E0JMj88RO2GX1caH3M9W4AiEAnoFj2nW6IuEGrvTkJizwu5k4j9gg53FiZg5IdHtf0YI="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.1.3_1684151029121_0.27102021628602135"},"_hasShrinkwrap":false},"8.2.0-fetch.0":{"name":"get-it","version":"8.2.0-fetch.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","type-check":"tsc --noEmit","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.0","@sanity/pkg-utils":"^2.2.16","@sanity/semantic-release-preset":"^4.1.1","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.59.8","@typescript-eslint/parser":"^5.59.8","@vitest/coverage-v8":"^0.32.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.8","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.1","typescript":"^5.1.3","vite":"^4.2.1","vitest":"^0.32.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"b747fc8b27d8725f00411b0cacac8a4685a47b74","_id":"get-it@8.2.0-fetch.0","_nodeVersion":"18.16.0","_npmVersion":"9.2.0","dist":{"integrity":"sha512-uO7q+/pu+bxxZweAU8EMTvQTMwfVt0wuvSGn7JlgozMYlLaJ5L17kKimaCP6QZIREoIlzR8Q8Z74e+vRE6QMpg==","shasum":"9473d299649c525419c92ebe8bbc738665b060d8","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.2.0-fetch.0.tgz","fileCount":69,"unpackedSize":545842,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDP+KQIe+4qjMoUoRZNxNmXzTR9Zd20zEkBOso0Pu6nRgIgZkITrWYLWRaNQDF6nrP0CR/vB/VfKl0WxLHcBGqy5U8="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.2.0-fetch.0_1687536255834_0.9297363164083288"},"_hasShrinkwrap":false},"8.2.0-fetch.1":{"name":"get-it","version":"8.2.0-fetch.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.0","@sanity/pkg-utils":"^2.2.16","@sanity/semantic-release-preset":"^4.1.1","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vitest/coverage-v8":"^0.32.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.8","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.1","typescript":"^5.1.3","vite":"^4.2.1","vitest":"^0.32.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"c1213fdc204f1a8827c7bbcaf83c9740491ebb5b","readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  })\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","_id":"get-it@8.2.0-fetch.1","_nodeVersion":"18.16.0","_npmVersion":"9.2.0","dist":{"integrity":"sha512-GMZchKI+nQSlHkW+13zpCqVPi/7eL35G6oF9WXRii+l3ydfOdMeiJIjdO2EU61+tE2OBiqvudlT4IbJDhlVpMQ==","shasum":"1d39eeca61a3208594bc87ee83fb901f7702f3f7","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.2.0-fetch.1.tgz","fileCount":70,"unpackedSize":555330,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDBiwhSqMtD8N46NPbCDv8ZDFaz9CBzh7+aZd7Di9USSAiBvePO1p7eTx6J/yd8T03mRty2sejBtnjrYYMwhrV7jjg=="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.2.0-fetch.1_1687914957636_0.17030043963343378"},"_hasShrinkwrap":false},"8.1.4":{"name":"get-it","version":"8.1.4","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.0","@sanity/pkg-utils":"^2.2.16","@sanity/semantic-release-preset":"^4.1.1","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vitest/coverage-v8":"^0.32.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.8","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.1","typescript":"^5.1.3","vite":"^4.2.1","vitest":"^0.32.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"7f5714cea8e034fd1321da770dae459b530bfefc","_id":"get-it@8.1.4","_nodeVersion":"18.16.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-CMwl72THBpbR15OsrLXpSFsreiT1zPPXalxYiCg8zXaksfGhks0A633iOMn8qc7xkvv6bbiI18Hh7AmTxhV6nQ==","shasum":"2207aed36ea3910708a20c006cbfdfac76fe0e7b","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.1.4.tgz","fileCount":68,"unpackedSize":531721,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC90eKFzsw4b9Epw9B7m1E7LdWJhErxrqkQNBiOv3R0mwIgOBtuYBKURd6noa5ApGrr4wyMUJ/OlbR7DHvBYXp+WD8="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.1.4_1687920622868_0.7953321814236396"},"_hasShrinkwrap":false},"8.2.0":{"name":"get-it","version":"8.2.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.0","@sanity/pkg-utils":"^2.2.16","@sanity/semantic-release-preset":"^4.1.1","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vitest/coverage-v8":"^0.32.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.8","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.1","typescript":"^5.1.3","vite":"^4.2.1","vitest":"^0.32.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"a5faba293272267747165ac40541b1ba5894b1f0","_id":"get-it@8.2.0","_nodeVersion":"18.16.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-2bP102AY795kVmqE5roTc9pnbji3Wzcm8q9zXh3pDrmkqIYwonFMqwnjyOMZtyHsGvzwe/o/LUAS/vA0VKBQFg==","shasum":"b37bcac0f196d7fece2e57d422a4867f8600edd5","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.2.0.tgz","fileCount":70,"unpackedSize":555322,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICUKbUhmYD0iL8M6lOu1VjH7BsR/4JKRV3NM3QN9Y/pUAiBygkGtWHC0a5WhQTkAys8gf46tvn0Mh4MXwqweZ+pvFA=="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.2.0_1687993581433_0.024734553178674012"},"_hasShrinkwrap":false},"8.3.0":{"name":"get-it","version":"8.3.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.0","@sanity/pkg-utils":"^2.2.16","@sanity/semantic-release-preset":"^4.1.1","@types/debug":"^4.1.7","@types/follow-redirects":"^1.14.1","@types/node":"^18.15.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vitest/coverage-v8":"^0.33.0","eslint":"^8.36.0","eslint-config-prettier":"^8.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.0","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^2.8.8","prettier-plugin-packagejson":"^2.4.3","rimraf":"^5.0.1","typescript":"^5.1.3","vite":"4.3.9","vitest":"^0.33.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"gitHead":"88989f9ee40c02918901950fe2e11967468a5dd1","_id":"get-it@8.3.0","_nodeVersion":"18.16.1","_npmVersion":"9.6.7","dist":{"integrity":"sha512-R8rM45CWEI1shdTegGCs/9yy/z6DgwS5XMVIVZtSVpu0XABxPp3PA3TCl6mzVQOcHecbqD+VUFg1poAtBtO19A==","shasum":"376ab5f13a75923f737491b6665ee43674627e1f","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.3.0.tgz","fileCount":71,"unpackedSize":570932,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC77iu1qNX6RaAm5lxBbu51aNi4sK50ka4VnD3RDkppzwIhAOgd9EhV44TRb95YQ8ApM/acDzvdgXKO5G3Ibtyf47LW"}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.3.0_1688736339224_0.9666125122233422"},"_hasShrinkwrap":false},"8.3.1":{"name":"get-it","version":"8.3.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.9","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.0","@typescript-eslint/parser":"^6.2.0","@vitest/coverage-v8":"^0.33.0","eslint":"^8.45.0","eslint-config-prettier":"^8.8.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.0","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.7","vitest":"^0.33.0","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"gitHead":"3a9bab58ff0b97cd2392b926537414e98d3c7c84","_id":"get-it@8.3.1","_nodeVersion":"18.16.1","_npmVersion":"9.6.7","dist":{"integrity":"sha512-fi5wQakZVHWRy3zP0env52PHXP9Zl/p8Q2Ow8z9SmwpYgfCaA90hCSW2twC5/cpV5M1wB6tSmLqldVMP1tS1qw==","shasum":"bb92c6740a1260275ad13b31a543755b38a8b5c9","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.3.1.tgz","fileCount":71,"unpackedSize":570542,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.3.1","provenance":{"predicateType":"https://slsa.dev/provenance/v0.2"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC2JKFUZlFfTdEL1f4+s35ro5wEkjKTEy3Qh4lAmvmc+AIhAIGEOCxNbds002F4BQbrUWUUtzcXoLUlPKk4nFM2xU/r"}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.3.1_1690325576966_0.6824464628498397"},"_hasShrinkwrap":false},"8.3.1-rsc.0":{"name":"get-it","version":"8.3.1-rsc.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"react-server":"./dist/index.browser.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.9","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.9.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.0","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"c806b3e966c132f5344ff193146007b2813e6c19","_id":"get-it@8.3.1-rsc.0","_nodeVersion":"18.16.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-hFToaiosh5YuFk4cTJUQ/J14lphgVFEOf7GMdgqOOeeXkl2TozHiLej6L1v+wqTxSNsM/6iq9it+O3pxvZvRGg==","shasum":"87f41644d17f067aa4cbabfd5cae8c74ccc46f08","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.3.1-rsc.0.tgz","fileCount":71,"unpackedSize":570651,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIENiWqCB2+4Yp2Uf9mOjwEG1doWjs4g6D1w8VzelJtVWAiA3pL2sD/nFcyWxJGkigf58Tz+dTGJE+Zf9+u/+t0zJRQ=="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.3.1-rsc.0_1691081572234_0.2901214209977798"},"_hasShrinkwrap":false},"9.0.0-rsc.0":{"name":"get-it","version":"9.0.0-rsc.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"react-server":"./dist/index.browser.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.9","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.9.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.0","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"c5b67cdaddc8980871d5ffd2e3c6a503dbd2539c","_id":"get-it@9.0.0-rsc.0","_nodeVersion":"18.16.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-lMaL+6vzBoW7JmeBo2E2uxRt3ar28gOub7DkLX8O4UXEtxn4l4Lwft6LzC5CQFVPkQYwxwIDT4vc9Nd7xaFSBQ==","shasum":"09ef869805888aaedf21427e953d1a641f899c06","tarball":"https://registry.npmjs.org/get-it/-/get-it-9.0.0-rsc.0.tgz","fileCount":71,"unpackedSize":570732,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDp/M++6IQFo34/5MI73DTCFVhroHcJvCnVJuNyWQ5JcgIgLKESllwfkI+1Y1qUZFhV7DD8NcenbcwCO3VVxS5cFWw="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"benjaminakar","email":"benjaminakar2001@gmail.com"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"vicbergquist","email":"victoria.bergquist@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_9.0.0-rsc.0_1691089326749_0.5109969030296029"},"_hasShrinkwrap":false},"8.3.2-canary.0":{"name":"get-it","version":"8.3.2-canary.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.9","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.9.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.0","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"2b4227cae8332b9da2af6b52e5dd9d4beb7a89f7","_id":"get-it@8.3.2-canary.0","_nodeVersion":"18.16.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-Ri3AiT5skPK5cgN9Wrc3cQgydHZoV7duU1XGqpZRYjZ0d9YnvuDaYyGVUiGQrF9/JfLne4ar8R3bt8r3Ej86gg==","shasum":"5ec05450781d58839d725113158caa4571e435c0","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.3.2-canary.0.tgz","fileCount":69,"unpackedSize":569310,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEUFqqHooXfcqZPIOmFA+KOjqxphf2yW4AZVB15IVXO7AiEApBHIJi2IDhOwIP7OWsIgL9MnSzZbYTOjZlaYhWqRM0w="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.3.2-canary.0_1691092154003_0.43835588173820206"},"_hasShrinkwrap":false},"9.0.0-rsc.1":{"name":"get-it","version":"9.0.0-rsc.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","node":{"import":"./dist/index.cjs.js","require":"./dist/index.cjs"},"import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","node":{"import":"./dist/middleware.cjs.js","require":"./dist/middleware.cjs"},"import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.10","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.10.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"39e96ca0f678effcde7602843593f9a44497913d","_id":"get-it@9.0.0-rsc.1","_nodeVersion":"18.16.1","_npmVersion":"9.2.0","dist":{"integrity":"sha512-OrSmNqAJocgUc1Pq3D9gg7/hN5kksAK2CEl8zY+aqp1ouOSJfPOmSLhnYPWv3o1I1hHObAg5ZiLNQ4KRTm5Onw==","shasum":"4a0388f502f012c52f88c6deea4232097ecb6b19","tarball":"https://registry.npmjs.org/get-it/-/get-it-9.0.0-rsc.1.tgz","fileCount":76,"unpackedSize":600127,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDy/V91sJjp/hccFRTptaVhb3i2KpSTbAebU2fCUS1nSQIgMW4bpmzPCIemqp0G2OgHG14WaOonCqULpKdrXtI1Zhs="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_9.0.0-rsc.1_1691092955148_0.8762137784369732"},"_hasShrinkwrap":false},"8.3.2":{"name":"get-it","version":"8.3.2","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.10","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.1","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.10.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^9.20.3","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"gitHead":"59f10783a9a8dd6ababa778209c4b18217ef2796","_id":"get-it@8.3.2","_nodeVersion":"18.17.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-UwaVucd0iXbSjbORgU/qyOYGTTaY0Cn48ikxSJSdMCr0oczmb/+Wn4hryWO0l/LI+xB09gG+RVm519Y+xFYpbg==","shasum":"10198be3e212651d26d40ccbe1fa12f4dca87539","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.3.2.tgz","fileCount":69,"unpackedSize":569303,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.3.2","provenance":{"predicateType":"https://slsa.dev/provenance/v0.2"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDVOtE/zH5pj67fa2NIY4x7s5EvcopFdW1n4SVTosIarwIhANpVmuR3n1rCg0+RZDTWmZcwXx138eSIGwnIqMmK1bOm"}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.3.2_1691185033290_0.4230336187390136"},"_hasShrinkwrap":false},"9.0.0-rsc.2":{"name":"get-it","version":"9.0.0-rsc.2","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","source":"./src/index.ts","require":"./dist/index.cjs","import":"./dist/index.js","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","source":"./src/middleware.ts","require":"./dist/middleware.cjs","import":"./dist/middleware.js","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.10","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.2","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.10.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.7.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"b04145ae37ab9308fdb591e556d2b773fdac217e","_id":"get-it@9.0.0-rsc.2","_nodeVersion":"18.17.0","_npmVersion":"9.2.0","dist":{"integrity":"sha512-DdwFvEz67c3QVR949Uy/eATCa+uYu72Gj4AmqkVbxF+U91aexT3H8+aiMUNNTXpQMoMDG5p0lQwbbj62zvaEjg==","shasum":"30c4a770ab4a91f16a571196421aa2fdbc9151d9","tarball":"https://registry.npmjs.org/get-it/-/get-it-9.0.0-rsc.2.tgz","fileCount":74,"unpackedSize":598886,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDlv5WsAUvVLwoxfb8Hh0rAWKFW5bfn/YcNE3CFdBLtSAiBTa8S2/pAonyAorjel5n53BgmDjNc6mCTnXfGliqKOSQ=="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_9.0.0-rsc.2_1691200554490_0.9653947131672034"},"_hasShrinkwrap":false},"9.0.0-rsc.3":{"name":"get-it","version":"9.0.0-rsc.3","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","require":"./dist/index.browser.cjs","import":"./dist/index.browser.js"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.3.13-canary.1","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.2","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^8.10.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.7.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.8","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"6a03a5e8de6dbee3fa07f05035c9282c420b2fb3","_id":"get-it@9.0.0-rsc.3","_nodeVersion":"18.17.0","_npmVersion":"9.2.0","dist":{"integrity":"sha512-yzlJXmHaiVry9I3YNuxRGA20gq+fPABjbRQGoQwFG9AGlkFs9Fd3WSwrnixJ7cbfZRMPNoVpd71FW1Vd7t1cmw==","shasum":"71fb6f5e20b9d7d3f8c37580b6e2aa140432a577","tarball":"https://registry.npmjs.org/get-it/-/get-it-9.0.0-rsc.3.tgz","fileCount":74,"unpackedSize":598895,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHzyaV9VQAeK+54e44wLjHre27WpQm53ftngisVq/ARLAiAgmMRP8zu0cwin+Avtfxn4DfJO+XBtDdaPbzxLXLSX/g=="}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_9.0.0-rsc.3_1691304901093_0.8445936879975091"},"_hasShrinkwrap":false},"8.4.0":{"name":"get-it","version":"8.4.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.4.0","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.3","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.8.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.9","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"gitHead":"3d7e657520dddafcd5f9269863be0ab85009220f","_id":"get-it@8.4.0","_nodeVersion":"18.17.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-WQjqQACXCPSus+gfpKwJiesjwAOyxjlBcHRdQCfV3YQ2LkTqP1C6ZAxDlFzeZEsJa3ax0zqJEVednBkuGVL4nw==","shasum":"1911bb779428984d3d07ba4055b54e07f9fde528","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.0.tgz","fileCount":74,"unpackedSize":598878,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.0","provenance":{"predicateType":"https://slsa.dev/provenance/v0.2"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGecIyQSircancIjIyTDeMZ0otcfYbIu2d4Hm/GtSO6LAiACaoiLNx7K+iPlz67MgDrIelDahphOdkey9qHOJrI3zg=="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.0_1691416134760_0.2709142960089015"},"_hasShrinkwrap":false},"8.4.1":{"name":"get-it","version":"8.4.1","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.4.0","@sanity/semantic-release-preset":"^4.1.2","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.3","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.8.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.9","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"gitHead":"2c9d7be79b915b2802b3a86e501b62ceb6b5fdc1","_id":"get-it@8.4.1","_nodeVersion":"18.17.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-B81/lof6jHW2/YyvH4gzKclBMdHNl2B4hRpuIiwVYtZjUiV5mBAQa2GTX6EPTuNhPxw8K5c14cJAFUa78b4A/g==","shasum":"59def03274cd2ba3317ad4c8cab8a0ecea197505","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.1.tgz","fileCount":74,"unpackedSize":598529,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.1","provenance":{"predicateType":"https://slsa.dev/provenance/v0.2"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDAbmTXjsSQNfXVyp8SUNNj3OSjYWzfSMtJeJ5C9LtQxQIgTlCjcL/BCBtT+RlyE+ZHLgHjyM8AAxm9J5jW7qUXtUo="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.1_1691419586401_0.2686433633962422"},"_hasShrinkwrap":false},"8.4.2":{"name":"get-it","version":"8.4.2","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.4.4","@sanity/semantic-release-preset":"^4.1.3","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.3","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.8.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.9","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"gitHead":"59dd3777dd605147bac4043d7da566fdf20a39b1","_id":"get-it@8.4.2","_nodeVersion":"18.17.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-xseDj1loKLcPYKhdlP2k7ZYDE03jTrHgRNt0AURtALOu+8pREmBn+UxZ4JbsxpQ8AvupgmpYuuTa3cS1mtuy2w==","shasum":"dd247bd855aa7f8583a586fe0b81bc324995e943","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.2.tgz","fileCount":74,"unpackedSize":598869,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.2","provenance":{"predicateType":"https://slsa.dev/provenance/v0.2"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD46kT6gMi0//VzA/hqUlRiNCatZRwuUiRjcF7596NLWgIgJd33RxXRckxVmT5e6FouZVfYcN13wyWDQ9zj6AxYMoU="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.2_1691611810517_0.7709508198305239"},"_hasShrinkwrap":false},"8.4.2-canary.0":{"name":"get-it","version":"8.4.2-canary.0","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.4.4","@sanity/semantic-release-preset":"^4.1.3","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.3","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vitest/coverage-v8":"^0.34.1","eslint":"^8.46.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.8.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.1","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.9","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","readmeFilename":"README.md","gitHead":"cd82bce018d708792b4149ac8e33186c341fd946","_id":"get-it@8.4.2-canary.0","_nodeVersion":"18.17.0","_npmVersion":"9.2.0","dist":{"integrity":"sha512-mgc2Xif0KKXwFkmJM9i+lQhadmHyjfMu5OV6wxngtO0AWHR31AFIZd3KfqxIl2y41No2O9jD9MWF3gmDDfWGOw==","shasum":"264a669956f8cec915fc3225c27715661e8e03fb","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.2-canary.0.tgz","fileCount":74,"unpackedSize":602350,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDHRUSr7CQVMh6A6gmrP6qvCEq0OcZGn+ovlQ3/L02nIwIhANIPd6hNhH7g7hbMRREwq36gN+farXh84mWi/+1UEOXD"}]},"_npmUser":{"name":"stipsan","email":"stipsan@gmail.com"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.2-canary.0_1692211020718_0.4857111635952587"},"_hasShrinkwrap":false},"8.4.3":{"name":"get-it","version":"8.4.3","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.0.4","@sanity/pkg-utils":"^2.4.6","@sanity/semantic-release-preset":"^4.1.3","@types/debug":"^4.1.8","@types/follow-redirects":"^1.14.1","@types/node":"^18.17.5","@types/progress-stream":"^2.0.2","@types/zen-observable":"^0.8.3","@typescript-eslint/eslint-plugin":"^6.4.0","@typescript-eslint/parser":"^6.4.0","@vitest/coverage-v8":"^0.34.1","eslint":"^8.47.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.1","happy-dom":"^10.10.0","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.2","prettier-plugin-packagejson":"^2.4.5","rimraf":"^5.0.1","typescript":"^5.1.6","vite":"4.4.9","vitest":"^0.34.1","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"_id":"get-it@8.4.3","gitHead":"bbb5d8dcf1af0f3821376a0ed1b2d3e2f99a0696","_nodeVersion":"18.17.0","_npmVersion":"9.8.1","dist":{"integrity":"sha512-H9YbPCN3QCbxtojv42fvmrkIYe434qKg1nKpMMtBqwL8U3XprnHMgDbQwMJIxSIFOPpajQPf0BxhjsHoFI0cEQ==","shasum":"f5d05fb95644c5414afa6f5dfd3a927820472f7f","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.3.tgz","fileCount":74,"unpackedSize":602342,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDEvHNXu1ILQN2i0uRlK/tyy2rJAeLH3f4SsVPuocMENQIgNVxAXvnWMWmfn+aSxXmMrdUk2KKvMxh8YEdEXpjs1us="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.3_1692296253484_0.33454323077707215"},"_hasShrinkwrap":false},"8.4.4":{"name":"get-it","version":"8.4.4","description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.2","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.1.5","@sanity/pkg-utils":"^3.2.0","@sanity/semantic-release-preset":"^4.1.5","@types/debug":"^4.1.10","@types/follow-redirects":"^1.14.3","@types/node":"^20.8.8","@types/progress-stream":"^2.0.3","@types/zen-observable":"^0.8.5","@typescript-eslint/eslint-plugin":"^6.9.0","@typescript-eslint/parser":"^6.9.0","@vitest/coverage-v8":"^0.34.6","eslint":"^8.52.0","eslint-config-prettier":"^9.0.0","eslint-plugin-prettier":"^5.0.1","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.2","happy-dom":"^12.9.1","ls-engines":"^0.9.0","node-fetch":"^2.6.7","prettier":"^3.0.3","prettier-plugin-packagejson":"^2.4.6","rimraf":"^5.0.1","typescript":"^5.2.2","vite":"4.5.0","vitest":"^0.34.6","vitest-github-actions-reporter":"^0.10.0","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"_id":"get-it@8.4.4","gitHead":"cfd56a1335891b63bd2f35d7c5a60c6a4de27998","_nodeVersion":"18.18.2","_npmVersion":"10.2.1","dist":{"integrity":"sha512-Pu3pnJfnYuLEhwJgMlFqk19ugvtazzTxh7rg8wATaBL4c5Fy4ahM5B+bGdluiNSNYYK89F5vSa+N3sTa/qqtlg==","shasum":"8c1c4b16f6f2da4120c00fffa66c5afe2d454e23","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.4.tgz","fileCount":74,"unpackedSize":594079,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.4","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDJOfz0x8djIJXuZzqQtYpooESpBrF4wceGbBByW/H8iQIgfG3Ohm/VI0ingEwalG0H7cVUungPvzYZ03NZpLkKVII="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"rneatherway-sanity","email":"robin.neatherway@sanity.io"},{"name":"ricokahler","email":"ricokahler@me.com"},{"name":"pedro-sanity","email":"pedro@sanity.io"},{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"mikolajsanity","email":"mikolaj@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.4_1698144660152_0.8524971328808835"},"_hasShrinkwrap":false},"8.4.5":{"name":"get-it","version":"8.4.5","workspaces":["test-next"],"description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.4","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.1.7","@sanity/pkg-utils":"^3.3.7","@sanity/semantic-release-preset":"^4.1.6","@types/debug":"^4.1.10","@types/follow-redirects":"^1.14.4","@types/node":"^20.8.8","@types/progress-stream":"^2.0.5","@types/zen-observable":"^0.8.7","@typescript-eslint/eslint-plugin":"^6.18.1","@typescript-eslint/parser":"^6.18.1","@vitest/coverage-v8":"^1.1.3","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.1.3","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.2","happy-dom":"12.10.3","ls-engines":"^0.9.1","node-fetch":"^2.6.7","prettier":"^3.1.1","prettier-plugin-packagejson":"^2.4.9","rimraf":"^5.0.1","typescript":"^5.3.3","vite":"5.0.11","vitest":"^1.1.3","vitest-github-actions-reporter":"^0.11.1","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"_id":"get-it@8.4.5","gitHead":"c340662ba3c2f950e3976f03731259868d90959a","_nodeVersion":"20.10.0","_npmVersion":"10.2.5","dist":{"integrity":"sha512-hOoAwSfJXy86QJPEsZFDtBsFBagyTAlYwLJkKZJN5q7ppXRQjq0Wies4d14icDSpVs7QVm4Wtt0XQzjxXlUdgg==","shasum":"f60ef6724d80a1c522905e12c6ed9fdd540f03e2","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.5.tgz","fileCount":74,"unpackedSize":594113,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.5","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCMywGu3hiE6e3POMsJF0DRrBnwYiHJlBRPY5MhvrThGQIhAPbjbVqEiHHexiX1a0cx0j8bYM+AeZ5jShzCWbb8S4ZA"}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"sergeisarviro","email":"sergei@sanity.io"},{"name":"ash","email":"ashley@juice49.com"},{"name":"indrek.karner","email":"indrek.karner@sanity.io"},{"name":"cngonzalez-sanity","email":"carolina@sanity.io"},{"name":"rdunk","email":"rupert@rupertdunk.com"},{"name":"rneatherway-sanity","email":"robin.neatherway@sanity.io"},{"name":"ricokahler","email":"ricokahler@me.com"},{"name":"pedro-sanity","email":"pedro@sanity.io"},{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.5_1704982936838_0.9319170812724593"},"_hasShrinkwrap":false},"8.4.6":{"name":"get-it","version":"8.4.6","workspaces":["test-next"],"description":"Generic HTTP request library for node, browsers and workers","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","bugs":{"url":"https://github.com/sanity-io/get-it/issues"},"repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"license":"MIT","author":{"name":"Sanity.io","email":"hello@sanity.io"},"sideEffects":false,"type":"module","exports":{".":{"types":"./dist/index.d.ts","source":"./src/index.ts","browser":{"source":"./src/index.browser.ts","import":"./dist/index.browser.js","require":"./dist/index.browser.cjs"},"react-server":"./dist/index.react-server.js","deno":"./dist/index.browser.js","edge-light":"./dist/index.browser.js","worker":"./dist/index.browser.js","import":"./dist/index.js","require":"./dist/index.cjs","default":"./dist/index.js"},"./middleware":{"types":"./dist/middleware.d.ts","source":"./src/middleware.ts","browser":{"source":"./src/middleware.browser.ts","require":"./dist/middleware.browser.cjs","import":"./dist/middleware.browser.js"},"react-server":"./dist/middleware.browser.js","deno":"./dist/middleware.browser.js","edge-light":"./dist/middleware.browser.js","worker":"./dist/middleware.browser.js","import":"./dist/middleware.js","require":"./dist/middleware.cjs","default":"./dist/middleware.js"},"./package.json":"./package.json"},"main":"./dist/index.cjs","module":"./dist/index.js","source":"./src/index.ts","browser":{"./dist/index.cjs":"./dist/index.browser.cjs","./dist/index.js":"./dist/index.browser.js","./dist/middleware.cjs":"./dist/middleware.browser.cjs","./dist/middleware.js":"./dist/middleware.browser.js"},"types":"./dist/index.d.ts","typesVersions":{"*":{"middleware":["./dist/middleware.d.ts"]}},"scripts":{"build":"npm run clean && pkg build --strict && pkg --strict","clean":"npx rimraf dist coverage","coverage":"vitest run --coverage","lint":"eslint . --ext .cjs,.js,.ts --report-unused-disable-directives","prepublishOnly":"npm run build","test":"vitest","test:browser":"npm test -- --config ./vitest.browser.config.ts --dom","test:edge-runtime":"npm test -- --config ./vitest.edge.config.ts","test:react-server":"npm test -- --config ./vitest.react-server.config.ts","test:esm":"node --test test-esm/ | faucet","test:esm:browser":"node -C browser --test test-esm/test.mjs | faucet","test:esm:deno":"deno test --allow-read --allow-net --allow-env --import-map=test-deno/import_map.json test-deno","test:next":"npm test -- --config ./vitest.next.config.ts","type-check":"tsc --noEmit"},"browserslist":["> 0.2% and supports es6-module and supports es6-module-dynamic-import and not dead and not IE 11","maintained node versions"],"dependencies":{"debug":"^4.3.4","decompress-response":"^7.0.0","follow-redirects":"^1.15.4","into-stream":"^6.0.0","is-plain-object":"^5.0.0","is-retry-allowed":"^2.2.0","is-stream":"^2.0.1","parse-headers":"^2.0.5","progress-stream":"^2.0.0","tunnel-agent":"^0.6.0"},"devDependencies":{"@edge-runtime/vm":"^3.1.8","@sanity/pkg-utils":"^4.0.0","@sanity/semantic-release-preset":"^4.1.6","@types/debug":"^4.1.10","@types/follow-redirects":"^1.14.4","@types/node":"^20.8.8","@types/progress-stream":"^2.0.5","@types/zen-observable":"^0.8.7","@typescript-eslint/eslint-plugin":"^6.19.1","@typescript-eslint/parser":"^6.19.1","@vitest/coverage-v8":"^1.2.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.1.3","eslint-plugin-simple-import-sort":"^10.0.0","faucet":"^0.0.4","get-uri":"^6.0.2","happy-dom":"12.10.3","ls-engines":"^0.9.1","node-fetch":"^2.6.7","prettier":"^3.2.4","prettier-plugin-packagejson":"^2.4.9","rimraf":"^5.0.1","typescript":"^5.3.3","vite":"5.0.12","vitest":"^1.2.1","vitest-github-actions-reporter":"^0.11.1","zen-observable":"^0.10.0"},"engines":{"node":">=14.0.0"},"publishConfig":{"access":"public","provenance":true},"_id":"get-it@8.4.6","gitHead":"0319a74f6c8374f8db68f85283970ee6415e13a7","_nodeVersion":"20.11.0","_npmVersion":"10.2.5","dist":{"integrity":"sha512-omefjdbyRb2rRt0tnrZlbeWx9oZJm66o88K8JlYn13xELn+0+d6mJZOQHrJAdC3vxeJ4t/NHa4wh7Wlh+nvEJA==","shasum":"37af61bd72027364c73ec10ed3f1c45ccb28241a","tarball":"https://registry.npmjs.org/get-it/-/get-it-8.4.6.tgz","fileCount":74,"unpackedSize":578781,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/get-it@8.4.6","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFlAHTBY2MmOaWe/E+8DKBjGoC+ST94JUTgT/bkCx2YgAiA5gRZ9JeS0QLR+RdNwfXanRpfwW1eDHqqm0UYAz75xDw=="}]},"_npmUser":{"name":"sanity-io","email":"developers@sanity.io"},"directories":{},"maintainers":[{"name":"sergeisarviro","email":"sergei@sanity.io"},{"name":"ash","email":"ashley@juice49.com"},{"name":"indrek.karner","email":"indrek.karner@sanity.io"},{"name":"cngonzalez-sanity","email":"carolina@sanity.io"},{"name":"rdunk","email":"rupert@rupertdunk.com"},{"name":"rneatherway-sanity","email":"robin.neatherway@sanity.io"},{"name":"ricokahler","email":"ricokahler@me.com"},{"name":"pedro-sanity","email":"pedro@sanity.io"},{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/get-it_8.4.6_1706188130007_0.050540997600732496"},"_hasShrinkwrap":false}},"readme":"# get-it\n\n[![npm stat](https://img.shields.io/npm/dm/get-it.svg?style=flat-square)](https://npm-stat.com/charts.html?package=get-it)\n[![npm version](https://img.shields.io/npm/v/get-it.svg?style=flat-square)](https://www.npmjs.com/package/get-it)\n[![gzip size][gzip-badge]][bundlephobia]\n[![size][size-badge]][bundlephobia]\n\nGeneric HTTP request library for node.js (>= 14) and [modern browsers].\n\n## Motivation\n\nWe wanted an HTTP request library that worked transparently in Node.js and browsers with a small browser bundle footprint.\n\nTo be able to use the same library in a range of different applications with varying requirements, but still keep the bundle size down, we took inspiration from [http-client](https://github.com/mjackson/http-client) which cleverly composes functionality into the client.\n\n## Features\n\nUsing a middleware approach, `get-it` has the following feature set:\n\n- Promise, observable and low-level event-emitter patterns\n- Automatic retrying with customizable number of attempts and filtering functionality\n- Cancellation of requests\n- Configurable connect/socket timeouts\n- Automatic parsing of JSON responses\n- Automatic stringifying of JSON request bodies\n- Automatic gzip unwrapping in Node\n- Automatically prepend base URL\n- Automatically follow redirects (configurable number of retries)\n- Upload/download progress events\n- Treat HTTP status codes >=400 as errors\n- Debug requests with environment variables/localStorage setting\n\n## Usage\n\nHow `get-it` behaves depends on which middleware you've loaded, but common to all approaches is the setup process.\n\n```js\n// Import the core get-it package, which is used to generate a requester\nimport {getIt} from 'get-it'\n\n// And import whatever middleware you want to use\nimport {base, jsonResponse, promise} from 'get-it/middleware'\n\n// Now compose the middleware you want to use\nconst request = getIt([base('https://api.your.service/v1'), jsonResponse()])\n\n// You can also register middleware using `.use(middleware)`\nrequest.use(promise())\n\n// Now you're ready to use the requester:\nrequest({url: '/projects'})\n  .then((response) => console.log(response.body))\n  .catch((err) => console.error(err))\n```\n\nIn most larger projects, you'd probably make a `httpClient.js` or similar, where you would instantiate the requester and export it for other modules to reuse.\n\n## Options\n\n- `url` - URL to the resource you want to reach.\n- `method` - HTTP method to use for request. Default: `GET`, unless a body is provided, in which case the default is `POST`.\n- `headers` - Object of HTTP headers to send. Note that cross-origin requests in IE9 will not be able to set these headers.\n- `body` - The request body. If the `jsonRequest` middleware is used, it will serialize to a JSON string before sending. Otherwise, it tries to send whatever is passed to it using the underlying adapter. Supported types:\n  - _Browser_: `string`, `ArrayBufferView`, `Blob`, `Document`, `FormData` (deprecated: `ArrayBuffer`)\n  - _Node_: `string`, `buffer`, `ReadStream`\n- `bodySize` - Size of body, in bytes. Only used in Node when passing a `ReadStream` as body, in order for progress events to emit status on upload progress.\n- `timeout` - Timeout in millisecond for the request. Takes an object with `connect` and `socket` properties.\n- `maxRedirects` - Maximum number of redirects to follow before giving up. Note that this is only used in Node, as browsers have built-in redirect handling which cannot be adjusted. Default: `5`\n- `rawBody` - Set to `true` to return the raw value of the response body, instead of a string. The type returned differs based on the underlying adapter:\n  - _Browser_: `ArrayBuffer`\n  - _Node_: `Buffer`\n\n## Return values\n\nBy default, `get-it` will return an object of single-channel event emitters. This is done in order to provide a low-level API surface that others can build upon, which is what the `promise` and `observable` middlewares do. Unless you really know what you're doing, you'll probably want to use those middlewares.\n\n## Response objects\n\n`get-it` does not expose the low-level primitives such as the `XMLHttpRequest` or `http.IncomingMessage` instances. Instead, it provides a response object with the following properties:\n\n```js\n{\n  // string (ArrayBuffer or Buffer if `rawBody` is set to `true`)\n  body: 'Response body'\n  url: 'http://foo.bar/baz',\n  method: 'GET',\n  statusCode: 200,\n  statusMessage: 'OK',\n  headers: {\n    'Date': 'Fri, 09 Dec 2016 14:55:32 GMT',\n    'Cache-Control': 'public, max-age=120'\n  }\n}\n```\n\n## Promise API\n\nFor the most part, you simply have to register the middleware and you should be good to go. Sometimes you only need the response body, in which case you can set the `onlyBody` option to `true`. Otherwise the promise will be resolved with the response object mentioned earlier.\n\n```js\nimport {getIt} from 'get-it'\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise({onlyBody: true})])\n\nrequest({url: 'http://foo.bar/api/projects'})\n  .then((projects) => console.log(projects))\n  .catch((err) => console.error(err))\n```\n\n### Cancelling promise-based requests\n\nWith the Promise API, you can cancel requests using a _cancel token_. This API is based on the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises), which was at Stage 1 before it was withdrawn.\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nimport {promise} from 'get-it/middleware'\nconst request = getIt([promise()])\n\nconst source = promise.CancelToken.source()\n\nrequest\n  .get({\n    url: 'http://foo.bar/baz',\n    cancelToken: source.token,\n  })\n  .catch((err) => {\n    if (promise.isCancel(err)) {\n      console.log('Request canceled', err.message)\n    } else {\n      // handle error\n    }\n  })\n\n// Cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user')\n```\n\n## Observable API\n\nThe observable API requires you to pass an Observable-implementation that you want to use. Optionally, you can register it under the global `Observable`, but this is not recommended.\n\n```js\nimport {getIt} from 'get-it'\nimport {observable} from 'get-it/middleware'\nimport zenObservable from 'zen-observable'\n\nconst request = getIt()\n\nrequest.use(\n  observable({\n    implementation: zenObservable,\n  }),\n)\n\nconst observer = request({url: 'http://foo.bar/baz'})\n  .filter((ev) => ev.type === 'response')\n  .subscribe({\n    next: (res) => console.log(res.body),\n    error: (err) => console.error(err),\n  })\n\n// If you want to cancel the request, simply unsubscribe:\nobserver.unsubscribe()\n```\n\nIt's important to note that the observable middleware does not only emit `response` objects, but also `progress` events. You should always filter to specify what you're interested in receiving. Every emitted value has a `type` property.\n\n## Upcoming features\n\n- Developer-friendly assertions that are stripped in production to reduce bundle size and performance\n- Authentication (basic)\n- Stream response middleware?\n\n## Prior art\n\nThis module was inspired by the great work of others:\n\n- [got](https://github.com/sindresorhus/got)\n- [simple-get](https://github.com/feross/simple-get)\n- [xhr](https://github.com/naugtur/xhr)\n- [Axios](https://github.com/mzabriskie/axios/)\n- [http-client](https://github.com/mjackson/http-client)\n- [request](https://github.com/request/request)\n\n## License\n\nMIT-licensed. See LICENSE.\n\n## Release new version\n\nRun the [\"CI & Release\" workflow](https://github.com/sanity-io/get-it/actions).\nMake sure to select the main branch and check \"Release new version\".\n\nSemantic release will only release on configured branches, so it is safe to run release on any branch.\n\n[gzip-badge]: https://img.shields.io/bundlephobia/minzip/get-it?label=gzip%20size&style=flat-square\n[size-badge]: https://img.shields.io/bundlephobia/min/get-it?label=size&style=flat-square\n[bundlephobia]: https://bundlephobia.com/package/get-it\n[modern browsers]: https://browsersl.ist/#q=%3E+0.2%25+and+supports+es6-module+and+supports+es6-module-dynamic-import+and+not+dead+and+not+IE+11\n","maintainers":[{"name":"sergeisarviro","email":"sergei@sanity.io"},{"name":"ash","email":"ashley@juice49.com"},{"name":"indrek.karner","email":"indrek.karner@sanity.io"},{"name":"cngonzalez-sanity","email":"carolina@sanity.io"},{"name":"rdunk","email":"rupert@rupertdunk.com"},{"name":"rneatherway-sanity","email":"robin.neatherway@sanity.io"},{"name":"ricokahler","email":"ricokahler@me.com"},{"name":"pedro-sanity","email":"pedro@sanity.io"},{"name":"jonabc","email":"jon.ruskin@gmail.com"},{"name":"kenjonespizza","email":"ken@sanity.io"},{"name":"pauloborgesf","email":"paulo@sanity.io"},{"name":"binoy14","email":"me@binoy.io"},{"name":"simen.svale","email":"simen@sanity.io"},{"name":"svirs","email":"shur@sanity.io"},{"name":"josh_sanity_io","email":"josh@sanity.io"},{"name":"joneidejohnsen","email":"jon@sanity.io"},{"name":"nina.andal","email":"nina@sanity.io"},{"name":"rankers","email":"richardankers@gmail.com"},{"name":"snorreeb","email":"snorre.e.brekke@gmail.com"},{"name":"mattcraig","email":"matt@sanity.io"},{"name":"vincentquigley","email":"vincent@sanity.io"},{"name":"stipsan","email":"stipsan@gmail.com"},{"name":"michael-sanity","email":"michael@sanity.io"},{"name":"rubioz","email":"jarubc@gmail.com"},{"name":"tonina","email":"zhelyazkova.tonina@gmail.com"},{"name":"ritasdias","email":"anarita151@gmail.com"},{"name":"simeonsanity","email":"simeon@sanity.io"},{"name":"kmelve","email":"knut.melvaer@gmail.com"},{"name":"bjoerge","email":"bjoerge@gmail.com"},{"name":"rexxars","email":"espen@hovlandsdal.com"},{"name":"skogsmaskin","email":"per.kristian.nordnes@gmail.com"},{"name":"robinpyon","email":"robin@robinpyon.com"},{"name":"mariuslundgard","email":"studio@mariuslundgard.com"},{"name":"sanity-io","email":"developers@sanity.io"},{"name":"evenw","email":"even@sanity.io"},{"name":"radhe_sanity","email":"radhe@sanity.io"},{"name":"rbotten","email":"rbotten@gmail.com"},{"name":"judofyr","email":"judofyr@gmail.com"},{"name":"obliadp","email":"orjan@sanity.io"},{"name":"dcilke","email":"dain.cilke@gmail.com"},{"name":"fredcarlsen","email":"fred@superbig.co"},{"name":"hermanw","email":"herman@sanity.io"},{"name":"sgulseth","email":"sgulseth@gmail.com"},{"name":"atombender","email":"npm@purefiction.net"},{"name":"simenss","email":"simen@bengler.no"}],"time":{"modified":"2024-01-25T13:08:50.945Z","created":"2016-11-29T10:24:26.927Z","0.0.1":"2016-11-29T10:24:26.927Z","0.0.2":"2016-12-09T12:50:55.141Z","0.0.3":"2016-12-09T16:00:15.393Z","0.0.4":"2016-12-12T09:08:43.904Z","0.0.5":"2016-12-12T09:51:36.002Z","0.0.6":"2016-12-12T10:16:18.617Z","0.0.7":"2016-12-12T11:41:24.446Z","0.0.8":"2016-12-12T15:41:03.786Z","0.0.9":"2016-12-13T10:02:34.906Z","0.0.10":"2016-12-13T18:34:03.707Z","0.0.11":"2016-12-14T13:08:22.572Z","0.0.12":"2016-12-15T19:32:25.018Z","1.0.0":"2016-12-19T14:32:09.603Z","1.0.1":"2016-12-22T12:02:09.505Z","1.0.2":"2017-01-25T13:33:37.293Z","1.0.3":"2017-02-22T13:10:00.051Z","1.0.4":"2017-03-01T12:45:25.728Z","2.0.0":"2017-06-21T18:05:12.926Z","2.0.1":"2017-07-04T11:00:41.524Z","2.0.2":"2017-07-04T11:44:41.925Z","2.1.0":"2017-07-25T15:47:52.326Z","2.1.1":"2017-07-28T12:57:33.411Z","2.1.2":"2017-08-28T19:21:35.150Z","2.1.3":"2017-08-29T11:05:35.874Z","2.1.4":"2017-09-12T15:28:38.688Z","2.1.5":"2017-09-14T11:22:15.761Z","3.0.0":"2017-09-18T20:34:18.741Z","3.0.1":"2017-09-22T10:57:12.984Z","4.0.0":"2017-09-28T09:06:31.376Z","4.0.1":"2017-11-12T14:55:32.063Z","4.0.2":"2018-01-20T22:50:46.576Z","4.0.3":"2018-06-04T20:37:31.626Z","4.0.4":"2018-07-03T08:45:38.663Z","4.1.0":"2019-02-05T11:04:03.964Z","4.1.1":"2019-02-06T13:47:59.844Z","4.1.2":"2019-02-06T14:10:19.064Z","4.1.3":"2019-02-06T17:21:45.416Z","4.1.4":"2019-02-08T12:52:04.940Z","5.0.0":"2019-03-13T10:27:59.993Z","5.0.1":"2019-08-02T13:05:14.293Z","5.0.2":"2019-08-22T23:54:26.436Z","5.0.3":"2020-05-08T00:35:57.165Z","6.0.0-0":"2021-01-08T04:21:10.624Z","5.0.4":"2021-01-19T20:58:08.248Z","5.0.5":"2021-08-09T09:30:54.217Z","5.0.6-fetch.0":"2021-12-07T00:10:12.381Z","5.1.0-fetch":"2021-12-07T00:44:12.596Z","5.1.1-fetch":"2021-12-07T01:25:58.220Z","5.1.0":"2021-12-07T14:05:54.702Z","5.2.0":"2021-12-09T21:08:38.468Z","5.2.1":"2021-12-09T21:27:55.507Z","6.0.0":"2022-02-01T19:20:12.126Z","6.0.1":"2022-02-08T23:36:51.205Z","6.1.0":"2022-03-31T12:11:04.003Z","6.1.1":"2022-07-08T18:43:14.692Z","6.1.1-esm.0":"2022-08-26T00:56:10.580Z","6.1.1-esm.1":"2022-08-26T01:27:06.284Z","6.1.1-esm.2":"2022-08-26T01:37:07.160Z","6.1.1-esm.3":"2022-08-26T02:00:06.183Z","6.1.1-esm.4":"2022-08-26T02:16:47.306Z","6.1.1-esm.5":"2022-08-26T06:36:42.516Z","6.1.1-esm.6":"2022-08-26T06:47:50.737Z","6.1.1-esm.7":"2022-08-26T09:35:10.521Z","6.1.1-esm.8":"2022-08-26T10:00:43.775Z","6.1.1-esm.9":"2022-08-26T12:39:02.788Z","6.1.1-esm.10":"2022-08-26T13:08:40.919Z","6.1.1-esm.11":"2022-08-26T18:58:29.726Z","6.1.1-esm.12":"2022-08-26T19:15:33.862Z","6.1.1-esm.13":"2022-08-26T20:03:18.622Z","6.1.1-esm.14":"2022-08-26T23:22:55.691Z","6.1.1-esm.15":"2022-08-26T23:50:57.343Z","7.0.0":"2022-09-15T00:59:20.165Z","7.0.1":"2022-09-15T01:46:53.047Z","7.0.2":"2022-09-27T20:34:57.656Z","8.0.0-esm.0":"2023-01-04T00:44:32.281Z","8.0.0-esm.1":"2023-01-04T02:05:30.049Z","8.0.0":"2023-01-04T13:14:26.967Z","8.0.1":"2023-01-04T17:19:50.234Z","8.0.2":"2023-01-06T20:08:08.883Z","8.0.3-esm.0":"2023-01-09T15:48:35.275Z","8.0.3":"2023-01-09T15:55:26.834Z","8.0.4-esm.0":"2023-01-10T05:39:27.882Z","8.0.4-fetch.0":"2023-01-10T06:47:56.066Z","8.0.4":"2023-01-10T07:16:54.978Z","8.0.5":"2023-01-11T02:09:23.895Z","8.0.6":"2023-01-14T10:23:45.772Z","8.0.7":"2023-01-18T10:44:36.137Z","8.0.8":"2023-01-23T14:21:57.359Z","8.0.9":"2023-01-25T22:57:57.494Z","8.0.10":"2023-03-06T13:11:36.794Z","8.0.11":"2023-03-14T09:11:39.808Z","8.1.0":"2023-03-23T07:19:58.566Z","8.1.1":"2023-03-24T17:20:52.826Z","8.1.2":"2023-05-11T14:29:23.418Z","8.1.3":"2023-05-15T11:43:49.409Z","8.2.0-fetch.0":"2023-06-23T16:04:15.997Z","8.2.0-fetch.1":"2023-06-28T01:15:58.006Z","8.1.4":"2023-06-28T02:50:23.048Z","8.2.0":"2023-06-28T23:06:21.662Z","8.3.0":"2023-07-07T13:25:39.529Z","8.3.1":"2023-07-25T22:52:57.276Z","8.3.1-rsc.0":"2023-08-03T16:52:52.709Z","9.0.0-rsc.0":"2023-08-03T19:02:06.970Z","8.3.2-canary.0":"2023-08-03T19:49:14.330Z","9.0.0-rsc.1":"2023-08-03T20:02:35.521Z","8.3.2":"2023-08-04T21:37:13.559Z","9.0.0-rsc.2":"2023-08-05T01:55:54.741Z","9.0.0-rsc.3":"2023-08-06T06:55:01.331Z","8.4.0":"2023-08-07T13:48:54.957Z","8.4.1":"2023-08-07T14:46:26.656Z","8.4.2":"2023-08-09T20:10:10.788Z","8.4.2-canary.0":"2023-08-16T18:37:01.003Z","8.4.3":"2023-08-17T18:17:33.763Z","8.4.4":"2023-10-24T10:51:00.499Z","8.4.5":"2024-01-11T14:22:17.129Z","8.4.6":"2024-01-25T13:08:50.163Z"},"author":{"name":"Sanity.io","email":"hello@sanity.io"},"license":"MIT","readmeFilename":"README.md","keywords":["request","http","fetch"],"homepage":"https://github.com/sanity-io/get-it#readme","repository":{"type":"git","url":"git+https://github.com/sanity-io/get-it.git"},"bugs":{"url":"https://github.com/sanity-io/get-it/issues"}}